
main.elf:     file format elf32-littleriscv


Disassembly of section .init:

00000000 <InterruptVector>:
   0:	5340006f          	j	534 <handle_reset>
   4:	00000000          	.word	0x00000000
   8:	000005b2          	.word	0x000005b2
   c:	000005b0          	.word	0x000005b0
	...
  30:	000005b0          	.word	0x000005b0
  34:	00000000          	.word	0x00000000
  38:	000005b0          	.word	0x000005b0
  3c:	00000000          	.word	0x00000000
  40:	000005b0          	.word	0x000005b0
  44:	000005b0          	.word	0x000005b0
  48:	000005b0          	.word	0x000005b0
  4c:	000005b0          	.word	0x000005b0
  50:	000005b0          	.word	0x000005b0
  54:	000005b0          	.word	0x000005b0
  58:	000005b0          	.word	0x000005b0
  5c:	000005b0          	.word	0x000005b0
  60:	000005b0          	.word	0x000005b0
  64:	000005b0          	.word	0x000005b0
  68:	000005b0          	.word	0x000005b0
  6c:	000005b0          	.word	0x000005b0
  70:	000005b0          	.word	0x000005b0
  74:	000005b0          	.word	0x000005b0
  78:	000005b0          	.word	0x000005b0
  7c:	000005b0          	.word	0x000005b0
  80:	000005b0          	.word	0x000005b0
  84:	000005b0          	.word	0x000005b0
  88:	000005b0          	.word	0x000005b0
  8c:	000005b0          	.word	0x000005b0
  90:	000005b0          	.word	0x000005b0
  94:	000005b0          	.word	0x000005b0
  98:	000005b0          	.word	0x000005b0
  9c:	0000                	.insn	2, 0x
	...

Disassembly of section .text:

000000a0 <__mulsi3>:
      a0:	862a                	mv	a2,a0
      a2:	4501                	li	a0,0
      a4:	0015f693          	and	a3,a1,1
      a8:	c291                	beqz	a3,ac <__mulsi3+0xc>
      aa:	9532                	add	a0,a0,a2
      ac:	8185                	srl	a1,a1,0x1
      ae:	0606                	sll	a2,a2,0x1
      b0:	f9f5                	bnez	a1,a4 <__mulsi3+0x4>
      b2:	8082                	ret
      b4:	0000                	unimp
	...

000000b8 <__divsi3>:
      b8:	02054e63          	bltz	a0,f4 <__umodsi3+0x8>
      bc:	0405c363          	bltz	a1,102 <__umodsi3+0x16>

000000c0 <__hidden___udivsi3>:
      c0:	862e                	mv	a2,a1
      c2:	85aa                	mv	a1,a0
      c4:	557d                	li	a0,-1
      c6:	c215                	beqz	a2,ea <__hidden___udivsi3+0x2a>
      c8:	4685                	li	a3,1
      ca:	00b67863          	bgeu	a2,a1,da <__hidden___udivsi3+0x1a>
      ce:	00c05663          	blez	a2,da <__hidden___udivsi3+0x1a>
      d2:	0606                	sll	a2,a2,0x1
      d4:	0686                	sll	a3,a3,0x1
      d6:	feb66ce3          	bltu	a2,a1,ce <__hidden___udivsi3+0xe>
      da:	4501                	li	a0,0
      dc:	00c5e463          	bltu	a1,a2,e4 <__hidden___udivsi3+0x24>
      e0:	8d91                	sub	a1,a1,a2
      e2:	8d55                	or	a0,a0,a3
      e4:	8285                	srl	a3,a3,0x1
      e6:	8205                	srl	a2,a2,0x1
      e8:	faf5                	bnez	a3,dc <__hidden___udivsi3+0x1c>
      ea:	8082                	ret

000000ec <__umodsi3>:
      ec:	8286                	mv	t0,ra
      ee:	3fc9                	jal	c0 <__hidden___udivsi3>
      f0:	852e                	mv	a0,a1
      f2:	8282                	jr	t0
      f4:	40a00533          	neg	a0,a0
      f8:	00b04763          	bgtz	a1,106 <__umodsi3+0x1a>
      fc:	40b005b3          	neg	a1,a1
     100:	b7c1                	j	c0 <__hidden___udivsi3>
     102:	40b005b3          	neg	a1,a1
     106:	8286                	mv	t0,ra
     108:	3f65                	jal	c0 <__hidden___udivsi3>
     10a:	40a00533          	neg	a0,a0
     10e:	8282                	jr	t0

00000110 <__modsi3>:
     110:	8286                	mv	t0,ra
     112:	0005c763          	bltz	a1,120 <__modsi3+0x10>
     116:	00054963          	bltz	a0,128 <__modsi3+0x18>
     11a:	375d                	jal	c0 <__hidden___udivsi3>
     11c:	852e                	mv	a0,a1
     11e:	8282                	jr	t0
     120:	40b005b3          	neg	a1,a1
     124:	fe055be3          	bgez	a0,11a <__modsi3+0xa>
     128:	40a00533          	neg	a0,a0
     12c:	3f51                	jal	c0 <__hidden___udivsi3>
     12e:	40b00533          	neg	a0,a1
     132:	8282                	jr	t0
	...

00000136 <mini_pad>:
     136:	1131                	add	sp,sp,-20
     138:	c426                	sw	s1,8(sp)
     13a:	c806                	sw	ra,16(sp)
     13c:	c622                	sw	s0,12(sp)
     13e:	84ae                	mv	s1,a1
     140:	87aa                	mv	a5,a0
     142:	85b2                	mv	a1,a2
     144:	c699                	beqz	a3,152 <mini_pad+0x1c>
     146:	4301                	li	t1,0
     148:	0096d763          	bge	a3,s1,156 <mini_pad+0x20>
     14c:	84b6                	mv	s1,a3
     14e:	4305                	li	t1,1
     150:	a019                	j	156 <mini_pad+0x20>
     152:	4301                	li	t1,0
     154:	86a6                	mv	a3,s1
     156:	40968433          	sub	s0,a3,s1
     15a:	00045363          	bgez	s0,160 <mini_pad+0x2a>
     15e:	4401                	li	s0,0
     160:	8622                	mv	a2,s0
     162:	853a                	mv	a0,a4
     164:	c23e                	sw	a5,4(sp)
     166:	c01a                	sw	t1,0(sp)
     168:	796000ef          	jal	8fe <memset>
     16c:	4302                	lw	t1,0(sp)
     16e:	4792                	lw	a5,4(sp)
     170:	872a                	mv	a4,a0
     172:	008506b3          	add	a3,a0,s0
     176:	4601                	li	a2,0
     178:	40c485b3          	sub	a1,s1,a2
     17c:	04b04263          	bgtz	a1,1c0 <mini_pad+0x8a>
     180:	0004d363          	bgez	s1,186 <mini_pad+0x50>
     184:	4481                	li	s1,0
     186:	009685b3          	add	a1,a3,s1
     18a:	40e58533          	sub	a0,a1,a4
     18e:	02030463          	beqz	t1,1b6 <mini_pad+0x80>
     192:	02b77263          	bgeu	a4,a1,1b6 <mini_pad+0x80>
     196:	02a00793          	li	a5,42
     19a:	fef58fa3          	sb	a5,-1(a1)
     19e:	fff58693          	add	a3,a1,-1
     1a2:	00d77a63          	bgeu	a4,a3,1b6 <mini_pad+0x80>
     1a6:	fef58f23          	sb	a5,-2(a1)
     1aa:	ffe58693          	add	a3,a1,-2
     1ae:	00d77463          	bgeu	a4,a3,1b6 <mini_pad+0x80>
     1b2:	fef58ea3          	sb	a5,-3(a1)
     1b6:	40c2                	lw	ra,16(sp)
     1b8:	4432                	lw	s0,12(sp)
     1ba:	44a2                	lw	s1,8(sp)
     1bc:	0151                	add	sp,sp,20
     1be:	8082                	ret
     1c0:	00c785b3          	add	a1,a5,a2
     1c4:	0005c503          	lbu	a0,0(a1)
     1c8:	00c685b3          	add	a1,a3,a2
     1cc:	0605                	add	a2,a2,1
     1ce:	00a58023          	sb	a0,0(a1)
     1d2:	b75d                	j	178 <mini_pad+0x42>

000001d4 <DelaySysTick>:
     1d4:	e000f7b7          	lui	a5,0xe000f
     1d8:	479c                	lw	a5,8(a5)
     1da:	e000f737          	lui	a4,0xe000f
     1de:	953e                	add	a0,a0,a5
     1e0:	471c                	lw	a5,8(a4)
     1e2:	8f89                	sub	a5,a5,a0
     1e4:	fe07cee3          	bltz	a5,1e0 <DelaySysTick+0xc>
     1e8:	8082                	ret

000001ea <mini_itoa.part.0>:
     1ea:	1101                	add	sp,sp,-32
     1ec:	ce06                	sw	ra,28(sp)
     1ee:	cc22                	sw	s0,24(sp)
     1f0:	ca26                	sw	s1,20(sp)
     1f2:	c002                	sw	zero,0(sp)
     1f4:	832a                	mv	t1,a0
     1f6:	00055763          	bgez	a0,204 <mini_itoa.part.0+0x1a>
     1fa:	e689                	bnez	a3,204 <mini_itoa.part.0+0x1a>
     1fc:	4785                	li	a5,1
     1fe:	40a00333          	neg	t1,a0
     202:	c03e                	sw	a5,0(sp)
     204:	8a05                	and	a2,a2,1
     206:	06100413          	li	s0,97
     20a:	c219                	beqz	a2,210 <mini_itoa.part.0+0x26>
     20c:	04100413          	li	s0,65
     210:	84ba                	mv	s1,a4
     212:	1459                	add	s0,s0,-10
     214:	851a                	mv	a0,t1
     216:	c83a                	sw	a4,16(sp)
     218:	c21a                	sw	t1,4(sp)
     21a:	c62e                	sw	a1,12(sp)
     21c:	c41a                	sw	t1,8(sp)
     21e:	35f9                	jal	ec <__umodsi3>
     220:	47a5                	li	a5,9
     222:	4322                	lw	t1,8(sp)
     224:	45b2                	lw	a1,12(sp)
     226:	4742                	lw	a4,16(sp)
     228:	0ff57693          	zext.b	a3,a0
     22c:	06a7e163          	bltu	a5,a0,28e <mini_itoa.part.0+0xa4>
     230:	03068693          	add	a3,a3,48
     234:	0ff6f693          	zext.b	a3,a3
     238:	00148793          	add	a5,s1,1
     23c:	00d48023          	sb	a3,0(s1)
     240:	851a                	mv	a0,t1
     242:	c83a                	sw	a4,16(sp)
     244:	c63e                	sw	a5,12(sp)
     246:	c42e                	sw	a1,8(sp)
     248:	3da5                	jal	c0 <__hidden___udivsi3>
     24a:	4692                	lw	a3,4(sp)
     24c:	45a2                	lw	a1,8(sp)
     24e:	47b2                	lw	a5,12(sp)
     250:	4742                	lw	a4,16(sp)
     252:	832a                	mv	t1,a0
     254:	02b6fb63          	bgeu	a3,a1,28a <mini_itoa.part.0+0xa0>
     258:	4682                	lw	a3,0(sp)
     25a:	c699                	beqz	a3,268 <mini_itoa.part.0+0x7e>
     25c:	02d00693          	li	a3,45
     260:	00d78023          	sb	a3,0(a5) # e000f000 <__global_pointer$+0xc000e800>
     264:	00248793          	add	a5,s1,2
     268:	40e78533          	sub	a0,a5,a4
     26c:	01f55693          	srl	a3,a0,0x1f
     270:	96aa                	add	a3,a3,a0
     272:	00078023          	sb	zero,0(a5)
     276:	8685                	sra	a3,a3,0x1
     278:	4601                	li	a2,0
     27a:	17fd                	add	a5,a5,-1
     27c:	00d64b63          	blt	a2,a3,292 <mini_itoa.part.0+0xa8>
     280:	40f2                	lw	ra,28(sp)
     282:	4462                	lw	s0,24(sp)
     284:	44d2                	lw	s1,20(sp)
     286:	6105                	add	sp,sp,32
     288:	8082                	ret
     28a:	84be                	mv	s1,a5
     28c:	b761                	j	214 <mini_itoa.part.0+0x2a>
     28e:	96a2                	add	a3,a3,s0
     290:	b755                	j	234 <mini_itoa.part.0+0x4a>
     292:	00c705b3          	add	a1,a4,a2
     296:	0007c283          	lbu	t0,0(a5)
     29a:	0005c303          	lbu	t1,0(a1)
     29e:	0605                	add	a2,a2,1
     2a0:	00558023          	sb	t0,0(a1)
     2a4:	00678023          	sb	t1,0(a5)
     2a8:	bfc9                	j	27a <mini_itoa.part.0+0x90>

000002aa <ssd1306_i2c_setup>:
void ssd1306_i2c_setup(void)
{
	uint16_t tempreg;
	
	// Reset I2C1 to init all regs
	RCC->APB1PRSTR |= RCC_APB1Periph_I2C1;
     2aa:	400217b7          	lui	a5,0x40021
     2ae:	4b98                	lw	a4,16(a5)
     2b0:	002006b7          	lui	a3,0x200
     2b4:	8f55                	or	a4,a4,a3
     2b6:	cb98                	sw	a4,16(a5)
	RCC->APB1PRSTR &= ~RCC_APB1Periph_I2C1;
     2b8:	4b98                	lw	a4,16(a5)
     2ba:	ffe006b7          	lui	a3,0xffe00
     2be:	16fd                	add	a3,a3,-1 # ffdfffff <__global_pointer$+0xdfdff7ff>
     2c0:	8f75                	and	a4,a4,a3
     2c2:	cb98                	sw	a4,16(a5)
	
	// set freq
	tempreg = I2C1->CTLR2;
     2c4:	400057b7          	lui	a5,0x40005
     2c8:	4047d703          	lhu	a4,1028(a5) # 40005404 <__global_pointer$+0x20004c04>
	tempreg &= ~I2C_CTLR2_FREQ;
     2cc:	66c1                	lui	a3,0x10
     2ce:	fc068693          	add	a3,a3,-64 # ffc0 <main.c.5db06c59+0xda4f>
     2d2:	8f75                	and	a4,a4,a3
	tempreg |= (FUNCONF_SYSTEM_CORE_CLOCK/SSD1306_I2C_PRERATE)&I2C_CTLR2_FREQ;
     2d4:	01876713          	or	a4,a4,24
	I2C1->CTLR2 = tempreg;
     2d8:	40e79223          	sh	a4,1028(a5)
	tempreg = (FUNCONF_SYSTEM_CORE_CLOCK/(25*SSD1306_I2C_CLKRATE))&I2C_CKCFGR_CCR;
	tempreg |= I2C_CKCFGR_DUTY;
#endif
	tempreg |= I2C_CKCFGR_FS;
#endif
	I2C1->CKCFGR = tempreg;
     2dc:	7771                	lui	a4,0xffffc
     2de:	0705                	add	a4,a4,1 # ffffc001 <__global_pointer$+0xdfffb801>
     2e0:	40e79e23          	sh	a4,1052(a5)
	// initialize the state
	ssd1306_i2c_irq_state = 0;
#endif
	
	// Enable I2C
	I2C1->CTLR1 |= I2C_CTLR1_PE;
     2e4:	4007d703          	lhu	a4,1024(a5)
     2e8:	00176713          	or	a4,a4,1
     2ec:	40e79023          	sh	a4,1024(a5)

	// set ACK mode
	I2C1->CTLR1 |= I2C_CTLR1_ACK;
     2f0:	4007d703          	lhu	a4,1024(a5)
     2f4:	40076713          	or	a4,a4,1024
     2f8:	40e79023          	sh	a4,1024(a5)
}
     2fc:	8082                	ret

000002fe <ssd1306_drawPixel>:
void ssd1306_drawPixel(uint8_t x, uint8_t y, uint8_t color)
{
	uint16_t addr;
	
	/* clip */
	if(x >= SSD1306_W)
     2fe:	01851793          	sll	a5,a0,0x18
     302:	87e1                	sra	a5,a5,0x18
     304:	0207c963          	bltz	a5,336 <ssd1306_drawPixel+0x38>
		return;
	if(y >= SSD1306_H)
     308:	03f00793          	li	a5,63
     30c:	02b7e563          	bltu	a5,a1,336 <ssd1306_drawPixel+0x38>
		return;
	
	/* compute buffer address */
	addr = x + SSD1306_W*(y/8);
     310:	0035d793          	srl	a5,a1,0x3
     314:	079e                	sll	a5,a5,0x7
	
	/* set/clear bit in buffer */
	if(color)
		ssd1306_buffer[addr] |= (1<<(y&7));
     316:	953e                	add	a0,a0,a5
     318:	200007b7          	lui	a5,0x20000
     31c:	00078793          	mv	a5,a5
     320:	97aa                	add	a5,a5,a0
     322:	899d                	and	a1,a1,7
     324:	4685                	li	a3,1
     326:	0007c703          	lbu	a4,0(a5) # 20000000 <ssd1306_buffer>
     32a:	00b695b3          	sll	a1,a3,a1
	if(color)
     32e:	c609                	beqz	a2,338 <ssd1306_drawPixel+0x3a>
		ssd1306_buffer[addr] |= (1<<(y&7));
     330:	8f4d                	or	a4,a4,a1
	else
		ssd1306_buffer[addr] &= ~(1<<(y&7));
     332:	00e78023          	sb	a4,0(a5)
}
     336:	8082                	ret
		ssd1306_buffer[addr] &= ~(1<<(y&7));
     338:	fff5c593          	not	a1,a1
     33c:	8f6d                	and	a4,a4,a1
     33e:	bfd5                	j	332 <ssd1306_drawPixel+0x34>

00000340 <ssd1306_drawImage.constprop.0>:

/*
 * draw a an image from an array, directly into to the display buffer
 * the color modes allow for overwriting and even layering (sprites!)
 */
void ssd1306_drawImage(uint8_t x, uint8_t y, const unsigned char* input, uint8_t width, uint8_t height, uint8_t color_mode) {
     340:	fd410113          	add	sp,sp,-44
	uint8_t x_absolute;
	uint8_t y_absolute;
	uint8_t pixel;
	uint8_t bytes_to_draw = width / 8;
     344:	0036d793          	srl	a5,a3,0x3
     348:	c03e                	sw	a5,0(sp)
void ssd1306_drawImage(uint8_t x, uint8_t y, const unsigned char* input, uint8_t width, uint8_t height, uint8_t color_mode) {
     34a:	d406                	sw	ra,40(sp)
     34c:	d222                	sw	s0,36(sp)
     34e:	d026                	sw	s1,32(sp)
     350:	c22a                	sw	a0,4(sp)
     352:	c832                	sw	a2,16(sp)
     354:	ca3a                	sw	a4,20(sp)
	uint16_t buffer_addr;

	for (uint8_t line = 0; line < height; line++) {
		y_absolute = y + line;
		if (y_absolute >= SSD1306_H) {
     356:	03f00793          	li	a5,63
     35a:	0cb7e763          	bltu	a5,a1,428 <ssd1306_drawImage.constprop.0+0xe8>
     35e:	4782                	lw	a5,0(sp)
     360:	20000737          	lui	a4,0x20000
     364:	00070713          	mv	a4,a4
     368:	078e                	sll	a5,a5,0x3
     36a:	97aa                	add	a5,a5,a0
     36c:	0ff7f793          	zext.b	a5,a5
     370:	c63e                	sw	a5,12(sp)
     372:	84ae                	mv	s1,a1
		y_absolute = y + line;
     374:	87ae                	mv	a5,a1
	for (uint8_t line = 0; line < height; line++) {
     376:	4401                	li	s0,0
     378:	cc3a                	sw	a4,24(sp)
		// SSD1306 is in vertical mode, yet we want to draw horizontally, which necessitates assembling the output bytes from the input data
		// bitmask for current pixel in vertical (output) byte
		uint8_t v_mask = 1 << (y_absolute & 7);

		for (uint8_t byte = 0; byte < bytes_to_draw; byte++) {
			uint8_t input_byte = input[byte + line * bytes_to_draw];
     37a:	4582                	lw	a1,0(sp)
		uint8_t v_mask = 1 << (y_absolute & 7);
     37c:	4705                	li	a4,1
     37e:	0077f693          	and	a3,a5,7
				x_absolute = x + 8 * (bytes_to_draw - byte) + pixel;
				if (x_absolute >= SSD1306_W) {
					break;
				}
				// looking at the horizontal display, we're drawing bytes bottom to top, not left to right, hence y / 8
				buffer_addr = x_absolute + SSD1306_W * (y_absolute / 8);
     382:	838d                	srl	a5,a5,0x3
		uint8_t v_mask = 1 << (y_absolute & 7);
     384:	00d716b3          	sll	a3,a4,a3
				buffer_addr = x_absolute + SSD1306_W * (y_absolute / 8);
     388:	079e                	sll	a5,a5,0x7
			uint8_t input_byte = input[byte + line * bytes_to_draw];
     38a:	8522                	mv	a0,s0
		uint8_t v_mask = 1 << (y_absolute & 7);
     38c:	ce36                	sw	a3,28(sp)
				buffer_addr = x_absolute + SSD1306_W * (y_absolute / 8);
     38e:	c43e                	sw	a5,8(sp)
			uint8_t input_byte = input[byte + line * bytes_to_draw];
     390:	3b01                	jal	a0 <__mulsi3>
				uint8_t input_pixel = input_byte & (1 << pixel);

				switch (color_mode) {
					case 0:
						// write pixels as they are
						ssd1306_buffer[buffer_addr] = (ssd1306_buffer[buffer_addr] & ~v_mask) | (input_pixel ? v_mask : 0);
     392:	46f2                	lw	a3,28(sp)
     394:	47c2                	lw	a5,16(sp)
     396:	06e2                	sll	a3,a3,0x18
     398:	953e                	add	a0,a0,a5
     39a:	86e1                	sra	a3,a3,0x18
				buffer_addr = x_absolute + SSD1306_W * (y_absolute / 8);
     39c:	47b2                	lw	a5,12(sp)
						ssd1306_buffer[buffer_addr] = (ssd1306_buffer[buffer_addr] & ~v_mask) | (input_pixel ? v_mask : 0);
     39e:	fff6c713          	not	a4,a3
     3a2:	ce3a                	sw	a4,28(sp)
			uint8_t input_byte = input[byte + line * bytes_to_draw];
     3a4:	00054703          	lbu	a4,0(a0)
     3a8:	83ba                	mv	t2,a4
				if (x_absolute >= SSD1306_W) {
     3aa:	01879713          	sll	a4,a5,0x18
     3ae:	8761                	sra	a4,a4,0x18
     3b0:	04074763          	bltz	a4,3fe <ssd1306_drawImage.constprop.0+0xbe>
     3b4:	4722                	lw	a4,8(sp)
     3b6:	4581                	li	a1,0
     3b8:	00e78633          	add	a2,a5,a4
     3bc:	4762                	lw	a4,24(sp)
     3be:	963a                	add	a2,a2,a4
						ssd1306_buffer[buffer_addr] = (ssd1306_buffer[buffer_addr] & ~v_mask) | (input_pixel ? v_mask : 0);
     3c0:	4372                	lw	t1,28(sp)
     3c2:	00064703          	lbu	a4,0(a2)
     3c6:	82b6                	mv	t0,a3
     3c8:	00677733          	and	a4,a4,t1
				uint8_t input_pixel = input_byte & (1 << pixel);
     3cc:	4305                	li	t1,1
     3ce:	00b31333          	sll	t1,t1,a1
						ssd1306_buffer[buffer_addr] = (ssd1306_buffer[buffer_addr] & ~v_mask) | (input_pixel ? v_mask : 0);
     3d2:	0762                	sll	a4,a4,0x18
     3d4:	0063f333          	and	t1,t2,t1
     3d8:	8761                	sra	a4,a4,0x18
     3da:	00031363          	bnez	t1,3e0 <ssd1306_drawImage.constprop.0+0xa0>
     3de:	4281                	li	t0,0
     3e0:	00576733          	or	a4,a4,t0
     3e4:	00e60023          	sb	a4,0(a2)
			for (pixel = 0; pixel < 8; pixel++) {
     3e8:	471d                	li	a4,7
     3ea:	00e58a63          	beq	a1,a4,3fe <ssd1306_drawImage.constprop.0+0xbe>
				if (x_absolute >= SSD1306_W) {
     3ee:	0585                	add	a1,a1,1
     3f0:	00b78733          	add	a4,a5,a1
     3f4:	0762                	sll	a4,a4,0x18
     3f6:	8761                	sra	a4,a4,0x18
     3f8:	0605                	add	a2,a2,1
     3fa:	fc0753e3          	bgez	a4,3c0 <ssd1306_drawImage.constprop.0+0x80>
		for (uint8_t byte = 0; byte < bytes_to_draw; byte++) {
     3fe:	4712                	lw	a4,4(sp)
     400:	17e1                	add	a5,a5,-8
     402:	0ff7f793          	zext.b	a5,a5
     406:	0505                	add	a0,a0,1
     408:	f8f71ee3          	bne	a4,a5,3a4 <ssd1306_drawImage.constprop.0+0x64>
	for (uint8_t line = 0; line < height; line++) {
     40c:	47d2                	lw	a5,20(sp)
     40e:	0405                	add	s0,s0,1
     410:	0ff47413          	zext.b	s0,s0
     414:	00f47a63          	bgeu	s0,a5,428 <ssd1306_drawImage.constprop.0+0xe8>
		y_absolute = y + line;
     418:	008487b3          	add	a5,s1,s0
     41c:	0ff7f793          	zext.b	a5,a5
		if (y_absolute >= SSD1306_H) {
     420:	03f00713          	li	a4,63
     424:	f4f77be3          	bgeu	a4,a5,37a <ssd1306_drawImage.constprop.0+0x3a>
		}
		#if SSD1306_LOG_IMAGE == 1
		printf("\n\r");
		#endif
	}
}
     428:	50a2                	lw	ra,40(sp)
     42a:	5412                	lw	s0,36(sp)
     42c:	5482                	lw	s1,32(sp)
     42e:	02c10113          	add	sp,sp,44
     432:	8082                	ret

00000434 <internal_handle_input.constprop.0>:
     434:	e00007b7          	lui	a5,0xe0000
     438:	0f478793          	add	a5,a5,244 # e00000f4 <__global_pointer$+0xbffff8f4>
     43c:	439c                	lw	a5,0(a5)
     43e:	8082                	ret

00000440 <_write.constprop.0>:
     440:	1101                	add	sp,sp,-32
     442:	cc22                	sw	s0,24(sp)
     444:	ce06                	sw	ra,28(sp)
     446:	ca26                	sw	s1,20(sp)
     448:	c02a                	sw	a0,0(sp)
     44a:	c802                	sw	zero,16(sp)
     44c:	842e                	mv	s0,a1
     44e:	e1f9                	bnez	a1,514 <_write.constprop.0+0xd4>
     450:	e00007b7          	lui	a5,0xe0000
     454:	0f478793          	add	a5,a5,244 # e00000f4 <__global_pointer$+0xbffff8f4>
     458:	439c                	lw	a5,0(a5)
     45a:	c789                	beqz	a5,464 <_write.constprop.0+0x24>
     45c:	0807f793          	and	a5,a5,128
     460:	e391                	bnez	a5,464 <_write.constprop.0+0x24>
     462:	3fc9                	jal	434 <internal_handle_input.constprop.0>
     464:	40f2                	lw	ra,28(sp)
     466:	8522                	mv	a0,s0
     468:	4462                	lw	s0,24(sp)
     46a:	44d2                	lw	s1,20(sp)
     46c:	6105                	add	sp,sp,32
     46e:	8082                	ret
     470:	409406b3          	sub	a3,s0,s1
     474:	461d                	li	a2,7
     476:	8736                	mv	a4,a3
     478:	00d65363          	bge	a2,a3,47e <_write.constprop.0+0x3e>
     47c:	471d                	li	a4,7
     47e:	00027637          	lui	a2,0x27
     482:	10160613          	add	a2,a2,257 # 27101 <main.c.5db06c59+0x24b90>
     486:	00032583          	lw	a1,0(t1)
     48a:	0805f513          	and	a0,a1,128
     48e:	ed3d                	bnez	a0,50c <_write.constprop.0+0xcc>
     490:	c981                	beqz	a1,4a0 <_write.constprop.0+0x60>
     492:	c61a                	sw	t1,12(sp)
     494:	c43a                	sw	a4,8(sp)
     496:	c236                	sw	a3,4(sp)
     498:	3f71                	jal	434 <internal_handle_input.constprop.0>
     49a:	4332                	lw	t1,12(sp)
     49c:	4722                	lw	a4,8(sp)
     49e:	4692                	lw	a3,4(sp)
     4a0:	0036a693          	slti	a3,a3,3
     4a4:	4601                	li	a2,0
     4a6:	e299                	bnez	a3,4ac <_write.constprop.0+0x6c>
     4a8:	ffd70613          	add	a2,a4,-3 # 1ffffffd <main.c.5db06c59+0x1fffda8c>
     4ac:	4782                	lw	a5,0(sp)
     4ae:	00348593          	add	a1,s1,3
     4b2:	0808                	add	a0,sp,16
     4b4:	95be                	add	a1,a1,a5
     4b6:	c41a                	sw	t1,8(sp)
     4b8:	c23a                	sw	a4,4(sp)
     4ba:	219d                	jal	920 <memcpy>
     4bc:	4642                	lw	a2,16(sp)
     4be:	4782                	lw	a5,0(sp)
     4c0:	e00006b7          	lui	a3,0xe0000
     4c4:	4322                	lw	t1,8(sp)
     4c6:	4712                	lw	a4,4(sp)
     4c8:	0f868693          	add	a3,a3,248 # e00000f8 <__global_pointer$+0xbffff8f8>
     4cc:	c290                	sw	a2,0(a3)
     4ce:	458d                	li	a1,3
     4d0:	00978633          	add	a2,a5,s1
     4d4:	4681                	li	a3,0
     4d6:	00064283          	lbu	t0,0(a2)
     4da:	0685                	add	a3,a3,1
     4dc:	01068793          	add	a5,a3,16
     4e0:	00278533          	add	a0,a5,sp
     4e4:	00550023          	sb	t0,0(a0)
     4e8:	00d70563          	beq	a4,a3,4f2 <_write.constprop.0+0xb2>
     4ec:	0605                	add	a2,a2,1
     4ee:	feb694e3          	bne	a3,a1,4d6 <_write.constprop.0+0x96>
     4f2:	00470693          	add	a3,a4,4
     4f6:	f806e693          	or	a3,a3,-128
     4fa:	00d10823          	sb	a3,16(sp)
     4fe:	46c2                	lw	a3,16(sp)
     500:	94ba                	add	s1,s1,a4
     502:	00d32023          	sw	a3,0(t1)
     506:	f684c5e3          	blt	s1,s0,470 <_write.constprop.0+0x30>
     50a:	bfa9                	j	464 <_write.constprop.0+0x24>
     50c:	167d                	add	a2,a2,-1
     50e:	fe25                	bnez	a2,486 <_write.constprop.0+0x46>
     510:	8426                	mv	s0,s1
     512:	bf89                	j	464 <_write.constprop.0+0x24>
     514:	e0000337          	lui	t1,0xe0000
     518:	4481                	li	s1,0
     51a:	0f430313          	add	t1,t1,244 # e00000f4 <__global_pointer$+0xbffff8f4>
     51e:	b7e5                	j	506 <_write.constprop.0+0xc6>

00000520 <__puts_uart>:
     520:	1151                	add	sp,sp,-12
     522:	c222                	sw	s0,4(sp)
     524:	c406                	sw	ra,8(sp)
     526:	842e                	mv	s0,a1
     528:	3f21                	jal	440 <_write.constprop.0>
     52a:	40a2                	lw	ra,8(sp)
     52c:	8522                	mv	a0,s0
     52e:	4412                	lw	s0,4(sp)
     530:	0131                	add	sp,sp,12
     532:	8082                	ret

00000534 <handle_reset>:
     534:	20000197          	auipc	gp,0x20000
     538:	2cc18193          	add	gp,gp,716 # 20000800 <__global_pointer$>
     53c:	00018113          	mv	sp,gp
     540:	08000513          	li	a0,128
     544:	30051073          	csrw	mstatus,a0
     548:	468d                	li	a3,3
     54a:	00000517          	auipc	a0,0x0
     54e:	ab650513          	add	a0,a0,-1354 # 0 <InterruptVector>
     552:	8d55                	or	a0,a0,a3
     554:	30551073          	csrw	mtvec,a0
     558:	20000517          	auipc	a0,0x20000
     55c:	aa850513          	add	a0,a0,-1368 # 20000000 <ssd1306_buffer>
     560:	c0018593          	add	a1,gp,-1024 # 20000400 <_ebss>
     564:	4601                	li	a2,0
     566:	00b55663          	bge	a0,a1,572 <handle_reset+0x3e>
     56a:	c110                	sw	a2,0(a0)
     56c:	0511                	add	a0,a0,4
     56e:	feb54ee3          	blt	a0,a1,56a <handle_reset+0x36>
     572:	00001517          	auipc	a0,0x1
     576:	60650513          	add	a0,a0,1542 # 1b78 <_data_lma>
     57a:	20000597          	auipc	a1,0x20000
     57e:	a8658593          	add	a1,a1,-1402 # 20000000 <ssd1306_buffer>
     582:	20000617          	auipc	a2,0x20000
     586:	a7e60613          	add	a2,a2,-1410 # 20000000 <ssd1306_buffer>
     58a:	00c58863          	beq	a1,a2,59a <handle_reset+0x66>
     58e:	4114                	lw	a3,0(a0)
     590:	c194                	sw	a3,0(a1)
     592:	0511                	add	a0,a0,4
     594:	0591                	add	a1,a1,4
     596:	fec59ae3          	bne	a1,a2,58a <handle_reset+0x56>
     59a:	e000f7b7          	lui	a5,0xe000f
     59e:	4705                	li	a4,1
     5a0:	c398                	sw	a4,0(a5)
     5a2:	6785                	lui	a5,0x1
     5a4:	9fe78793          	add	a5,a5,-1538 # 9fe <main>
     5a8:	34179073          	csrw	mepc,a5
     5ac:	30200073          	mret

000005b0 <ADC1_IRQHandler>:
     5b0:	a001                	j	5b0 <ADC1_IRQHandler>

000005b2 <NMI_Handler>:
     5b2:	40021737          	lui	a4,0x40021
     5b6:	471c                	lw	a5,8(a4)
     5b8:	008006b7          	lui	a3,0x800
     5bc:	8fd5                	or	a5,a5,a3
     5be:	c71c                	sw	a5,8(a4)

000005c0 <strlen>:
     5c0:	87aa                	mv	a5,a0
     5c2:	0007c703          	lbu	a4,0(a5)
     5c6:	e701                	bnez	a4,5ce <strlen+0xe>
     5c8:	40a78533          	sub	a0,a5,a0
     5cc:	8082                	ret
     5ce:	0785                	add	a5,a5,1
     5d0:	bfcd                	j	5c2 <strlen+0x2>

000005d2 <mini_vpprintf>:
     5d2:	fa410113          	add	sp,sp,-92
     5d6:	caa2                	sw	s0,84(sp)
     5d8:	c8a6                	sw	s1,80(sp)
     5da:	cc86                	sw	ra,88(sp)
     5dc:	c02a                	sw	a0,0(sp)
     5de:	c22e                	sw	a1,4(sp)
     5e0:	8432                	mv	s0,a2
     5e2:	84b6                	mv	s1,a3
     5e4:	ca02                	sw	zero,20(sp)
     5e6:	00044783          	lbu	a5,0(s0)
     5ea:	00140693          	add	a3,s0,1
     5ee:	00f10fa3          	sb	a5,31(sp)
     5f2:	eb81                	bnez	a5,602 <mini_vpprintf+0x30>
     5f4:	40e6                	lw	ra,88(sp)
     5f6:	4456                	lw	s0,84(sp)
     5f8:	4552                	lw	a0,20(sp)
     5fa:	44c6                	lw	s1,80(sp)
     5fc:	05c10113          	add	sp,sp,92
     600:	8082                	ret
     602:	c636                	sw	a3,12(sp)
     604:	02500713          	li	a4,37
     608:	02e78063          	beq	a5,a4,628 <mini_vpprintf+0x56>
     60c:	4612                	lw	a2,4(sp)
     60e:	4782                	lw	a5,0(sp)
     610:	4585                	li	a1,1
     612:	01f10513          	add	a0,sp,31
     616:	9782                	jalr	a5
     618:	46b2                	lw	a3,12(sp)
     61a:	c426                	sw	s1,8(sp)
     61c:	8436                	mv	s0,a3
     61e:	47d2                	lw	a5,20(sp)
     620:	44a2                	lw	s1,8(sp)
     622:	97aa                	add	a5,a5,a0
     624:	ca3e                	sw	a5,20(sp)
     626:	b7c1                	j	5e6 <mini_vpprintf+0x14>
     628:	00144703          	lbu	a4,1(s0)
     62c:	03000613          	li	a2,48
     630:	03000693          	li	a3,48
     634:	00e10fa3          	sb	a4,31(sp)
     638:	c632                	sw	a2,12(sp)
     63a:	00240793          	add	a5,s0,2
     63e:	08d71263          	bne	a4,a3,6c2 <mini_vpprintf+0xf0>
     642:	843e                	mv	s0,a5
     644:	4681                	li	a3,0
     646:	4781                	li	a5,0
     648:	45a5                	li	a1,9
     64a:	a811                	j	65e <mini_vpprintf+0x8c>
     64c:	00279713          	sll	a4,a5,0x2
     650:	0405                	add	s0,s0,1
     652:	97ba                	add	a5,a5,a4
     654:	fff44703          	lbu	a4,-1(s0)
     658:	0786                	sll	a5,a5,0x1
     65a:	97b2                	add	a5,a5,a2
     65c:	4685                	li	a3,1
     65e:	fd070613          	add	a2,a4,-48 # 40020fd0 <__global_pointer$+0x200207d0>
     662:	0ff67513          	zext.b	a0,a2
     666:	fea5f3e3          	bgeu	a1,a0,64c <mini_vpprintf+0x7a>
     66a:	c299                	beqz	a3,670 <mini_vpprintf+0x9e>
     66c:	00e10fa3          	sb	a4,31(sp)
     670:	c83e                	sw	a5,16(sp)
     672:	46e1                	li	a3,24
     674:	00f6d363          	bge	a3,a5,67a <mini_vpprintf+0xa8>
     678:	c836                	sw	a3,16(sp)
     67a:	06c00613          	li	a2,108
     67e:	4681                	li	a3,0
     680:	00c71863          	bne	a4,a2,690 <mini_vpprintf+0xbe>
     684:	00044703          	lbu	a4,0(s0)
     688:	4685                	li	a3,1
     68a:	0405                	add	s0,s0,1
     68c:	00e10fa3          	sb	a4,31(sp)
     690:	01f14603          	lbu	a2,31(sp)
     694:	06400713          	li	a4,100
     698:	06e60563          	beq	a2,a4,702 <mini_vpprintf+0x130>
     69c:	02c76763          	bltu	a4,a2,6ca <mini_vpprintf+0xf8>
     6a0:	05800793          	li	a5,88
     6a4:	0af60063          	beq	a2,a5,744 <mini_vpprintf+0x172>
     6a8:	06300793          	li	a5,99
     6ac:	0af60d63          	beq	a2,a5,766 <mini_vpprintf+0x194>
     6b0:	d231                	beqz	a2,5f4 <mini_vpprintf+0x22>
     6b2:	4612                	lw	a2,4(sp)
     6b4:	4782                	lw	a5,0(sp)
     6b6:	4585                	li	a1,1
     6b8:	01f10513          	add	a0,sp,31
     6bc:	9782                	jalr	a5
     6be:	c426                	sw	s1,8(sp)
     6c0:	bfb9                	j	61e <mini_vpprintf+0x4c>
     6c2:	02000693          	li	a3,32
     6c6:	c636                	sw	a3,12(sp)
     6c8:	bfad                	j	642 <mini_vpprintf+0x70>
     6ca:	07500713          	li	a4,117
     6ce:	02e60a63          	beq	a2,a4,702 <mini_vpprintf+0x130>
     6d2:	07800713          	li	a4,120
     6d6:	06e60763          	beq	a2,a4,744 <mini_vpprintf+0x172>
     6da:	07300713          	li	a4,115
     6de:	fce61ae3          	bne	a2,a4,6b2 <mini_vpprintf+0xe0>
     6e2:	cc3e                	sw	a5,24(sp)
     6e4:	00448793          	add	a5,s1,4
     6e8:	4084                	lw	s1,0(s1)
     6ea:	c43e                	sw	a5,8(sp)
     6ec:	8526                	mv	a0,s1
     6ee:	3dc9                	jal	5c0 <strlen>
     6f0:	47e2                	lw	a5,24(sp)
     6f2:	85aa                	mv	a1,a0
     6f4:	08f05663          	blez	a5,780 <mini_vpprintf+0x1ae>
     6f8:	46c2                	lw	a3,16(sp)
     6fa:	4632                	lw	a2,12(sp)
     6fc:	1838                	add	a4,sp,56
     6fe:	8526                	mv	a0,s1
     700:	a01d                	j	726 <mini_vpprintf+0x154>
     702:	00448793          	add	a5,s1,4
     706:	c43e                	sw	a5,8(sp)
     708:	c695                	beqz	a3,734 <mini_vpprintf+0x162>
     70a:	f8b60613          	add	a2,a2,-117
     70e:	1018                	add	a4,sp,32
     710:	00163693          	seqz	a3,a2
     714:	4088                	lw	a0,0(s1)
     716:	4601                	li	a2,0
     718:	45a9                	li	a1,10
     71a:	3cc1                	jal	1ea <mini_itoa.part.0>
     71c:	46c2                	lw	a3,16(sp)
     71e:	4632                	lw	a2,12(sp)
     720:	1838                	add	a4,sp,56
     722:	85aa                	mv	a1,a0
     724:	1008                	add	a0,sp,32
     726:	3c01                	jal	136 <mini_pad>
     728:	4612                	lw	a2,4(sp)
     72a:	85aa                	mv	a1,a0
     72c:	1828                	add	a0,sp,56
     72e:	4782                	lw	a5,0(sp)
     730:	9782                	jalr	a5
     732:	b5f5                	j	61e <mini_vpprintf+0x4c>
     734:	07500793          	li	a5,117
     738:	1018                	add	a4,sp,32
     73a:	4685                	li	a3,1
     73c:	fcf60ce3          	beq	a2,a5,714 <mini_vpprintf+0x142>
     740:	4681                	li	a3,0
     742:	bfc9                	j	714 <mini_vpprintf+0x142>
     744:	4088                	lw	a0,0(s1)
     746:	fa860613          	add	a2,a2,-88
     74a:	00448793          	add	a5,s1,4
     74e:	1018                	add	a4,sp,32
     750:	4685                	li	a3,1
     752:	00163613          	seqz	a2,a2
     756:	45c1                	li	a1,16
     758:	c43e                	sw	a5,8(sp)
     75a:	3c41                	jal	1ea <mini_itoa.part.0>
     75c:	46c2                	lw	a3,16(sp)
     75e:	4632                	lw	a2,12(sp)
     760:	85aa                	mv	a1,a0
     762:	1838                	add	a4,sp,56
     764:	b7c1                	j	724 <mini_vpprintf+0x152>
     766:	00448793          	add	a5,s1,4
     76a:	c43e                	sw	a5,8(sp)
     76c:	409c                	lw	a5,0(s1)
     76e:	46c2                	lw	a3,16(sp)
     770:	4632                	lw	a2,12(sp)
     772:	00f10fa3          	sb	a5,31(sp)
     776:	1838                	add	a4,sp,56
     778:	4585                	li	a1,1
     77a:	01f10513          	add	a0,sp,31
     77e:	b765                	j	726 <mini_vpprintf+0x154>
     780:	4612                	lw	a2,4(sp)
     782:	8526                	mv	a0,s1
     784:	b76d                	j	72e <mini_vpprintf+0x15c>

00000786 <printf>:
     786:	fdc10113          	add	sp,sp,-36
     78a:	ca32                	sw	a2,20(sp)
     78c:	862a                	mv	a2,a0
     78e:	c82e                	sw	a1,16(sp)
     790:	cc36                	sw	a3,24(sp)
     792:	4581                	li	a1,0
     794:	0814                	add	a3,sp,16
     796:	52000513          	li	a0,1312
     79a:	c606                	sw	ra,12(sp)
     79c:	ce3a                	sw	a4,28(sp)
     79e:	d03e                	sw	a5,32(sp)
     7a0:	c036                	sw	a3,0(sp)
     7a2:	3d05                	jal	5d2 <mini_vpprintf>
     7a4:	40b2                	lw	ra,12(sp)
     7a6:	02410113          	add	sp,sp,36
     7aa:	8082                	ret

000007ac <ssd1306_i2c_error.isra.0>:
 * error handler
 */
uint8_t ssd1306_i2c_error(uint8_t err)
{
	// report error
	printf("ssd1306_i2c_error - timeout waiting for %s\n\r", errstr[err]);
     7ac:	6785                	lui	a5,0x1
     7ae:	050a                	sll	a0,a0,0x2
     7b0:	e7078793          	add	a5,a5,-400 # e70 <errstr>
     7b4:	97aa                	add	a5,a5,a0
     7b6:	438c                	lw	a1,0(a5)
     7b8:	6505                	lui	a0,0x1
uint8_t ssd1306_i2c_error(uint8_t err)
     7ba:	1151                	add	sp,sp,-12
	printf("ssd1306_i2c_error - timeout waiting for %s\n\r", errstr[err]);
     7bc:	dec50513          	add	a0,a0,-532 # dec <main+0x3ee>
uint8_t ssd1306_i2c_error(uint8_t err)
     7c0:	c406                	sw	ra,8(sp)
	printf("ssd1306_i2c_error - timeout waiting for %s\n\r", errstr[err]);
     7c2:	37d1                	jal	786 <printf>
	
	// reset & initialize I2C
	ssd1306_i2c_setup();

	return 1;
}
     7c4:	40a2                	lw	ra,8(sp)
     7c6:	0131                	add	sp,sp,12
	ssd1306_i2c_setup();
     7c8:	b4cd                	j	2aa <ssd1306_i2c_setup>

000007ca <ssd1306_i2c_send.constprop.0.isra.0>:
uint8_t ssd1306_i2c_send(uint8_t addr, uint8_t *data, uint8_t sz)
{
	int32_t timeout;
	
	// wait for not busy
	timeout = TIMEOUT_MAX;
     7ca:	6761                	lui	a4,0x18
	while((I2C1->STAR2 & I2C_STAR2_BUSY) && (timeout--));
     7cc:	400057b7          	lui	a5,0x40005
	timeout = TIMEOUT_MAX;
     7d0:	6a070713          	add	a4,a4,1696 # 186a0 <main.c.5db06c59+0x1612f>
	while((I2C1->STAR2 & I2C_STAR2_BUSY) && (timeout--));
     7d4:	40078793          	add	a5,a5,1024 # 40005400 <__global_pointer$+0x20004c00>
     7d8:	567d                	li	a2,-1
     7da:	0187d683          	lhu	a3,24(a5)
     7de:	8a89                	and	a3,a3,2
     7e0:	c2f1                	beqz	a3,8a4 <ssd1306_i2c_send.constprop.0.isra.0+0xda>
     7e2:	177d                	add	a4,a4,-1
     7e4:	fec71be3          	bne	a4,a2,7da <ssd1306_i2c_send.constprop.0.isra.0+0x10>
	if(timeout==-1)
		return ssd1306_i2c_error(0);
     7e8:	4501                	li	a0,0
     7ea:	a01d                	j	810 <ssd1306_i2c_send.constprop.0.isra.0+0x46>
	// send data one byte at a time
	while(sz--)
	{
		// wait for TX Empty
		timeout = TIMEOUT_MAX;
		while(!(I2C1->STAR1 & I2C_STAR1_TXE) && (timeout--));
     7ec:	40005737          	lui	a4,0x40005
	while(sz--)
     7f0:	95aa                	add	a1,a1,a0
		while(!(I2C1->STAR1 & I2C_STAR1_TXE) && (timeout--));
     7f2:	40070713          	add	a4,a4,1024 # 40005400 <__global_pointer$+0x20004c00>
	while(sz--)
     7f6:	0ff5f593          	zext.b	a1,a1
     7fa:	67e1                	lui	a5,0x18
     7fc:	6a178793          	add	a5,a5,1697 # 186a1 <main.c.5db06c59+0x16130>
		while(!(I2C1->STAR1 & I2C_STAR1_TXE) && (timeout--));
     800:	01475683          	lhu	a3,20(a4)
     804:	0806f693          	and	a3,a3,128
     808:	e689                	bnez	a3,812 <ssd1306_i2c_send.constprop.0.isra.0+0x48>
     80a:	17fd                	add	a5,a5,-1
     80c:	fbf5                	bnez	a5,800 <ssd1306_i2c_send.constprop.0.isra.0+0x36>
		if(timeout==-1)
			return ssd1306_i2c_error(3);
     80e:	450d                	li	a0,3
		return ssd1306_i2c_error(0);
     810:	bf71                	j	7ac <ssd1306_i2c_error.isra.0>
		
		// send command
		I2C1->DATAR = *data++;
     812:	00054783          	lbu	a5,0(a0)
     816:	0505                	add	a0,a0,1
     818:	00f71823          	sh	a5,16(a4)
	while(sz--)
     81c:	0ff57793          	zext.b	a5,a0
     820:	fcf59de3          	bne	a1,a5,7fa <ssd1306_i2c_send.constprop.0.isra.0+0x30>
	}

	// wait for tx complete
	timeout = TIMEOUT_MAX;
     824:	66e1                	lui	a3,0x18
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
     826:	40005737          	lui	a4,0x40005
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_BYTE_TRANSMITTED)) && (timeout--));
     82a:	00070637          	lui	a2,0x70
	timeout = TIMEOUT_MAX;
     82e:	6a068693          	add	a3,a3,1696 # 186a0 <main.c.5db06c59+0x1612f>
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
     832:	40070713          	add	a4,a4,1024 # 40005400 <__global_pointer$+0x20004c00>
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_BYTE_TRANSMITTED)) && (timeout--));
     836:	08460613          	add	a2,a2,132 # 70084 <main.c.5db06c59+0x6db13>
     83a:	55fd                	li	a1,-1
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
     83c:	01475503          	lhu	a0,20(a4)
     840:	01875783          	lhu	a5,24(a4)
     844:	07c2                	sll	a5,a5,0x10
     846:	8fc9                	or	a5,a5,a0
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_BYTE_TRANSMITTED)) && (timeout--));
     848:	8ff1                	and	a5,a5,a2
     84a:	00c78763          	beq	a5,a2,858 <ssd1306_i2c_send.constprop.0.isra.0+0x8e>
     84e:	16fd                	add	a3,a3,-1
     850:	feb696e3          	bne	a3,a1,83c <ssd1306_i2c_send.constprop.0.isra.0+0x72>
	if(timeout==-1)
		return ssd1306_i2c_error(4);
     854:	4511                	li	a0,4
     856:	bf6d                	j	810 <ssd1306_i2c_send.constprop.0.isra.0+0x46>

	// set STOP condition
	I2C1->CTLR1 |= I2C_CTLR1_STOP;
     858:	00075783          	lhu	a5,0(a4)
     85c:	2007e793          	or	a5,a5,512
     860:	00f71023          	sh	a5,0(a4)
	
	// we're happy
	return 0;
}
     864:	8082                	ret
	I2C1->DATAR = addr<<1;
     866:	07800793          	li	a5,120
     86a:	00f71823          	sh	a5,16(a4)
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
     86e:	40005637          	lui	a2,0x40005
	timeout = TIMEOUT_MAX;
     872:	6761                	lui	a4,0x18
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_TRANSMITTER_MODE_SELECTED)) && (timeout--));
     874:	000706b7          	lui	a3,0x70
	timeout = TIMEOUT_MAX;
     878:	6a070713          	add	a4,a4,1696 # 186a0 <main.c.5db06c59+0x1612f>
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
     87c:	40060613          	add	a2,a2,1024 # 40005400 <__global_pointer$+0x20004c00>
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_TRANSMITTER_MODE_SELECTED)) && (timeout--));
     880:	08268693          	add	a3,a3,130 # 70082 <main.c.5db06c59+0x6db11>
     884:	537d                	li	t1,-1
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
     886:	01465283          	lhu	t0,20(a2)
     88a:	01865783          	lhu	a5,24(a2)
     88e:	07c2                	sll	a5,a5,0x10
     890:	0057e7b3          	or	a5,a5,t0
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_TRANSMITTER_MODE_SELECTED)) && (timeout--));
     894:	8ff5                	and	a5,a5,a3
     896:	f4d78be3          	beq	a5,a3,7ec <ssd1306_i2c_send.constprop.0.isra.0+0x22>
     89a:	177d                	add	a4,a4,-1
     89c:	fe6715e3          	bne	a4,t1,886 <ssd1306_i2c_send.constprop.0.isra.0+0xbc>
		return ssd1306_i2c_error(2);
     8a0:	4509                	li	a0,2
     8a2:	b7bd                	j	810 <ssd1306_i2c_send.constprop.0.isra.0+0x46>
	I2C1->CTLR1 |= I2C_CTLR1_START;
     8a4:	0007d703          	lhu	a4,0(a5)
	timeout = TIMEOUT_MAX;
     8a8:	66e1                	lui	a3,0x18
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_MODE_SELECT)) && (timeout--));
     8aa:	00030637          	lui	a2,0x30
	I2C1->CTLR1 |= I2C_CTLR1_START;
     8ae:	10076713          	or	a4,a4,256
     8b2:	00e79023          	sh	a4,0(a5)
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
     8b6:	40005737          	lui	a4,0x40005
	timeout = TIMEOUT_MAX;
     8ba:	6a068693          	add	a3,a3,1696 # 186a0 <main.c.5db06c59+0x1612f>
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
     8be:	40070713          	add	a4,a4,1024 # 40005400 <__global_pointer$+0x20004c00>
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_MODE_SELECT)) && (timeout--));
     8c2:	0605                	add	a2,a2,1 # 30001 <main.c.5db06c59+0x2da90>
     8c4:	537d                	li	t1,-1
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
     8c6:	01475283          	lhu	t0,20(a4)
     8ca:	01875783          	lhu	a5,24(a4)
     8ce:	07c2                	sll	a5,a5,0x10
     8d0:	0057e7b3          	or	a5,a5,t0
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_MODE_SELECT)) && (timeout--));
     8d4:	8ff1                	and	a5,a5,a2
     8d6:	f8c788e3          	beq	a5,a2,866 <ssd1306_i2c_send.constprop.0.isra.0+0x9c>
     8da:	16fd                	add	a3,a3,-1
     8dc:	fe6695e3          	bne	a3,t1,8c6 <ssd1306_i2c_send.constprop.0.isra.0+0xfc>
		return ssd1306_i2c_error(1);
     8e0:	4505                	li	a0,1
     8e2:	b73d                	j	810 <ssd1306_i2c_send.constprop.0.isra.0+0x46>

000008e4 <ssd1306_cmd>:
{
     8e4:	7179                	add	sp,sp,-48
	
	/* build command or data packets */
	if(cmd)
	{
		pkt[0] = 0;
		pkt[1] = *data;
     8e6:	00a100a3          	sb	a0,1(sp)
	else
	{
		pkt[0] = 0x40;
		memcpy(&pkt[1], data, sz);
	}
	return ssd1306_i2c_send(SSD1306_I2C_ADDR, pkt, sz+1);
     8ea:	4589                	li	a1,2
     8ec:	850a                	mv	a0,sp
     8ee:	d606                	sw	ra,44(sp)
		pkt[0] = 0;
     8f0:	00010023          	sb	zero,0(sp)
	return ssd1306_i2c_send(SSD1306_I2C_ADDR, pkt, sz+1);
     8f4:	3dd9                	jal	7ca <ssd1306_i2c_send.constprop.0.isra.0>
}
     8f6:	50b2                	lw	ra,44(sp)
     8f8:	4501                	li	a0,0
     8fa:	6145                	add	sp,sp,48
     8fc:	8082                	ret

000008fe <memset>:
     8fe:	962a                	add	a2,a2,a0
     900:	87aa                	mv	a5,a0
     902:	00c79363          	bne	a5,a2,908 <memset+0xa>
     906:	8082                	ret
     908:	00b78023          	sb	a1,0(a5)
     90c:	0785                	add	a5,a5,1
     90e:	bfd5                	j	902 <memset+0x4>

00000910 <ssd1306_setbuf.constprop.0>:
	memset(ssd1306_buffer, color ? 0xFF : 0x00, sizeof(ssd1306_buffer));
     910:	20000537          	lui	a0,0x20000
     914:	40000613          	li	a2,1024
     918:	4581                	li	a1,0
     91a:	00050513          	mv	a0,a0
     91e:	b7c5                	j	8fe <memset>

00000920 <memcpy>:
     920:	4781                	li	a5,0
     922:	00f61363          	bne	a2,a5,928 <memcpy+0x8>
     926:	8082                	ret
     928:	00f58733          	add	a4,a1,a5
     92c:	00074683          	lbu	a3,0(a4)
     930:	00f50733          	add	a4,a0,a5
     934:	0785                	add	a5,a5,1
     936:	00d70023          	sb	a3,0(a4)
     93a:	b7e5                	j	922 <memcpy+0x2>

0000093c <ssd1306_refresh>:
{
     93c:	7179                	add	sp,sp,-48
	ssd1306_cmd(SSD1306_COLUMNADDR);
     93e:	02100513          	li	a0,33
{
     942:	d606                	sw	ra,44(sp)
     944:	d422                	sw	s0,40(sp)
     946:	d226                	sw	s1,36(sp)
	ssd1306_cmd(SSD1306_COLUMNADDR);
     948:	3f71                	jal	8e4 <ssd1306_cmd>
	ssd1306_cmd(SSD1306_OFFSET);   // Column start address (0 = reset)
     94a:	4501                	li	a0,0
     94c:	3f61                	jal	8e4 <ssd1306_cmd>
	ssd1306_cmd(SSD1306_OFFSET+SSD1306_W-1); // Column end address (127 = reset)
     94e:	07f00513          	li	a0,127
     952:	3f49                	jal	8e4 <ssd1306_cmd>
	ssd1306_cmd(SSD1306_PAGEADDR);
     954:	02200513          	li	a0,34
     958:	3771                	jal	8e4 <ssd1306_cmd>
	ssd1306_cmd(0); // Page start address (0 = reset)
     95a:	4501                	li	a0,0
     95c:	3761                	jal	8e4 <ssd1306_cmd>
	ssd1306_cmd(7); // Page end address
     95e:	20000437          	lui	s0,0x20000
     962:	451d                	li	a0,7
     964:	00040413          	mv	s0,s0
     968:	3fb5                	jal	8e4 <ssd1306_cmd>
    for(i=0;i<sizeof(ssd1306_buffer);i+=SSD1306_PSZ)
     96a:	40040493          	add	s1,s0,1024 # 20000400 <_ebss>
		pkt[0] = 0x40;
     96e:	04000793          	li	a5,64
		memcpy(&pkt[1], data, sz);
     972:	85a2                	mv	a1,s0
     974:	02000613          	li	a2,32
     978:	00110513          	add	a0,sp,1
		pkt[0] = 0x40;
     97c:	00f10023          	sb	a5,0(sp)
		memcpy(&pkt[1], data, sz);
     980:	3745                	jal	920 <memcpy>
	return ssd1306_i2c_send(SSD1306_I2C_ADDR, pkt, sz+1);
     982:	02100593          	li	a1,33
     986:	850a                	mv	a0,sp
     988:	02040413          	add	s0,s0,32
     98c:	3d3d                	jal	7ca <ssd1306_i2c_send.constprop.0.isra.0>
     98e:	fe9410e3          	bne	s0,s1,96e <ssd1306_refresh+0x32>
}
     992:	50b2                	lw	ra,44(sp)
     994:	5422                	lw	s0,40(sp)
     996:	5492                	lw	s1,36(sp)
     998:	6145                	add	sp,sp,48
     99a:	8082                	ret

0000099c <SystemInit>:
     99c:	400227b7          	lui	a5,0x40022
     9a0:	4705                	li	a4,1
     9a2:	c398                	sw	a4,0(a5)
     9a4:	400217b7          	lui	a5,0x40021
     9a8:	01080737          	lui	a4,0x1080
     9ac:	0007a223          	sw	zero,4(a5) # 40021004 <__global_pointer$+0x20020804>
     9b0:	08170713          	add	a4,a4,129 # 1080081 <main.c.5db06c59+0x107db10>
     9b4:	c398                	sw	a4,0(a5)
     9b6:	009f0737          	lui	a4,0x9f0
     9ba:	c798                	sw	a4,8(a5)
     9bc:	40021737          	lui	a4,0x40021
     9c0:	431c                	lw	a5,0(a4)
     9c2:	00679693          	sll	a3,a5,0x6
     9c6:	fe06dde3          	bgez	a3,9c0 <SystemInit+0x24>
     9ca:	435c                	lw	a5,4(a4)
     9cc:	400216b7          	lui	a3,0x40021
     9d0:	9bf1                	and	a5,a5,-4
     9d2:	0027e793          	or	a5,a5,2
     9d6:	c35c                	sw	a5,4(a4)
     9d8:	4721                	li	a4,8
     9da:	42dc                	lw	a5,4(a3)
     9dc:	8bb1                	and	a5,a5,12
     9de:	fee79ee3          	bne	a5,a4,9da <SystemInit+0x3e>
     9e2:	e00007b7          	lui	a5,0xe0000
     9e6:	0f878793          	add	a5,a5,248 # e00000f8 <__global_pointer$+0xbffff8f8>
     9ea:	0007a023          	sw	zero,0(a5)
     9ee:	e00007b7          	lui	a5,0xe0000
     9f2:	0f478793          	add	a5,a5,244 # e00000f4 <__global_pointer$+0xbffff8f4>
     9f6:	08000713          	li	a4,128
     9fa:	c398                	sw	a4,0(a5)
     9fc:	8082                	ret

000009fe <main>:
};

typedef struct car_state car_state_data;

int main()
{
     9fe:	711d                	add	sp,sp,-96
     a00:	ce86                	sw	ra,92(sp)
     a02:	cca2                	sw	s0,88(sp)
     a04:	caa6                	sw	s1,84(sp)
	// 48MHz internal clock
	SystemInit();
     a06:	3f59                	jal	99c <SystemInit>
    GPIO_port_enable(GPIO_port_A);
     a08:	400214b7          	lui	s1,0x40021
     a0c:	4c9c                	lw	a5,24(s1)
    GPIO_pinMode(BZR_PIN, GPIO_pinMode_O_pushPull, GPIO_Speed_10MHz);
     a0e:	f10006b7          	lui	a3,0xf1000
     a12:	16fd                	add	a3,a3,-1 # f0ffffff <__global_pointer$+0xd0fff7ff>
    GPIO_port_enable(GPIO_port_A);
     a14:	0047e793          	or	a5,a5,4
     a18:	cc9c                	sw	a5,24(s1)
    GPIO_port_enable(GPIO_port_D);
     a1a:	4c9c                	lw	a5,24(s1)
    GPIO_pinMode(BZR_PIN, GPIO_pinMode_O_pushPull, GPIO_Speed_10MHz);
     a1c:	40011437          	lui	s0,0x40011
    GPIO_pinMode(ROT_B_PIN, GPIO_pinMode_I_pullUp, GPIO_Speed_10MHz);
     a20:	6605                	lui	a2,0x1
    GPIO_port_enable(GPIO_port_D);
     a22:	0207e793          	or	a5,a5,32
     a26:	cc9c                	sw	a5,24(s1)
    GPIO_port_enable(GPIO_port_C);
     a28:	4c9c                	lw	a5,24(s1)
    GPIO_pinMode(ROT_B_PIN, GPIO_pinMode_I_pullUp, GPIO_Speed_10MHz);
     a2a:	80060613          	add	a2,a2,-2048 # 800 <ssd1306_i2c_send.constprop.0.isra.0+0x36>

  init_gpio();

	Delay_Ms( 200 );
     a2e:	00125537          	lui	a0,0x125
    GPIO_port_enable(GPIO_port_C);
     a32:	0107e793          	or	a5,a5,16
     a36:	cc9c                	sw	a5,24(s1)
    GPIO_pinMode(BZR_PIN, GPIO_pinMode_O_pushPull, GPIO_Speed_10MHz);
     a38:	400117b7          	lui	a5,0x40011
     a3c:	40078793          	add	a5,a5,1024 # 40011400 <__global_pointer$+0x20010c00>
     a40:	4398                	lw	a4,0(a5)
	Delay_Ms( 200 );
     a42:	f8050513          	add	a0,a0,-128 # 124f80 <main.c.5db06c59+0x122a0f>
    GPIO_pinMode(BZR_PIN, GPIO_pinMode_O_pushPull, GPIO_Speed_10MHz);
     a46:	8f75                	and	a4,a4,a3
     a48:	c398                	sw	a4,0(a5)
     a4a:	4398                	lw	a4,0(a5)
     a4c:	010006b7          	lui	a3,0x1000
     a50:	8f55                	or	a4,a4,a3
     a52:	c398                	sw	a4,0(a5)
    GPIO_pinMode(BTN_PIN, GPIO_pinMode_I_pullUp, GPIO_Speed_10MHz);
     a54:	4018                	lw	a4,0(s0)
     a56:	fff106b7          	lui	a3,0xfff10
     a5a:	16fd                	add	a3,a3,-1 # fff0ffff <__global_pointer$+0xdff0f7ff>
     a5c:	8f75                	and	a4,a4,a3
     a5e:	c018                	sw	a4,0(s0)
     a60:	4018                	lw	a4,0(s0)
     a62:	000806b7          	lui	a3,0x80
     a66:	8f55                	or	a4,a4,a3
     a68:	c018                	sw	a4,0(s0)
     a6a:	4741                	li	a4,16
     a6c:	c818                	sw	a4,16(s0)
    GPIO_pinMode(ROT_A_PIN, GPIO_pinMode_I_pullUp, GPIO_Speed_10MHz);
     a6e:	4398                	lw	a4,0(a5)
     a70:	ff1006b7          	lui	a3,0xff100
     a74:	16fd                	add	a3,a3,-1 # ff0fffff <__global_pointer$+0xdf0ff7ff>
     a76:	8f75                	and	a4,a4,a3
     a78:	c398                	sw	a4,0(a5)
     a7a:	4398                	lw	a4,0(a5)
     a7c:	008006b7          	lui	a3,0x800
     a80:	8f55                	or	a4,a4,a3
     a82:	c398                	sw	a4,0(a5)
     a84:	02000713          	li	a4,32
     a88:	cb98                	sw	a4,16(a5)
    GPIO_pinMode(ROT_B_PIN, GPIO_pinMode_I_pullUp, GPIO_Speed_10MHz);
     a8a:	400117b7          	lui	a5,0x40011
     a8e:	80078793          	add	a5,a5,-2048 # 40010800 <__global_pointer$+0x20010000>
     a92:	4394                	lw	a3,0(a5)
     a94:	777d                	lui	a4,0xfffff
     a96:	0ff70713          	add	a4,a4,255 # fffff0ff <__global_pointer$+0xdfffe8ff>
     a9a:	c03a                	sw	a4,0(sp)
     a9c:	8ef9                	and	a3,a3,a4
     a9e:	c394                	sw	a3,0(a5)
     aa0:	4394                	lw	a3,0(a5)
     aa2:	8ed1                	or	a3,a3,a2
     aa4:	c394                	sw	a3,0(a5)
     aa6:	4691                	li	a3,4
     aa8:	cb94                	sw	a3,16(a5)
	Delay_Ms( 200 );
     aaa:	f2aff0ef          	jal	1d4 <DelaySysTick>
 * init I2C and GPIO
 */
uint8_t ssd1306_i2c_init(void)
{
	// Enable GPIOC and I2C
	RCC->APB2PCENR |= RCC_APB2Periph_GPIOC;
     aae:	4c9c                	lw	a5,24(s1)
	RCC->APB1PCENR |= RCC_APB1Periph_I2C1;
     ab0:	002006b7          	lui	a3,0x200
	// PC1 is SDA, 10MHz Output, alt func, open-drain
	GPIOC->CFGLR &= ~(0xf<<(4*1));
	GPIOC->CFGLR |= (GPIO_Speed_10MHz | GPIO_CNF_OUT_OD_AF)<<(4*1);
	
	// PC2 is SCL, 10MHz Output, alt func, open-drain
	GPIOC->CFGLR &= ~(0xf<<(4*2));
     ab4:	4702                	lw	a4,0(sp)
	RCC->APB2PCENR |= RCC_APB2Periph_GPIOC;
     ab6:	0107e793          	or	a5,a5,16
     aba:	cc9c                	sw	a5,24(s1)
	RCC->APB1PCENR |= RCC_APB1Periph_I2C1;
     abc:	4cdc                	lw	a5,28(s1)
     abe:	8fd5                	or	a5,a5,a3
     ac0:	ccdc                	sw	a5,28(s1)
	GPIOC->CFGLR &= ~(0xf<<(4*1));
     ac2:	401c                	lw	a5,0(s0)
     ac4:	f0f7f793          	and	a5,a5,-241
     ac8:	c01c                	sw	a5,0(s0)
	GPIOC->CFGLR |= (GPIO_Speed_10MHz | GPIO_CNF_OUT_OD_AF)<<(4*1);
     aca:	401c                	lw	a5,0(s0)
     acc:	0d07e793          	or	a5,a5,208
     ad0:	c01c                	sw	a5,0(s0)
	GPIOC->CFGLR &= ~(0xf<<(4*2));
     ad2:	401c                	lw	a5,0(s0)
     ad4:	8ff9                	and	a5,a5,a4
     ad6:	c01c                	sw	a5,0(s0)
	GPIOC->CFGLR |= (GPIO_Speed_10MHz | GPIO_CNF_OUT_OD_AF)<<(4*2);
     ad8:	401c                	lw	a5,0(s0)
     ada:	6705                	lui	a4,0x1
     adc:	d0070713          	add	a4,a4,-768 # d00 <main+0x302>
     ae0:	8fd9                	or	a5,a5,a4
     ae2:	c01c                	sw	a5,0(s0)
{
	// pulse reset
	ssd1306_rst();
	
	// initialize OLED
	uint8_t *cmd_list = (uint8_t *)ssd1306_init_array;
     ae4:	6405                	lui	s0,0x1
	GPIOC->CFGLR |= (GPIO_Speed_10MHz | GPIO_CNF_OUT_PP)<<(4*4);
	GPIOC->BSHR = (1<<(16+4));
#endif

	// load I2C regs
	ssd1306_i2c_setup();
     ae6:	fc4ff0ef          	jal	2aa <ssd1306_i2c_setup>
     aea:	e8440413          	add	s0,s0,-380 # e84 <ssd1306_init_array>
	while(*cmd_list != SSD1306_TERMINATE_CMDS)
     aee:	00044503          	lbu	a0,0(s0)
     af2:	0ff00793          	li	a5,255
     af6:	00f51563          	bne	a0,a5,b00 <main+0x102>
		if(ssd1306_cmd(*cmd_list++))
			return 1;
	}
	
	// clear display
	ssd1306_setbuf(0);
     afa:	3d19                	jal	910 <ssd1306_setbuf.constprop.0>
	ssd1306_refresh();
     afc:	3581                	jal	93c <ssd1306_refresh>
     afe:	a021                	j	b06 <main+0x108>
		if(ssd1306_cmd(*cmd_list++))
     b00:	0405                	add	s0,s0,1
     b02:	33cd                	jal	8e4 <ssd1306_cmd>
     b04:	d56d                	beqz	a0,aee <main+0xf0>
    ssd1306_setbuf(0);
     b06:	3529                	jal	910 <ssd1306_setbuf.constprop.0>
    ssd1306_drawImage(0, 0, movoid_title, 128, 64, 0);
     b08:	6605                	lui	a2,0x1
     b0a:	04000713          	li	a4,64
     b0e:	08000693          	li	a3,128
     b12:	ea060613          	add	a2,a2,-352 # ea0 <movoid_title>
     b16:	4581                	li	a1,0
     b18:	4501                	li	a0,0
     b1a:	827ff0ef          	jal	340 <ssd1306_drawImage.constprop.0>
    ssd1306_refresh();
     b1e:	3d39                	jal	93c <ssd1306_refresh>
	  Delay_Ms(2000);
     b20:	00b72537          	lui	a0,0xb72
     b24:	b0050513          	add	a0,a0,-1280 # b71b00 <main.c.5db06c59+0xb6f58f>
     b28:	eacff0ef          	jal	1d4 <DelaySysTick>

      int newt_step = 25;

      bool button_state = false;

      uint8_t rot_a_state = !GPIO_digitalRead(ROT_A_PIN);
     b2c:	400117b7          	lui	a5,0x40011
     b30:	40078793          	add	a5,a5,1024 # 40011400 <__global_pointer$+0x20010c00>
     b34:	c43e                	sw	a5,8(sp)
     b36:	47a2                	lw	a5,8(sp)
      uint8_t rot_b_state = !GPIO_digitalRead(ROT_B_PIN);
     b38:	40011737          	lui	a4,0x40011
     b3c:	80070713          	add	a4,a4,-2048 # 40010800 <__global_pointer$+0x20010000>
      uint8_t rot_a_state = !GPIO_digitalRead(ROT_A_PIN);
     b40:	479c                	lw	a5,8(a5)


      int flip_c = 0;
      bool flip_flag = false;

      car_state_data car_s[] = {
     b42:	6585                	lui	a1,0x1
      uint8_t rot_b_state = !GPIO_digitalRead(ROT_B_PIN);
     b44:	4718                	lw	a4,8(a4)
      uint8_t rot_a_state = !GPIO_digitalRead(ROT_A_PIN);
     b46:	8395                	srl	a5,a5,0x5
     b48:	0017c793          	xor	a5,a5,1
     b4c:	8b85                	and	a5,a5,1
      car_state_data car_s[] = {
     b4e:	03000613          	li	a2,48
     b52:	dbc58593          	add	a1,a1,-580 # dbc <main+0x3be>
     b56:	1048                	add	a0,sp,36
      uint8_t rot_a_state = !GPIO_digitalRead(ROT_A_PIN);
     b58:	c03e                	sw	a5,0(sp)
      car_state_data car_s[] = {
     b5a:	33d9                	jal	920 <memcpy>
      int newt_x = 100;
     b5c:	4782                	lw	a5,0(sp)
      bool flip_flag = false;
     b5e:	c602                	sw	zero,12(sp)
      int flip_c = 0;
     b60:	c202                	sw	zero,4(sp)
      bool button_state = false;
     b62:	4681                	li	a3,0
      int newt_y = 20;
     b64:	4451                	li	s0,20
      int newt_x = 100;
     b66:	06400493          	li	s1,100

      bool run_flag = true;

      while (run_flag) {

        uint8_t button_is_pressed = !GPIO_digitalRead(BTN_PIN);
     b6a:	40011737          	lui	a4,0x40011
     b6e:	4718                	lw	a4,8(a4)
     b70:	8b41                	and	a4,a4,16
     b72:	00173613          	seqz	a2,a4
     b76:	c832                	sw	a2,16(sp)

        // buzzer on!
        if (button_is_pressed)
     b78:	e339                	bnez	a4,bbe <main+0x1c0>
        {
            GPIO_digitalWrite(BZR_PIN, high);
     b7a:	46a2                	lw	a3,8(sp)
     b7c:	04000713          	li	a4,64
     b80:	ca98                	sw	a4,16(a3)
          newt_x -= newt_step;
        }
        button_state = button_is_pressed;

        // get rotaly-encoder value
        uint8_t rot_a_is_pressed = !GPIO_digitalRead(ROT_A_PIN);
     b82:	4722                	lw	a4,8(sp)
     b84:	4714                	lw	a3,8(a4)
     b86:	0206f693          	and	a3,a3,32
     b8a:	0016b713          	seqz	a4,a3
     b8e:	c03a                	sw	a4,0(sp)
        uint8_t rot_b_state = !GPIO_digitalRead(ROT_B_PIN);
     b90:	40011737          	lui	a4,0x40011
     b94:	80070713          	add	a4,a4,-2048 # 40010800 <__global_pointer$+0x20010000>
     b98:	4718                	lw	a4,8(a4)

        if (rot_a_is_pressed != rot_a_state) {
     b9a:	0016b613          	seqz	a2,a3
     b9e:	20f60163          	beq	a2,a5,da0 <main+0x3a2>
     ba2:	00477793          	and	a5,a4,4
          rot_a_state = rot_a_is_pressed;

          if (!rot_a_state && rot_b_state) {
     ba6:	c29d                	beqz	a3,bcc <main+0x1ce>
     ba8:	20079163          	bnez	a5,daa <main+0x3ac>
            newt_y -= 3;
     bac:	c002                	sw	zero,0(sp)
     bae:	1475                	add	s0,s0,-3
            newt_y += 3;
          } 
        } 

        // turn aroud
        if (newt_x < 0) {
     bb0:	1e04ca63          	bltz	s1,da4 <main+0x3a6>
          newt_x = 100;
        }
        if (newt_y < 0) {
     bb4:	02045363          	bgez	s0,bda <main+0x1dc>
          newt_y = 64;
     bb8:	04000413          	li	s0,64
     bbc:	a01d                	j	be2 <main+0x1e4>
            GPIO_digitalWrite(BZR_PIN, low);
     bbe:	4622                	lw	a2,8(sp)
     bc0:	00400737          	lui	a4,0x400
     bc4:	ca18                	sw	a4,16(a2)
        if (button_state && !button_is_pressed){
     bc6:	ded5                	beqz	a3,b82 <main+0x184>
          newt_x -= newt_step;
     bc8:	149d                	add	s1,s1,-25 # 40020fe7 <__global_pointer$+0x200207e7>
     bca:	bf65                	j	b82 <main+0x184>
          if (rot_a_state && rot_b_state) {
     bcc:	1e079563          	bnez	a5,db6 <main+0x3b8>
          rot_a_state = rot_a_is_pressed;
     bd0:	4785                	li	a5,1
     bd2:	c03e                	sw	a5,0(sp)
            newt_y += 3;
     bd4:	040d                	add	s0,s0,3
        if (newt_x < 0) {
     bd6:	1804cb63          	bltz	s1,d6c <main+0x36e>
        } 
        else if (newt_y > 64) {
     bda:	04000793          	li	a5,64
     bde:	1887ca63          	blt	a5,s0,d72 <main+0x374>
          newt_y = 0;
        }

        // clear buffer for next mode
        ssd1306_setbuf(0);
     be2:	333d                	jal	910 <ssd1306_setbuf.constprop.0>

        flip_c ++;
     be4:	4792                	lw	a5,4(sp)
     be6:	0785                	add	a5,a5,1
     be8:	c23e                	sw	a5,4(sp)

        if (flip_c > 100) {
     bea:	4712                	lw	a4,4(sp)
     bec:	06500793          	li	a5,101
     bf0:	00f71763          	bne	a4,a5,bfe <main+0x200>
          flip_flag = !flip_flag;
     bf4:	47b2                	lw	a5,12(sp)
          flip_c = 0;
     bf6:	c202                	sw	zero,4(sp)
          flip_flag = !flip_flag;
     bf8:	0017c793          	xor	a5,a5,1
     bfc:	c63e                	sw	a5,12(sp)
        }

        if(flip_flag){
     bfe:	47b2                	lw	a5,12(sp)
          ssd1306_drawImage(newt_x, newt_y, newt_left, 24, 24, 0);
     c00:	0ff4f513          	zext.b	a0,s1
     c04:	0ff47593          	zext.b	a1,s0
     c08:	4761                	li	a4,24
     c0a:	46e1                	li	a3,24
        if(flip_flag){
     c0c:	16078563          	beqz	a5,d76 <main+0x378>
          ssd1306_drawImage(newt_x, newt_y, newt_left, 24, 24, 0);
     c10:	6609                	lui	a2,0x2
     c12:	b3060613          	add	a2,a2,-1232 # 1b30 <newt_left>
        } else {
          ssd1306_drawImage(newt_x, newt_y, newt_right, 24, 24, 0);
     c16:	f2aff0ef          	jal	340 <ssd1306_drawImage.constprop.0>
          flip_c = 0;
     c1a:	4781                	li	a5,0
			ssd1306_drawPixel(y, x, color);
     c1c:	0ff7f593          	zext.b	a1,a5
     c20:	4605                	li	a2,1
     c22:	4529                	li	a0,10
     c24:	ca3e                	sw	a5,20(sp)
     c26:	ed8ff0ef          	jal	2fe <ssd1306_drawPixel>
     c2a:	47d2                	lw	a5,20(sp)
	for(x=x0;x<=x1;x++)
     c2c:	04100713          	li	a4,65
     c30:	0785                	add	a5,a5,1
     c32:	01079693          	sll	a3,a5,0x10
     c36:	82c1                	srl	a3,a3,0x10
     c38:	07c2                	sll	a5,a5,0x10
     c3a:	87c1                	sra	a5,a5,0x10
     c3c:	fee690e3          	bne	a3,a4,c1c <main+0x21e>

          // 車を描画
          ssd1306_drawImage(car_s[i].car_x, car_s[i].car_y, car, 24, 24, 0);

          // 車を進める
          if (flip_c % 25 == 0) {
     c40:	4512                	lw	a0,4(sp)
     c42:	45e5                	li	a1,25
     c44:	cccff0ef          	jal	110 <__modsi3>
     c48:	ca2a                	sw	a0,20(sp)
     c4a:	105c                	add	a5,sp,36
          ssd1306_drawImage(car_s[i].car_x, car_s[i].car_y, car, 24, 24, 0);
     c4c:	6389                	lui	t2,0x2
     c4e:	0007a283          	lw	t0,0(a5)
     c52:	0047a303          	lw	t1,4(a5)
     c56:	4761                	li	a4,24
     c58:	aa038613          	add	a2,t2,-1376 # 1aa0 <car>
     c5c:	0ff2f513          	zext.b	a0,t0
     c60:	46e1                	li	a3,24
     c62:	0ff37593          	zext.b	a1,t1
     c66:	d03e                	sw	a5,32(sp)
     c68:	cc16                	sw	t0,24(sp)
     c6a:	ce1a                	sw	t1,28(sp)
     c6c:	ed4ff0ef          	jal	340 <ssd1306_drawImage.constprop.0>
          if (flip_c % 25 == 0) {
     c70:	4752                	lw	a4,20(sp)
     c72:	42e2                	lw	t0,24(sp)
     c74:	5782                	lw	a5,32(sp)
     c76:	6389                	lui	t2,0x2
     c78:	eb09                	bnez	a4,c8a <main+0x28c>
            if (car_s[i].dest) {
     c7a:	00c7c683          	lbu	a3,12(a5)
              car_s[i].car_y += car_s[i].car_step;
     c7e:	4798                	lw	a4,8(a5)
            if (car_s[i].dest) {
     c80:	4372                	lw	t1,28(sp)
     c82:	0e068e63          	beqz	a3,d7e <main+0x380>
              car_s[i].car_y += car_s[i].car_step;
     c86:	971a                	add	a4,a4,t1
     c88:	c3d8                	sw	a4,4(a5)
              car_s[i].car_y -= car_s[i].car_step;
            }
          }

          // 車のループ
          if (car_s[i].car_y > 64) {
     c8a:	43d8                	lw	a4,4(a5)
     c8c:	04000693          	li	a3,64
     c90:	0ee6cc63          	blt	a3,a4,d88 <main+0x38a>
            car_s[i].car_y = 0;
          }
          if (car_s[i].car_y < 0) {
     c94:	00075463          	bgez	a4,c9c <main+0x29e>
            car_s[i].car_y = 64;
     c98:	04000713          	li	a4,64
     c9c:	c3d8                	sw	a4,4(a5)
          }

          // 当たり判定
          if (car_s[i].car_x == newt_x && (car_s[i].car_y + 6) <= newt_y && (car_s[i].car_y + 18) >= newt_y ) {
     c9e:	0e929963          	bne	t0,s1,d90 <main+0x392>
     ca2:	00570693          	add	a3,a4,5 # 400005 <main.c.5db06c59+0x3fda94>
     ca6:	0e86d563          	bge	a3,s0,d90 <main+0x392>
     caa:	0749                	add	a4,a4,18
     cac:	0e874263          	blt	a4,s0,d90 <main+0x392>
    ssd1306_setbuf(0);
     cb0:	3185                	jal	910 <ssd1306_setbuf.constprop.0>
     cb2:	6705                	lui	a4,0x1
     cb4:	e1c70713          	add	a4,a4,-484 # e1c <main+0x41e>
     cb8:	4301                	li	t1,0
     cba:	6385                	lui	t2,0x1
	while((c=*str++))
     cbc:	00074783          	lbu	a5,0(a4)
     cc0:	0705                	add	a4,a4,1
     cc2:	cfc1                	beqz	a5,d5a <main+0x35c>
     cc4:	078e                	sll	a5,a5,0x3
     cc6:	2a038693          	add	a3,t2,672 # 12a0 <fontdata>
     cca:	01030293          	add	t0,t1,16
     cce:	97b6                	add	a5,a5,a3
     cd0:	44c1                	li	s1,16
     cd2:	0ff2f293          	zext.b	t0,t0
                    ssd1306_drawPixel(x + (j * font_scale) + k, y + (i * font_scale) + l, col);
     cd6:	00148613          	add	a2,s1,1
        d = fontdata[(chr << 3) + i];
     cda:	0007c683          	lbu	a3,0(a5)
                    ssd1306_drawPixel(x + (j * font_scale) + k, y + (i * font_scale) + l, col);
     cde:	0ff67613          	zext.b	a2,a2
     ce2:	c032                	sw	a2,0(sp)
     ce4:	841a                	mv	s0,t1
     ce6:	0076d613          	srl	a2,a3,0x7
     cea:	8522                	mv	a0,s0
     cec:	85a6                	mv	a1,s1
     cee:	d016                	sw	t0,32(sp)
     cf0:	ce3a                	sw	a4,28(sp)
     cf2:	cc1a                	sw	t1,24(sp)
     cf4:	ca3e                	sw	a5,20(sp)
     cf6:	c836                	sw	a3,16(sp)
     cf8:	c232                	sw	a2,4(sp)
     cfa:	e04ff0ef          	jal	2fe <ssd1306_drawPixel>
     cfe:	4612                	lw	a2,4(sp)
     d00:	4582                	lw	a1,0(sp)
     d02:	8522                	mv	a0,s0
     d04:	dfaff0ef          	jal	2fe <ssd1306_drawPixel>
     d08:	4612                	lw	a2,4(sp)
     d0a:	00140513          	add	a0,s0,1
     d0e:	0ff57513          	zext.b	a0,a0
     d12:	85a6                	mv	a1,s1
     d14:	c632                	sw	a2,12(sp)
     d16:	c22a                	sw	a0,4(sp)
     d18:	de6ff0ef          	jal	2fe <ssd1306_drawPixel>
     d1c:	4632                	lw	a2,12(sp)
     d1e:	4582                	lw	a1,0(sp)
     d20:	4512                	lw	a0,4(sp)
        for (j = 0; j < 8; j++)
     d22:	0409                	add	s0,s0,2
     d24:	0ff47413          	zext.b	s0,s0
                    ssd1306_drawPixel(x + (j * font_scale) + k, y + (i * font_scale) + l, col);
     d28:	dd6ff0ef          	jal	2fe <ssd1306_drawPixel>
            d <<= 1;
     d2c:	46c2                	lw	a3,16(sp)
        for (j = 0; j < 8; j++)
     d2e:	5282                	lw	t0,32(sp)
     d30:	47d2                	lw	a5,20(sp)
            d <<= 1;
     d32:	0686                	sll	a3,a3,0x1
        for (j = 0; j < 8; j++)
     d34:	4362                	lw	t1,24(sp)
     d36:	4772                	lw	a4,28(sp)
            d <<= 1;
     d38:	0ff6f693          	zext.b	a3,a3
        for (j = 0; j < 8; j++)
     d3c:	6385                	lui	t2,0x1
     d3e:	fa5414e3          	bne	s0,t0,ce6 <main+0x2e8>
    for (i = 0; i < 8; i++)
     d42:	0489                	add	s1,s1,2
     d44:	0ff4f493          	zext.b	s1,s1
     d48:	02000693          	li	a3,32
     d4c:	0785                	add	a5,a5,1
     d4e:	f8d494e3          	bne	s1,a3,cd6 <main+0x2d8>
		if(x>128 - 8 * font_size)
     d52:	08000793          	li	a5,128
     d56:	02f41b63          	bne	s0,a5,d8c <main+0x38e>
    ssd1306_refresh();
     d5a:	36cd                	jal	93c <ssd1306_refresh>
	  Delay_Ms(2000);
     d5c:	00b72537          	lui	a0,0xb72
     d60:	b0050513          	add	a0,a0,-1280 # b71b00 <main.c.5db06c59+0xb6f58f>
     d64:	c70ff0ef          	jal	1d4 <DelaySysTick>
            game_over();
            run_flag = false;
            break;
          }
        }
        ssd1306_refresh();
     d68:	3ed1                	jal	93c <ssd1306_refresh>
    while (1) {
     d6a:	b3f1                	j	b36 <main+0x138>
          newt_x = 100;
     d6c:	06400493          	li	s1,100
     d70:	b5ad                	j	bda <main+0x1dc>
          newt_y = 0;
     d72:	4401                	li	s0,0
     d74:	b5bd                	j	be2 <main+0x1e4>
          ssd1306_drawImage(newt_x, newt_y, newt_right, 24, 24, 0);
     d76:	6609                	lui	a2,0x2
     d78:	ae860613          	add	a2,a2,-1304 # 1ae8 <newt_right>
     d7c:	bd69                	j	c16 <main+0x218>
              car_s[i].car_y -= car_s[i].car_step;
     d7e:	40e30333          	sub	t1,t1,a4
     d82:	0067a223          	sw	t1,4(a5)
     d86:	b711                	j	c8a <main+0x28c>
            car_s[i].car_y = 64;
     d88:	4701                	li	a4,0
     d8a:	bf09                	j	c9c <main+0x29e>
		x += 8 * font_size;
     d8c:	8322                	mv	t1,s0
     d8e:	b73d                	j	cbc <main+0x2be>
        for (int i = 0; i < 3; i++){
     d90:	07c1                	add	a5,a5,16
     d92:	08d8                	add	a4,sp,84
     d94:	eae79de3          	bne	a5,a4,c4e <main+0x250>
        ssd1306_refresh();
     d98:	3655                	jal	93c <ssd1306_refresh>
     d9a:	4782                	lw	a5,0(sp)
     d9c:	46c2                	lw	a3,16(sp)
     d9e:	b3f1                	j	b6a <main+0x16c>
        if (newt_x < 0) {
     da0:	e404d1e3          	bgez	s1,be2 <main+0x1e4>
          newt_x = 100;
     da4:	06400493          	li	s1,100
     da8:	b531                	j	bb4 <main+0x1b6>
          rot_a_state = rot_a_is_pressed;
     daa:	c002                	sw	zero,0(sp)
        if (newt_x < 0) {
     dac:	e204d7e3          	bgez	s1,bda <main+0x1dc>
          newt_x = 100;
     db0:	06400493          	li	s1,100
     db4:	b53d                	j	be2 <main+0x1e4>
          rot_a_state = rot_a_is_pressed;
     db6:	4785                	li	a5,1
     db8:	c03e                	sw	a5,0(sp)
     dba:	bfcd                	j	dac <main+0x3ae>
     dbc:	0000004b          	.insn	4, 0x004b
     dc0:	000a                	c.slli	zero,0x2
     dc2:	0000                	unimp
     dc4:	0002                	c.slli64	zero
     dc6:	0000                	unimp
     dc8:	0001                	nop
     dca:	0000                	unimp
     dcc:	0032                	c.slli	zero,0xc
     dce:	0000                	unimp
     dd0:	0032                	c.slli	zero,0xc
     dd2:	0000                	unimp
     dd4:	0002                	c.slli64	zero
     dd6:	0000                	unimp
     dd8:	0000                	unimp
     dda:	0000                	unimp
     ddc:	0019                	c.nop	6
     dde:	0000                	unimp
     de0:	0014                	.insn	2, 0x0014
     de2:	0000                	unimp
     de4:	0002                	c.slli64	zero
     de6:	0000                	unimp
     de8:	0001                	nop
     dea:	0000                	unimp
     dec:	31647373          	csrrc	t1,0x316,8
     df0:	5f363033          	.insn	4, 0x5f363033
     df4:	3269                	jal	77e <mini_vpprintf+0x1ac>
     df6:	72655f63          	bge	a0,t1,1534 <fontdata+0x294>
     dfa:	6f72                	.insn	2, 0x6f72
     dfc:	2072                	.insn	2, 0x2072
     dfe:	202d                	jal	e28 <main+0x42a>
     e00:	6974                	.insn	2, 0x6974
     e02:	656d                	lui	a0,0x1b
     e04:	2074756f          	jal	a0,4880a <main.c.5db06c59+0x46299>
     e08:	74696177          	.insn	4, 0x74696177
     e0c:	6e69                	lui	t3,0x1a
     e0e:	6f662067          	.insn	4, 0x6f662067
     e12:	2072                	.insn	2, 0x2072
     e14:	7325                	lui	t1,0xfffe9
     e16:	0d0a                	sll	s10,s10,0x2
     e18:	0000                	unimp
     e1a:	0000                	unimp
     e1c:	454d4147          	.insn	4, 0x454d4147
     e20:	4f20                	lw	s0,88(a4)
     e22:	4556                	lw	a0,84(sp)
     e24:	0052                	c.slli	zero,0x14
     e26:	0000                	unimp
     e28:	6f6e                	.insn	2, 0x6f6e
     e2a:	2074                	.insn	2, 0x2074
     e2c:	7562                	.insn	2, 0x7562
     e2e:	00007973          	csrrc	s2,ustatus,0
     e32:	0000                	unimp
     e34:	616d                	add	sp,sp,240
     e36:	72657473          	csrrc	s0,mhpmevent6h,10
     e3a:	6d20                	.insn	2, 0x6d20
     e3c:	0065646f          	jal	s0,56e42 <main.c.5db06c59+0x548d1>
     e40:	7274                	.insn	2, 0x7274
     e42:	6e61                	lui	t3,0x18
     e44:	74696d73          	csrrs	s10,0x746,18
     e48:	6d20                	.insn	2, 0x6d20
     e4a:	0065646f          	jal	s0,56e50 <main.c.5db06c59+0x548df>
     e4e:	0000                	unimp
     e50:	7874                	.insn	2, 0x7874
     e52:	6520                	.insn	2, 0x6520
     e54:	706d                	c.lui	zero,0xffffb
     e56:	7974                	.insn	2, 0x7974
     e58:	0000                	unimp
     e5a:	0000                	unimp
     e5c:	7274                	.insn	2, 0x7274
     e5e:	6e61                	lui	t3,0x18
     e60:	74696d73          	csrrs	s10,0x746,18
     e64:	6320                	.insn	2, 0x6320
     e66:	6c706d6f          	jal	s10,7d2c <main.c.5db06c59+0x57bb>
     e6a:	7465                	lui	s0,0xffff9
     e6c:	0065                	c.nop	25
	...

00000e70 <errstr>:
     e70:	0e28 0000 0e34 0000 0e40 0000 0e50 0000     (...4...@...P...
     e80:	0e5c 0000                                   \...

00000e84 <ssd1306_init_array>:
     e84:	d5ae a880 d33f 4000 148d 0020 c8a1 12da     ....?..@.. .....
     e94:	8f81 f1d9 40db a6a4 ffaf 0000               .....@......

00000ea0 <movoid_title>:
     ea0:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
     eb0:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
     ec0:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
     ed0:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
     ee0:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
     ef0:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
     f00:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
     f10:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
     f20:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
     f30:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
     f40:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
     f50:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
     f60:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
     f70:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
     f80:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
     f90:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
     fa0:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
     fb0:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
     fc0:	f8ff ff7f ffff ffff ffff ffff ffff ffff     ................
     fd0:	f8ff ff7f ffff ffff ffff ffff ffff ffff     ................
     fe0:	f8ff ff3f ffff ffff ffff ffff ffff ffff     ..?.............
     ff0:	f8ff fe3f ff0f ffff ffff f0ff e0ff ffff     ..?.............
    1000:	f8ff fe3f ff0f ffff ffff f0ff e07f ffff     ..?.............
    1010:	fcff fe3f ff0f ffff ffff f0ff c03f ffff     ..?.........?...
    1020:	fcff fe3f ff0f ffff ffff f0ff c03f ffff     ..?.........?...
    1030:	fcff ff3f ffff ffff ffff f0ff c01f ffff     ..?.............
    1040:	fcff ff3f ffff ffff ffff f0ff 901f ffff     ..?.............
    1050:	fcff ff3f ffff ffff ffff f0ff 904f ffff     ..?.........O...
    1060:	fcff 0f00 800f 8003 60f0 f800 904f ffff     .........`..O...
    1070:	fcff 0f1e 8707 83c3 60f0 78f0 3067 ff7f     .........`.xg0..
    1080:	fcff 0f1f 8707 c3c3 e0f0 78f0 3067 ff7f     ...........xg0..
    1090:	feff 0f1f 8787 c1c3 e0f0 78f8 3073 ff7f     ...........xs0..
    10a0:	feff 0f1f 8387 c1c1 f0f0 78f8 707b ff7f     ...........x{p..
    10b0:	feff 0f1f 8387 e1c1 f0f0 78f8 7838 ff7f     ...........x8x..
    10c0:	feff 071f 8387 e0e1 f0f0 78f8 783c ff7f     ...........x<x..
    10d0:	feff 071f c387 f0e1 f0f0 78f8 f83c ff7f     ...........x<...
    10e0:	feff 071f c387 f0e1 f0e0 78f8 f83f ff7f     ...........x?...
    10f0:	feff 870f c383 f0e1 f060 38f8 f83f ff3f     ........`..8?.?.
    1100:	feff 870f c383 f8e1 f061 3c78 f83f ff3f     ........a.x<?.?.
    1110:	feff 870f c3c3 f8e1 f061 3c7c f83f ff3f     ........a.|<?.?.
    1120:	ffff 870f c3c3 f8e0 f821 3c7c f83f ff3f     ........!.|<?.?.
    1130:	ffff 870f c1c3 fce0 f821 3c7c f81f ff3f     ........!.|<..?.
    1140:	ffff 0300 c0c3 fc00 f801 3c00 fc1f ff3f     ...........<..?.
    1150:	ffff 0700 e0c3 fe00 f803 3c00 fc3f ff3f     ...........<?.?.
    1160:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
    1170:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
    1180:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
    1190:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
    11a0:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
    11b0:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
    11c0:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
    11d0:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
    11e0:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
    11f0:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
    1200:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
    1210:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
    1220:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
    1230:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
    1240:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
    1250:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
    1260:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
    1270:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
    1280:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
    1290:	ffff ffff ffff ffff ffff ffff ffff ffff     ................

000012a0 <fontdata>:
	...
    12a8:	817e 81a5 99bd 7e81 ff7e ffdb e7c3 7eff     ~......~~......~
    12b8:	fe6c fefe 387c 0010 3810 fe7c 387c 0010     l...|8...8|.|8..
    12c8:	7c38 fe38 d6fe 3810 3810 fe7c 7cfe 3810     8|8....8.8|..|.8
    12d8:	0000 3c18 183c 0000 ffff c3e7 e7c3 ffff     ...<<...........
    12e8:	3c00 4266 6642 003c c3ff bd99 99bd ffc3     .<fBBf<.........
    12f8:	070f 7d0f cccc 78cc 663c 6666 183c 187e     ...}...x<fff<.~.
    1308:	333f 303f 7030 e0f0 637f 637f 6763 c0e6     ?3?00p...c.ccg..
    1318:	db18 e73c 3ce7 18db e080 fef8 e0f8 0080     ..<..<..........
    1328:	0e02 fe3e 0e3e 0002 3c18 187e 7e18 183c     ..>.>....<~..~<.
    1338:	6666 6666 0066 0066 db7f 7bdb 1b1b 001b     fffff.f....{....
    1348:	613e 663c 3c66 7c86 0000 0000 7e7e 007e     >a<ff<.|....~~~.
    1358:	3c18 187e 3c7e ff18 3c18 187e 1818 0018     .<~.~<...<~.....
    1368:	1818 1818 3c7e 0018 1800 fe0c 180c 0000     ....~<..........
    1378:	3000 fe60 3060 0000 0000 c0c0 fec0 0000     .0`.`0..........
    1388:	2400 ff66 2466 0000 1800 7e3c ffff 0000     .$f.f$....<~....
    1398:	ff00 7eff 183c 0000 0000 0000 0000 0000     ...~<...........
    13a8:	3c18 183c 0018 0018 6666 0024 0000 0000     .<<.....ff$.....
    13b8:	6c6c 6cfe 6cfe 006c 3e18 3c60 7c06 0018     ll.l.ll..>`<.|..
    13c8:	c600 18cc 6630 00c6 6c38 7638 ccdc 0076     ....0f..8l8v..v.
    13d8:	1818 0030 0000 0000 180c 3030 1830 000c     ..0.......000...
    13e8:	1830 0c0c 180c 0030 6600 ff3c 663c 0000     0.....0..f<.<f..
    13f8:	1800 7e18 1818 0000 0000 0000 1800 3018     ...~...........0
    1408:	0000 7e00 0000 0000 0000 0000 1800 0018     ...~............
    1418:	0c06 3018 c060 0080 6c38 d6c6 6cc6 0038     ...0`...8l...l8.
    1428:	3818 1818 1818 007e c67c 1c06 6630 00fe     .8....~.|...0f..
    1438:	c67c 3c06 c606 007c 3c1c cc6c 0cfe 001e     |..<..|..<l.....
    1448:	c0fe fcc0 c606 007c 6038 fcc0 c6c6 007c     ......|.8`....|.
    1458:	c6fe 180c 3030 0030 c67c 7cc6 c6c6 007c     ....000.|..|..|.
    1468:	c67c 7ec6 0c06 0078 1800 0018 1800 0018     |..~..x.........
    1478:	1800 0018 1800 3018 0c06 3018 0c18 0006     .......0...0....
    1488:	0000 007e 7e00 0000 3060 0c18 3018 0060     ..~..~..`0...0`.
    1498:	c67c 180c 0018 0018 c67c dede c0de 0078     |.......|.....x.
    14a8:	6c38 fec6 c6c6 00c6 66fc 7c66 6666 00fc     8l.......ff|ff..
    14b8:	663c c0c0 66c0 003c 6cf8 6666 6c66 00f8     <f...f<..lfffl..
    14c8:	62fe 7868 6268 00fe 62fe 7868 6068 00f0     .bhxhb...bhxh`..
    14d8:	663c c0c0 66ce 003a c6c6 fec6 c6c6 00c6     <f...f:.........
    14e8:	183c 1818 1818 003c 0c1e 0c0c cccc 0078     <.....<.......x.
    14f8:	66e6 786c 666c 00e6 60f0 6060 6662 00fe     .flxlf...```bf..
    1508:	eec6 fefe c6d6 00c6 e6c6 def6 c6ce 00c6     ................
    1518:	c67c c6c6 c6c6 007c 66fc 7c66 6060 00f0     |.....|..ff|``..
    1528:	c67c c6c6 cec6 0e7c 66fc 7c66 666c 00e6     |.....|..ff|lf..
    1538:	663c 1830 660c 003c 7e7e 185a 1818 003c     <f0..f<.~~Z...<.
    1548:	c6c6 c6c6 c6c6 007c c6c6 c6c6 6cc6 0038     ......|......l8.
    1558:	c6c6 d6c6 fed6 006c c6c6 386c c66c 00c6     ......l...l8l...
    1568:	6666 3c66 1818 003c c6fe 188c 6632 00fe     fff<..<.....2f..
    1578:	303c 3030 3030 003c 60c0 1830 060c 0002     <00000<..`0.....
    1588:	0c3c 0c0c 0c0c 003c 3810 c66c 0000 0000     <.....<..8l.....
    1598:	0000 0000 0000 ff00 1830 000c 0000 0000     ........0.......
    15a8:	0000 0c78 cc7c 0076 60e0 667c 6666 00dc     ..x.|.v..`|fff..
    15b8:	0000 c67c c6c0 007c 0c1c cc7c cccc 0076     ..|...|...|...v.
    15c8:	0000 c67c c0fe 007c 663c f860 6060 00f0     ..|...|.<f`.``..
    15d8:	0000 cc76 7ccc f80c 60e0 766c 6666 00e6     ..v..|...`lvff..
    15e8:	0018 1838 1818 003c 0006 0606 6606 3c66     ..8...<......ff<
    15f8:	60e0 6c66 6c78 00e6 1838 1818 1818 003c     .`flxl..8.....<.
    1608:	0000 feec d6d6 00d6 0000 66dc 6666 0066     ...........ffff.
    1618:	0000 c67c c6c6 007c 0000 66dc 7c66 f060     ..|...|....ff|`.
    1628:	0000 cc76 7ccc 1e0c 0000 76dc 6060 00f0     ..v..|.....v``..
    1638:	0000 c07e 067c 00fc 3030 30fc 3630 001c     ..~.|...00.006..
    1648:	0000 cccc cccc 0076 0000 c6c6 6cc6 0038     ......v......l8.
    1658:	0000 d6c6 fed6 006c 0000 6cc6 6c38 00c6     ......l....l8l..
    1668:	0000 c6c6 7ec6 fc06 0000 4c7e 3218 007e     .....~....~L.2~.
    1678:	180e 7018 1818 000e 1818 1818 1818 0018     ...p............
    1688:	1870 0e18 1818 0070 dc76 0000 0000 0000     p.....p.v.......
    1698:	1000 6c38 c6c6 00fe c67c c0c0 7cc6 780c     ..8l....|....|.x
    16a8:	00cc cccc cccc 0076 180c c67c c0fe 007c     ......v...|...|.
    16b8:	827c 0c78 cc7c 0076 00c6 0c78 cc7c 0076     |.x.|.v...x.|.v.
    16c8:	1830 0c78 cc7c 0076 3030 0c78 cc7c 0076     0.x.|.v.00x.|.v.
    16d8:	0000 c07e 7ec0 380c 827c c67c c0fe 007c     ..~..~.8|.|...|.
    16e8:	00c6 c67c c0fe 007c 1830 c67c c0fe 007c     ..|...|.0.|...|.
    16f8:	0066 1838 1818 003c 827c 1838 1818 003c     f.8...<.|.8...<.
    1708:	1830 3800 1818 003c 38c6 c66c c6fe 00c6     0..8..<..8l.....
    1718:	6c38 c67c c6fe 00c6 3018 c0fe c0f8 00fe     8l|......0......
    1728:	0000 187e d87e 007e 6c3e fecc cccc 00ce     ..~.~.~.>l......
    1738:	827c c67c c6c6 007c 00c6 c67c c6c6 007c     |.|...|...|...|.
    1748:	1830 c67c c6c6 007c 8478 cc00 cccc 0076     0.|...|.x.....v.
    1758:	3060 cccc cccc 0076 00c6 c6c6 7ec6 fc06     `0....v......~..
    1768:	38c6 c66c 6cc6 0038 00c6 c6c6 c6c6 007c     .8l..l8.......|.
    1778:	1818 c07e 7ec0 1818 6c38 f064 6660 00fc     ..~..~..8ld.`f..
    1788:	6666 7e3c 7e18 1818 ccf8 facc cfc6 c7c6     ff<~.~..........
    1798:	1b0e 3c18 d818 0070 3018 0c78 cc7c 0076     ...<..p..0x.|.v.
    17a8:	180c 3800 1818 003c 180c c67c c6c6 007c     ...8..<...|...|.
    17b8:	3018 cccc cccc 0076 dc76 dc00 6666 0066     .0....v.v...fff.
    17c8:	dc76 e600 def6 00ce 6c3c 3e6c 7e00 0000     v.......<ll>.~..
    17d8:	6c38 386c 7c00 0000 0018 1818 6330 003e     8ll8.|......0c>.
    17e8:	0000 fe00 c0c0 0000 0000 fe00 0606 0000     ................
    17f8:	e663 7e6c 6633 0fcc e663 7a6c 6a36 06df     c.l~3f..c.lz6j..
    1808:	0018 1818 3c3c 0018 3300 cc66 3366 0000     ....<<...3f.f3..
    1818:	cc00 3366 cc66 0000 8822 8822 8822 8822     ..f3f...".".".".
    1828:	aa55 aa55 aa55 aa55 dd77 dd77 dd77 dd77     U.U.U.U.w.w.w.w.
    1838:	1818 1818 1818 1818 1818 1818 18f8 1818     ................
    1848:	1818 18f8 18f8 1818 3636 3636 36f6 3636     ........6666.666
    1858:	0000 0000 36fe 3636 0000 18f8 18f8 1818     .....666........
    1868:	3636 06f6 36f6 3636 3636 3636 3636 3636     66...66666666666
    1878:	0000 06fe 36f6 3636 3636 06f6 00fe 0000     .....66666......
    1888:	3636 3636 00fe 0000 1818 18f8 00f8 0000     6666............
    1898:	0000 0000 18f8 1818 1818 1818 001f 0000     ................
    18a8:	1818 1818 00ff 0000 0000 0000 18ff 1818     ................
    18b8:	1818 1818 181f 1818 0000 0000 00ff 0000     ................
    18c8:	1818 1818 18ff 1818 1818 181f 181f 1818     ................
    18d8:	3636 3636 3637 3636 3636 3037 003f 0000     666676666670?...
    18e8:	0000 303f 3637 3636 3636 00f7 00ff 0000     ..?0766666......
    18f8:	0000 00ff 36f7 3636 3636 3037 3637 3636     .....66666707666
    1908:	0000 00ff 00ff 0000 3636 00f7 36f7 3636     ........66...666
    1918:	1818 00ff 00ff 0000 3636 3636 00ff 0000     ........6666....
    1928:	0000 00ff 18ff 1818 0000 0000 36ff 3636     .............666
    1938:	3636 3636 003f 0000 1818 181f 001f 0000     6666?...........
    1948:	0000 181f 181f 1818 0000 0000 363f 3636     ............?666
    1958:	3636 3636 36ff 3636 1818 18ff 18ff 1818     6666.666........
    1968:	1818 1818 00f8 0000 0000 0000 181f 1818     ................
    1978:	ffff ffff ffff ffff 0000 0000 ffff ffff     ................
    1988:	f0f0 f0f0 f0f0 f0f0 0f0f 0f0f 0f0f 0f0f     ................
    1998:	ffff ffff 0000 0000 0000 dc76 dcc8 0076     ..........v...v.
    19a8:	cc78 d8cc c6cc 00cc c6fe c0c0 c0c0 00c0     x...............
    19b8:	0000 6cfe 6c6c 006c c6fe 3060 c660 00fe     ...llll...`0`...
    19c8:	0000 d87e d8d8 0070 0000 6666 6666 c07c     ..~...p...ffff|.
    19d8:	7600 18dc 1818 0018 187e 663c 3c66 7e18     .v......~.<ff<.~
    19e8:	6c38 fec6 6cc6 0038 6c38 c6c6 6c6c 00ee     8l...l8.8l..ll..
    19f8:	180e 3e0c 6666 003c 0000 db7e 7edb 0000     ...>ff<...~..~..
    1a08:	0c06 db7e 7edb c060 301e 7e60 3060 001e     ..~..~`..0`~`0..
    1a18:	7c00 c6c6 c6c6 00c6 fe00 fe00 fe00 0000     .|..............
    1a28:	1818 187e 0018 007e 1830 180c 0030 007e     ..~...~.0...0.~.
    1a38:	180c 1830 000c 007e 1b0e 181b 1818 1818     ..0...~.........
    1a48:	1818 1818 d818 70d8 1800 7e00 1800 0000     .......p...~....
    1a58:	7600 00dc dc76 0000 6c38 386c 0000 0000     .v..v...8ll8....
    1a68:	0000 1800 0018 0000 0000 1800 0000 0000     ................
    1a78:	0c0f 0c0c 6cec 1c3c 366c 3636 0036 0000     .....l<.l6666...
    1a88:	0c78 3018 007c 0000 0000 3c3c 3c3c 0000     x..0|.....<<<<..
	...

00001aa0 <car>:
	...
    1aa8:	0000 007c 7c00 0000 007c ff03 03c0 c0ff     ..|..|..|.......
    1ab8:	ff03 00c0 c07f 7f00 00c0 c07f 7c00 0040     .............|@.
    1ac8:	407c 7c00 0340 40fc ff03 03c0 00fc 7c00     |@.|@..@.......|
    1ad8:	0000 0074 7c00 0000 0000 0000 0000 0000     ..t..|..........

00001ae8 <newt_right>:
    1ae8:	0000 0000 0000 f00f 0f00 00f0 3c3c 3c00     ............<<.<
    1af8:	003c 00f0 f0c0 c000 03f3 f30f 0f03 c3fc     <...............
    1b08:	fc3f 3fc3 ff3f 3fff ffff ff00 00f0 f0ff     ?..??..?........
    1b18:	c003 033c 3cc0 0000 0000 0000 0000 0000     ..<..<..........
	...

00001b30 <newt_left>:
	...
    1b40:	0000 c003 033c 3cc0 ff00 00f0 f0ff ff3f     ....<..<......?.
    1b50:	3fff ffff c3fc fc3f 3fc3 03f3 f30f 0f03     .?....?..?......
    1b60:	00f0 f0c0 c000 3c3c 3c00 003c f00f 0f00     ......<<.<<.....
    1b70:	00f0 0000 0000 0000                         ........
