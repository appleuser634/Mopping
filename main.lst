
main.elf:     file format elf32-littleriscv


Disassembly of section .init:

00000000 <InterruptVector>:
   0:	4f00006f          	j	4f0 <handle_reset>
   4:	00000000          	.word	0x00000000
   8:	0000056e          	.word	0x0000056e
   c:	0000056c          	.word	0x0000056c
	...
  30:	0000056c          	.word	0x0000056c
  34:	00000000          	.word	0x00000000
  38:	0000056c          	.word	0x0000056c
  3c:	00000000          	.word	0x00000000
  40:	0000056c          	.word	0x0000056c
  44:	0000056c          	.word	0x0000056c
  48:	0000056c          	.word	0x0000056c
  4c:	0000056c          	.word	0x0000056c
  50:	0000056c          	.word	0x0000056c
  54:	0000056c          	.word	0x0000056c
  58:	0000056c          	.word	0x0000056c
  5c:	0000056c          	.word	0x0000056c
  60:	0000056c          	.word	0x0000056c
  64:	0000056c          	.word	0x0000056c
  68:	0000056c          	.word	0x0000056c
  6c:	0000056c          	.word	0x0000056c
  70:	0000056c          	.word	0x0000056c
  74:	0000056c          	.word	0x0000056c
  78:	0000056c          	.word	0x0000056c
  7c:	0000056c          	.word	0x0000056c
  80:	0000056c          	.word	0x0000056c
  84:	0000056c          	.word	0x0000056c
  88:	0000056c          	.word	0x0000056c
  8c:	0000056c          	.word	0x0000056c
  90:	0000056c          	.word	0x0000056c
  94:	0000056c          	.word	0x0000056c
  98:	0000056c          	.word	0x0000056c
  9c:	0000                	unimp
	...

Disassembly of section .text:

000000a0 <__mulsi3>:
  a0:	862a                	mv	a2,a0
  a2:	4501                	li	a0,0
  a4:	0015f693          	andi	a3,a1,1
  a8:	c291                	beqz	a3,ac <__mulsi3+0xc>
  aa:	9532                	add	a0,a0,a2
  ac:	8185                	srli	a1,a1,0x1
  ae:	0606                	slli	a2,a2,0x1
  b0:	f9f5                	bnez	a1,a4 <__mulsi3+0x4>
  b2:	8082                	ret
  b4:	0000                	unimp
	...

000000b8 <__divsi3>:
  b8:	02054e63          	bltz	a0,f4 <__umodsi3+0x8>
  bc:	0405c363          	bltz	a1,102 <__umodsi3+0x16>

000000c0 <__hidden___udivsi3>:
  c0:	862e                	mv	a2,a1
  c2:	85aa                	mv	a1,a0
  c4:	557d                	li	a0,-1
  c6:	c215                	beqz	a2,ea <__hidden___udivsi3+0x2a>
  c8:	4685                	li	a3,1
  ca:	00b67863          	bgeu	a2,a1,da <__hidden___udivsi3+0x1a>
  ce:	00c05663          	blez	a2,da <__hidden___udivsi3+0x1a>
  d2:	0606                	slli	a2,a2,0x1
  d4:	0686                	slli	a3,a3,0x1
  d6:	feb66ce3          	bltu	a2,a1,ce <__hidden___udivsi3+0xe>
  da:	4501                	li	a0,0
  dc:	00c5e463          	bltu	a1,a2,e4 <__hidden___udivsi3+0x24>
  e0:	8d91                	sub	a1,a1,a2
  e2:	8d55                	or	a0,a0,a3
  e4:	8285                	srli	a3,a3,0x1
  e6:	8205                	srli	a2,a2,0x1
  e8:	faf5                	bnez	a3,dc <__hidden___udivsi3+0x1c>
  ea:	8082                	ret

000000ec <__umodsi3>:
  ec:	8286                	mv	t0,ra
  ee:	3fc9                	jal	c0 <__hidden___udivsi3>
  f0:	852e                	mv	a0,a1
  f2:	8282                	jr	t0
  f4:	40a00533          	neg	a0,a0
  f8:	00b04763          	bgtz	a1,106 <__umodsi3+0x1a>
  fc:	40b005b3          	neg	a1,a1
 100:	b7c1                	j	c0 <__hidden___udivsi3>
 102:	40b005b3          	neg	a1,a1
 106:	8286                	mv	t0,ra
 108:	3f65                	jal	c0 <__hidden___udivsi3>
 10a:	40a00533          	neg	a0,a0
 10e:	8282                	jr	t0

00000110 <__modsi3>:
 110:	8286                	mv	t0,ra
 112:	0005c763          	bltz	a1,120 <__modsi3+0x10>
 116:	00054963          	bltz	a0,128 <__modsi3+0x18>
 11a:	375d                	jal	c0 <__hidden___udivsi3>
 11c:	852e                	mv	a0,a1
 11e:	8282                	jr	t0
 120:	40b005b3          	neg	a1,a1
 124:	fe055be3          	bgez	a0,11a <__modsi3+0xa>
 128:	40a00533          	neg	a0,a0
 12c:	3f51                	jal	c0 <__hidden___udivsi3>
 12e:	40b00533          	neg	a0,a1
 132:	8282                	jr	t0
	...

00000136 <_puts>:
 136:	832a                	mv	t1,a0
 138:	852e                	mv	a0,a1
 13a:	ce01                	beqz	a2,152 <_puts+0x1c>
 13c:	00062283          	lw	t0,0(a2)
 140:	4701                	li	a4,0
 142:	425c                	lw	a5,4(a2)
 144:	00a74863          	blt	a4,a0,154 <_puts+0x1e>
 148:	00078023          	sb	zero,0(a5)
 14c:	4248                	lw	a0,4(a2)
 14e:	40550533          	sub	a0,a0,t0
 152:	8082                	ret
 154:	460c                	lw	a1,8(a2)
 156:	4214                	lw	a3,0(a2)
 158:	15fd                	addi	a1,a1,-1
 15a:	96ae                	add	a3,a3,a1
 15c:	fed786e3          	beq	a5,a3,148 <_puts+0x12>
 160:	00178693          	addi	a3,a5,1
 164:	c254                	sw	a3,4(a2)
 166:	00e306b3          	add	a3,t1,a4
 16a:	0006c683          	lbu	a3,0(a3)
 16e:	0705                	addi	a4,a4,1
 170:	00d78023          	sb	a3,0(a5)
 174:	b7f9                	j	142 <_puts+0xc>

00000176 <mini_pad>:
 176:	c699                	beqz	a3,184 <mini_pad+0xe>
 178:	4301                	li	t1,0
 17a:	00b6d763          	bge	a3,a1,188 <mini_pad+0x12>
 17e:	85b6                	mv	a1,a3
 180:	4305                	li	t1,1
 182:	a019                	j	188 <mini_pad+0x12>
 184:	4301                	li	t1,0
 186:	86ae                	mv	a3,a1
 188:	8e8d                	sub	a3,a3,a1
 18a:	87ba                	mv	a5,a4
 18c:	00e683b3          	add	t2,a3,a4
 190:	40f382b3          	sub	t0,t2,a5
 194:	04504a63          	bgtz	t0,1e8 <mini_pad+0x72>
 198:	fff6c793          	not	a5,a3
 19c:	87fd                	srai	a5,a5,0x1f
 19e:	8efd                	and	a3,a3,a5
 1a0:	96ba                	add	a3,a3,a4
 1a2:	4781                	li	a5,0
 1a4:	40f58633          	sub	a2,a1,a5
 1a8:	00f682b3          	add	t0,a3,a5
 1ac:	04c04263          	bgtz	a2,1f0 <mini_pad+0x7a>
 1b0:	fff5c793          	not	a5,a1
 1b4:	87fd                	srai	a5,a5,0x1f
 1b6:	8dfd                	and	a1,a1,a5
 1b8:	95b6                	add	a1,a1,a3
 1ba:	40e58533          	sub	a0,a1,a4
 1be:	02030463          	beqz	t1,1e6 <mini_pad+0x70>
 1c2:	02b77263          	bgeu	a4,a1,1e6 <mini_pad+0x70>
 1c6:	02a00793          	li	a5,42
 1ca:	fef58fa3          	sb	a5,-1(a1)
 1ce:	fff58693          	addi	a3,a1,-1
 1d2:	00d77a63          	bgeu	a4,a3,1e6 <mini_pad+0x70>
 1d6:	fef58f23          	sb	a5,-2(a1)
 1da:	ffe58693          	addi	a3,a1,-2
 1de:	00d77463          	bgeu	a4,a3,1e6 <mini_pad+0x70>
 1e2:	fef58ea3          	sb	a5,-3(a1)
 1e6:	8082                	ret
 1e8:	0785                	addi	a5,a5,1
 1ea:	fec78fa3          	sb	a2,-1(a5)
 1ee:	b74d                	j	190 <mini_pad+0x1a>
 1f0:	00f50633          	add	a2,a0,a5
 1f4:	00064603          	lbu	a2,0(a2)
 1f8:	0785                	addi	a5,a5,1
 1fa:	00c28023          	sb	a2,0(t0)
 1fe:	b75d                	j	1a4 <mini_pad+0x2e>

00000200 <mini_itoa.part.0>:
 200:	1101                	addi	sp,sp,-32
 202:	ce06                	sw	ra,28(sp)
 204:	cc22                	sw	s0,24(sp)
 206:	ca26                	sw	s1,20(sp)
 208:	c002                	sw	zero,0(sp)
 20a:	832a                	mv	t1,a0
 20c:	00055763          	bgez	a0,21a <mini_itoa.part.0+0x1a>
 210:	e689                	bnez	a3,21a <mini_itoa.part.0+0x1a>
 212:	4785                	li	a5,1
 214:	40a00333          	neg	t1,a0
 218:	c03e                	sw	a5,0(sp)
 21a:	8a05                	andi	a2,a2,1
 21c:	06100413          	li	s0,97
 220:	c219                	beqz	a2,226 <mini_itoa.part.0+0x26>
 222:	04100413          	li	s0,65
 226:	84ba                	mv	s1,a4
 228:	1459                	addi	s0,s0,-10
 22a:	851a                	mv	a0,t1
 22c:	c83a                	sw	a4,16(sp)
 22e:	c21a                	sw	t1,4(sp)
 230:	c62e                	sw	a1,12(sp)
 232:	c41a                	sw	t1,8(sp)
 234:	3d65                	jal	ec <__umodsi3>
 236:	47a5                	li	a5,9
 238:	4322                	lw	t1,8(sp)
 23a:	45b2                	lw	a1,12(sp)
 23c:	4742                	lw	a4,16(sp)
 23e:	0ff57693          	zext.b	a3,a0
 242:	06a7e163          	bltu	a5,a0,2a4 <mini_itoa.part.0+0xa4>
 246:	03068693          	addi	a3,a3,48
 24a:	0ff6f693          	zext.b	a3,a3
 24e:	00148793          	addi	a5,s1,1
 252:	00d48023          	sb	a3,0(s1)
 256:	851a                	mv	a0,t1
 258:	c83a                	sw	a4,16(sp)
 25a:	c63e                	sw	a5,12(sp)
 25c:	c42e                	sw	a1,8(sp)
 25e:	358d                	jal	c0 <__hidden___udivsi3>
 260:	4692                	lw	a3,4(sp)
 262:	45a2                	lw	a1,8(sp)
 264:	47b2                	lw	a5,12(sp)
 266:	4742                	lw	a4,16(sp)
 268:	832a                	mv	t1,a0
 26a:	02b6fb63          	bgeu	a3,a1,2a0 <mini_itoa.part.0+0xa0>
 26e:	4682                	lw	a3,0(sp)
 270:	c699                	beqz	a3,27e <mini_itoa.part.0+0x7e>
 272:	02d00693          	li	a3,45
 276:	00d78023          	sb	a3,0(a5)
 27a:	00248793          	addi	a5,s1,2
 27e:	40e78533          	sub	a0,a5,a4
 282:	01f55693          	srli	a3,a0,0x1f
 286:	96aa                	add	a3,a3,a0
 288:	00078023          	sb	zero,0(a5)
 28c:	8685                	srai	a3,a3,0x1
 28e:	4601                	li	a2,0
 290:	17fd                	addi	a5,a5,-1
 292:	00d64b63          	blt	a2,a3,2a8 <mini_itoa.part.0+0xa8>
 296:	40f2                	lw	ra,28(sp)
 298:	4462                	lw	s0,24(sp)
 29a:	44d2                	lw	s1,20(sp)
 29c:	6105                	addi	sp,sp,32
 29e:	8082                	ret
 2a0:	84be                	mv	s1,a5
 2a2:	b761                	j	22a <mini_itoa.part.0+0x2a>
 2a4:	96a2                	add	a3,a3,s0
 2a6:	b755                	j	24a <mini_itoa.part.0+0x4a>
 2a8:	00c705b3          	add	a1,a4,a2
 2ac:	0007c283          	lbu	t0,0(a5)
 2b0:	0005c303          	lbu	t1,0(a1)
 2b4:	0605                	addi	a2,a2,1
 2b6:	00558023          	sb	t0,0(a1)
 2ba:	00678023          	sb	t1,0(a5)
 2be:	bfc9                	j	290 <mini_itoa.part.0+0x90>

000002c0 <ssd1306_i2c_setup>:
void ssd1306_i2c_setup(void)
{
	uint16_t tempreg;
	
	// Reset I2C1 to init all regs
	RCC->APB1PRSTR |= RCC_APB1Periph_I2C1;
 2c0:	400217b7          	lui	a5,0x40021
 2c4:	4b98                	lw	a4,16(a5)
 2c6:	002006b7          	lui	a3,0x200
 2ca:	8f55                	or	a4,a4,a3
 2cc:	cb98                	sw	a4,16(a5)
	RCC->APB1PRSTR &= ~RCC_APB1Periph_I2C1;
 2ce:	4b98                	lw	a4,16(a5)
 2d0:	ffe006b7          	lui	a3,0xffe00
 2d4:	16fd                	addi	a3,a3,-1 # ffdfffff <__global_pointer$+0xdfdff7ff>
 2d6:	8f75                	and	a4,a4,a3
 2d8:	cb98                	sw	a4,16(a5)
	
	// set freq
	tempreg = I2C1->CTLR2;
 2da:	400057b7          	lui	a5,0x40005
 2de:	4047d703          	lhu	a4,1028(a5) # 40005404 <__global_pointer$+0x20004c04>
	tempreg &= ~I2C_CTLR2_FREQ;
 2e2:	66c1                	lui	a3,0x10
 2e4:	fc068693          	addi	a3,a3,-64 # ffc0 <main.c.a622940e+0xdc91>
 2e8:	8f75                	and	a4,a4,a3
	tempreg |= (FUNCONF_SYSTEM_CORE_CLOCK/SSD1306_I2C_PRERATE)&I2C_CTLR2_FREQ;
 2ea:	01876713          	ori	a4,a4,24
	I2C1->CTLR2 = tempreg;
 2ee:	40e79223          	sh	a4,1028(a5)
	tempreg = (FUNCONF_SYSTEM_CORE_CLOCK/(25*SSD1306_I2C_CLKRATE))&I2C_CKCFGR_CCR;
	tempreg |= I2C_CKCFGR_DUTY;
#endif
	tempreg |= I2C_CKCFGR_FS;
#endif
	I2C1->CKCFGR = tempreg;
 2f2:	7771                	lui	a4,0xffffc
 2f4:	0705                	addi	a4,a4,1 # ffffc001 <__global_pointer$+0xdfffb801>
 2f6:	40e79e23          	sh	a4,1052(a5)
	// initialize the state
	ssd1306_i2c_irq_state = 0;
#endif
	
	// Enable I2C
	I2C1->CTLR1 |= I2C_CTLR1_PE;
 2fa:	4007d703          	lhu	a4,1024(a5)
 2fe:	00176713          	ori	a4,a4,1
 302:	40e79023          	sh	a4,1024(a5)

	// set ACK mode
	I2C1->CTLR1 |= I2C_CTLR1_ACK;
 306:	4007d703          	lhu	a4,1024(a5)
 30a:	40076713          	ori	a4,a4,1024
 30e:	40e79023          	sh	a4,1024(a5)
}
 312:	8082                	ret

00000314 <ssd1306_drawImage>:

/*
 * draw a an image from an array, directly into to the display buffer
 * the color modes allow for overwriting and even layering (sprites!)
 */
void ssd1306_drawImage(int x, int y, const unsigned char* input, uint8_t width, uint8_t height, uint8_t color_mode) {
 314:	fcc10113          	addi	sp,sp,-52
 318:	d03e                	sw	a5,32(sp)
	int x_absolute;
	int y_absolute;
	uint8_t pixel;
	uint8_t bytes_to_draw = width / 8;
 31a:	0036d793          	srli	a5,a3,0x3
 31e:	0f86f693          	andi	a3,a3,248
 322:	c63e                	sw	a5,12(sp)
	uint16_t buffer_addr;

	for (uint8_t line = 0; line < height; line++) {
 324:	00a687b3          	add	a5,a3,a0
void ssd1306_drawImage(int x, int y, const unsigned char* input, uint8_t width, uint8_t height, uint8_t color_mode) {
 328:	d622                	sw	s0,44(sp)
 32a:	d426                	sw	s1,40(sp)
 32c:	d806                	sw	ra,48(sp)
 32e:	c02a                	sw	a0,0(sp)
 330:	ca2e                	sw	a1,20(sp)
 332:	cc32                	sw	a2,24(sp)
 334:	ce3a                	sw	a4,28(sp)
 336:	c43e                	sw	a5,8(sp)
	for (uint8_t line = 0; line < height; line++) {
 338:	4401                	li	s0,0
			break;
		}

		// SSD1306 is in vertical mode, yet we want to draw horizontally, which necessitates assembling the output bytes from the input data
		// bitmask for current pixel in vertical (output) byte
		uint8_t v_mask = 1 << (y_absolute & 7);
 33a:	4485                	li	s1,1
		y_absolute = y + line;
 33c:	47d2                	lw	a5,20(sp)
 33e:	97a2                	add	a5,a5,s0
    if (y_absolute < 0) {
 340:	0007de63          	bgez	a5,35c <ssd1306_drawImage+0x48>
	for (uint8_t line = 0; line < height; line++) {
 344:	47f2                	lw	a5,28(sp)
 346:	0405                	addi	s0,s0,1
 348:	0ff47413          	zext.b	s0,s0
 34c:	fef468e3          	bltu	s0,a5,33c <ssd1306_drawImage+0x28>
		}
		#if SSD1306_LOG_IMAGE == 1
		printf("\n\r");
		#endif
	}
}
 350:	50c2                	lw	ra,48(sp)
 352:	5432                	lw	s0,44(sp)
 354:	54a2                	lw	s1,40(sp)
 356:	03410113          	addi	sp,sp,52
 35a:	8082                	ret
		if (y_absolute >= SSD1306_H || y_absolute < 0) {
 35c:	03f00713          	li	a4,63
 360:	fef768e3          	bltu	a4,a5,350 <ssd1306_drawImage+0x3c>
			uint8_t input_byte = input[byte + line * bytes_to_draw];
 364:	45b2                	lw	a1,12(sp)
		uint8_t v_mask = 1 << (y_absolute & 7);
 366:	0077f713          	andi	a4,a5,7
 36a:	c83e                	sw	a5,16(sp)
			uint8_t input_byte = input[byte + line * bytes_to_draw];
 36c:	8522                	mv	a0,s0
		uint8_t v_mask = 1 << (y_absolute & 7);
 36e:	00e497b3          	sll	a5,s1,a4
 372:	c23e                	sw	a5,4(sp)
			uint8_t input_byte = input[byte + line * bytes_to_draw];
 374:	3335                	jal	a0 <__mulsi3>
 376:	47e2                	lw	a5,24(sp)
 378:	4322                	lw	t1,8(sp)
 37a:	953e                	add	a0,a0,a5
				buffer_addr = x_absolute + SSD1306_W * (y_absolute / 8);
 37c:	47c2                	lw	a5,16(sp)
 37e:	878d                	srai	a5,a5,0x3
 380:	079e                	slli	a5,a5,0x7
 382:	d23e                	sw	a5,36(sp)
			uint8_t input_byte = input[byte + line * bytes_to_draw];
 384:	00054783          	lbu	a5,0(a0)
 388:	4581                	li	a1,0
 38a:	c83e                	sw	a5,16(sp)
				if (x_absolute >= SSD1306_W) {
 38c:	00b306b3          	add	a3,t1,a1
 390:	07f00793          	li	a5,127
 394:	00d7d863          	bge	a5,a3,3a4 <ssd1306_drawImage+0x90>
		for (uint8_t byte = 0; byte < bytes_to_draw; byte++) {
 398:	4782                	lw	a5,0(sp)
 39a:	1361                	addi	t1,t1,-8
 39c:	0505                	addi	a0,a0,1
 39e:	fe6793e3          	bne	a5,t1,384 <ssd1306_drawImage+0x70>
 3a2:	b74d                	j	344 <ssd1306_drawImage+0x30>
				uint8_t input_pixel = input_byte & (1 << pixel);
 3a4:	47c2                	lw	a5,16(sp)
 3a6:	00b49733          	sll	a4,s1,a1
						ssd1306_buffer[buffer_addr] = (ssd1306_buffer[buffer_addr] & ~v_mask) | (input_pixel ? v_mask : 0);
 3aa:	200002b7          	lui	t0,0x20000
				uint8_t input_pixel = input_byte & (1 << pixel);
 3ae:	8f7d                	and	a4,a4,a5
				buffer_addr = x_absolute + SSD1306_W * (y_absolute / 8);
 3b0:	5792                	lw	a5,36(sp)
						ssd1306_buffer[buffer_addr] = (ssd1306_buffer[buffer_addr] & ~v_mask) | (input_pixel ? v_mask : 0);
 3b2:	8396                	mv	t2,t0
 3b4:	00028293          	mv	t0,t0
				buffer_addr = x_absolute + SSD1306_W * (y_absolute / 8);
 3b8:	96be                	add	a3,a3,a5
						ssd1306_buffer[buffer_addr] = (ssd1306_buffer[buffer_addr] & ~v_mask) | (input_pixel ? v_mask : 0);
 3ba:	06c2                	slli	a3,a3,0x10
 3bc:	82c1                	srli	a3,a3,0x10
 3be:	00410603          	lb	a2,4(sp)
 3c2:	92b6                	add	t0,t0,a3
 3c4:	0002c283          	lbu	t0,0(t0) # 20000000 <ssd1306_buffer>
 3c8:	fff64793          	not	a5,a2
 3cc:	0057f7b3          	and	a5,a5,t0
 3d0:	00038293          	mv	t0,t2
				switch (color_mode) {
 3d4:	5382                	lw	t2,32(sp)
						ssd1306_buffer[buffer_addr] = (ssd1306_buffer[buffer_addr] & ~v_mask) | (input_pixel ? v_mask : 0);
 3d6:	07e2                	slli	a5,a5,0x18
 3d8:	87e1                	srai	a5,a5,0x18
				switch (color_mode) {
 3da:	02938263          	beq	t2,s1,3fe <ssd1306_drawImage+0xea>
						ssd1306_buffer[buffer_addr] = (ssd1306_buffer[buffer_addr] & ~v_mask) | (input_pixel ? v_mask : 0);
 3de:	00e03733          	snez	a4,a4
						ssd1306_buffer[buffer_addr] = (ssd1306_buffer[buffer_addr] & ~v_mask) | (!input_pixel ? v_mask : 0);
 3e2:	40e00733          	neg	a4,a4
 3e6:	8e79                	and	a2,a2,a4
 3e8:	8fd1                	or	a5,a5,a2
 3ea:	0ff7f793          	zext.b	a5,a5
 3ee:	92b6                	add	t0,t0,a3
 3f0:	00f28023          	sb	a5,0(t0)
			for (pixel = 0; pixel < 8; pixel++) {
 3f4:	0585                	addi	a1,a1,1
 3f6:	47a1                	li	a5,8
 3f8:	f8f59ae3          	bne	a1,a5,38c <ssd1306_drawImage+0x78>
 3fc:	bf71                	j	398 <ssd1306_drawImage+0x84>
						ssd1306_buffer[buffer_addr] = (ssd1306_buffer[buffer_addr] & ~v_mask) | (!input_pixel ? v_mask : 0);
 3fe:	00173713          	seqz	a4,a4
 402:	b7c5                	j	3e2 <ssd1306_drawImage+0xce>

00000404 <internal_handle_input.constprop.0>:
 404:	e00007b7          	lui	a5,0xe0000
 408:	0f47a783          	lw	a5,244(a5) # e00000f4 <__global_pointer$+0xbffff8f4>
 40c:	8082                	ret

0000040e <_write.constprop.0>:
 40e:	1121                	addi	sp,sp,-24
 410:	c822                	sw	s0,16(sp)
 412:	ca06                	sw	ra,20(sp)
 414:	c626                	sw	s1,12(sp)
 416:	c402                	sw	zero,8(sp)
 418:	842e                	mv	s0,a1
 41a:	eddd                	bnez	a1,4d8 <_write.constprop.0+0xca>
 41c:	e00007b7          	lui	a5,0xe0000
 420:	0f47a783          	lw	a5,244(a5) # e00000f4 <__global_pointer$+0xbffff8f4>
 424:	c789                	beqz	a5,42e <_write.constprop.0+0x20>
 426:	0807f793          	andi	a5,a5,128
 42a:	e391                	bnez	a5,42e <_write.constprop.0+0x20>
 42c:	3fe1                	jal	404 <internal_handle_input.constprop.0>
 42e:	40d2                	lw	ra,20(sp)
 430:	8522                	mv	a0,s0
 432:	4442                	lw	s0,16(sp)
 434:	44b2                	lw	s1,12(sp)
 436:	0161                	addi	sp,sp,24
 438:	8082                	ret
 43a:	409407b3          	sub	a5,s0,s1
 43e:	471d                	li	a4,7
 440:	00f75363          	bge	a4,a5,446 <_write.constprop.0+0x38>
 444:	87ba                	mv	a5,a4
 446:	00027737          	lui	a4,0x27
 44a:	e00006b7          	lui	a3,0xe0000
 44e:	10170713          	addi	a4,a4,257 # 27101 <main.c.a622940e+0x24dd2>
 452:	0f468693          	addi	a3,a3,244 # e00000f4 <__global_pointer$+0xbffff8f4>
 456:	4290                	lw	a2,0(a3)
 458:	08067593          	andi	a1,a2,128
 45c:	e1a5                	bnez	a1,4bc <_write.constprop.0+0xae>
 45e:	c611                	beqz	a2,46a <_write.constprop.0+0x5c>
 460:	c22a                	sw	a0,4(sp)
 462:	c03e                	sw	a5,0(sp)
 464:	3745                	jal	404 <internal_handle_input.constprop.0>
 466:	4512                	lw	a0,4(sp)
 468:	4782                	lw	a5,0(sp)
 46a:	0034                	addi	a3,sp,8
 46c:	470d                	li	a4,3
 46e:	85b6                	mv	a1,a3
 470:	04f74a63          	blt	a4,a5,4c4 <_write.constprop.0+0xb6>
 474:	46a2                	lw	a3,8(sp)
 476:	e0000737          	lui	a4,0xe0000
 47a:	460d                	li	a2,3
 47c:	0ed72c23          	sw	a3,248(a4) # e00000f8 <__global_pointer$+0xbffff8f8>
 480:	009506b3          	add	a3,a0,s1
 484:	4701                	li	a4,0
 486:	0006c283          	lbu	t0,0(a3)
 48a:	0705                	addi	a4,a4,1
 48c:	00e58333          	add	t1,a1,a4
 490:	00530023          	sb	t0,0(t1)
 494:	00e78563          	beq	a5,a4,49e <_write.constprop.0+0x90>
 498:	0685                	addi	a3,a3,1
 49a:	fec716e3          	bne	a4,a2,486 <_write.constprop.0+0x78>
 49e:	00478713          	addi	a4,a5,4
 4a2:	f8076713          	ori	a4,a4,-128
 4a6:	00e10423          	sb	a4,8(sp)
 4aa:	46a2                	lw	a3,8(sp)
 4ac:	e0000737          	lui	a4,0xe0000
 4b0:	94be                	add	s1,s1,a5
 4b2:	0ed72a23          	sw	a3,244(a4) # e00000f4 <__global_pointer$+0xbffff8f4>
 4b6:	f884c2e3          	blt	s1,s0,43a <_write.constprop.0+0x2c>
 4ba:	bf95                	j	42e <_write.constprop.0+0x20>
 4bc:	177d                	addi	a4,a4,-1
 4be:	ff41                	bnez	a4,456 <_write.constprop.0+0x48>
 4c0:	8426                	mv	s0,s1
 4c2:	b7b5                	j	42e <_write.constprop.0+0x20>
 4c4:	00e48633          	add	a2,s1,a4
 4c8:	962a                	add	a2,a2,a0
 4ca:	00064603          	lbu	a2,0(a2)
 4ce:	0705                	addi	a4,a4,1
 4d0:	0685                	addi	a3,a3,1
 4d2:	fec68fa3          	sb	a2,-1(a3)
 4d6:	bf69                	j	470 <_write.constprop.0+0x62>
 4d8:	4481                	li	s1,0
 4da:	bff1                	j	4b6 <_write.constprop.0+0xa8>

000004dc <__puts_uart>:
 4dc:	1161                	addi	sp,sp,-8
 4de:	c022                	sw	s0,0(sp)
 4e0:	c206                	sw	ra,4(sp)
 4e2:	842e                	mv	s0,a1
 4e4:	372d                	jal	40e <_write.constprop.0>
 4e6:	4092                	lw	ra,4(sp)
 4e8:	8522                	mv	a0,s0
 4ea:	4402                	lw	s0,0(sp)
 4ec:	0121                	addi	sp,sp,8
 4ee:	8082                	ret

000004f0 <handle_reset>:
 4f0:	20000197          	auipc	gp,0x20000
 4f4:	31018193          	addi	gp,gp,784 # 20000800 <__global_pointer$>
 4f8:	00018113          	mv	sp,gp
 4fc:	08000513          	li	a0,128
 500:	30051073          	csrw	mstatus,a0
 504:	468d                	li	a3,3
 506:	00000517          	auipc	a0,0x0
 50a:	afa50513          	addi	a0,a0,-1286 # 0 <InterruptVector>
 50e:	8d55                	or	a0,a0,a3
 510:	30551073          	csrw	mtvec,a0
 514:	20000517          	auipc	a0,0x20000
 518:	aec50513          	addi	a0,a0,-1300 # 20000000 <ssd1306_buffer>
 51c:	c0018593          	addi	a1,gp,-1024 # 20000400 <_ebss>
 520:	4601                	li	a2,0
 522:	00b55663          	bge	a0,a1,52e <handle_reset+0x3e>
 526:	c110                	sw	a2,0(a0)
 528:	0511                	addi	a0,a0,4
 52a:	feb54ee3          	blt	a0,a1,526 <handle_reset+0x36>
 52e:	00001517          	auipc	a0,0x1
 532:	93650513          	addi	a0,a0,-1738 # e64 <_data_lma>
 536:	20000597          	auipc	a1,0x20000
 53a:	aca58593          	addi	a1,a1,-1334 # 20000000 <ssd1306_buffer>
 53e:	20000617          	auipc	a2,0x20000
 542:	ac260613          	addi	a2,a2,-1342 # 20000000 <ssd1306_buffer>
 546:	00c58863          	beq	a1,a2,556 <handle_reset+0x66>
 54a:	4114                	lw	a3,0(a0)
 54c:	c194                	sw	a3,0(a1)
 54e:	0511                	addi	a0,a0,4
 550:	0591                	addi	a1,a1,4
 552:	fec59ae3          	bne	a1,a2,546 <handle_reset+0x56>
 556:	e000f7b7          	lui	a5,0xe000f
 55a:	4705                	li	a4,1
 55c:	c398                	sw	a4,0(a5)
 55e:	6785                	lui	a5,0x1
 560:	9ac78793          	addi	a5,a5,-1620 # 9ac <main>
 564:	34179073          	csrw	mepc,a5
 568:	30200073          	mret

0000056c <ADC1_IRQHandler>:
 56c:	a001                	j	56c <ADC1_IRQHandler>

0000056e <NMI_Handler>:
 56e:	40021737          	lui	a4,0x40021
 572:	471c                	lw	a5,8(a4)
 574:	008006b7          	lui	a3,0x800
 578:	8fd5                	or	a5,a5,a3
 57a:	c71c                	sw	a5,8(a4)

0000057c <strlen>:
 57c:	87aa                	mv	a5,a0
 57e:	0007c703          	lbu	a4,0(a5)
 582:	e701                	bnez	a4,58a <strlen+0xe>
 584:	40a78533          	sub	a0,a5,a0
 588:	8082                	ret
 58a:	0785                	addi	a5,a5,1
 58c:	bfcd                	j	57e <strlen+0x2>

0000058e <mini_vpprintf>:
 58e:	fa410113          	addi	sp,sp,-92
 592:	caa2                	sw	s0,84(sp)
 594:	c8a6                	sw	s1,80(sp)
 596:	cc86                	sw	ra,88(sp)
 598:	c02a                	sw	a0,0(sp)
 59a:	c22e                	sw	a1,4(sp)
 59c:	8432                	mv	s0,a2
 59e:	84b6                	mv	s1,a3
 5a0:	e509                	bnez	a0,5aa <mini_vpprintf+0x1c>
 5a2:	13600793          	li	a5,310
 5a6:	c202                	sw	zero,4(sp)
 5a8:	c03e                	sw	a5,0(sp)
 5aa:	ca02                	sw	zero,20(sp)
 5ac:	00044783          	lbu	a5,0(s0)
 5b0:	00140713          	addi	a4,s0,1
 5b4:	00f10fa3          	sb	a5,31(sp)
 5b8:	eb81                	bnez	a5,5c8 <mini_vpprintf+0x3a>
 5ba:	40e6                	lw	ra,88(sp)
 5bc:	4456                	lw	s0,84(sp)
 5be:	4552                	lw	a0,20(sp)
 5c0:	44c6                	lw	s1,80(sp)
 5c2:	05c10113          	addi	sp,sp,92
 5c6:	8082                	ret
 5c8:	c63a                	sw	a4,12(sp)
 5ca:	02500693          	li	a3,37
 5ce:	02d78063          	beq	a5,a3,5ee <mini_vpprintf+0x60>
 5d2:	4612                	lw	a2,4(sp)
 5d4:	4782                	lw	a5,0(sp)
 5d6:	4585                	li	a1,1
 5d8:	01f10513          	addi	a0,sp,31
 5dc:	9782                	jalr	a5
 5de:	4732                	lw	a4,12(sp)
 5e0:	c426                	sw	s1,8(sp)
 5e2:	843a                	mv	s0,a4
 5e4:	47d2                	lw	a5,20(sp)
 5e6:	44a2                	lw	s1,8(sp)
 5e8:	97aa                	add	a5,a5,a0
 5ea:	ca3e                	sw	a5,20(sp)
 5ec:	b7c1                	j	5ac <mini_vpprintf+0x1e>
 5ee:	00144783          	lbu	a5,1(s0)
 5f2:	03000693          	li	a3,48
 5f6:	00240713          	addi	a4,s0,2
 5fa:	00f10fa3          	sb	a5,31(sp)
 5fe:	c63e                	sw	a5,12(sp)
 600:	08d79363          	bne	a5,a3,686 <mini_vpprintf+0xf8>
 604:	843a                	mv	s0,a4
 606:	4681                	li	a3,0
 608:	4701                	li	a4,0
 60a:	45a5                	li	a1,9
 60c:	a819                	j	622 <mini_vpprintf+0x94>
 60e:	00271793          	slli	a5,a4,0x2
 612:	97ba                	add	a5,a5,a4
 614:	0786                	slli	a5,a5,0x1
 616:	0405                	addi	s0,s0,1
 618:	00f60733          	add	a4,a2,a5
 61c:	fff44783          	lbu	a5,-1(s0)
 620:	4685                	li	a3,1
 622:	fd078613          	addi	a2,a5,-48
 626:	0ff67513          	zext.b	a0,a2
 62a:	fea5f2e3          	bgeu	a1,a0,60e <mini_vpprintf+0x80>
 62e:	c299                	beqz	a3,634 <mini_vpprintf+0xa6>
 630:	00f10fa3          	sb	a5,31(sp)
 634:	c83a                	sw	a4,16(sp)
 636:	46e1                	li	a3,24
 638:	00e6d363          	bge	a3,a4,63e <mini_vpprintf+0xb0>
 63c:	c836                	sw	a3,16(sp)
 63e:	06c00613          	li	a2,108
 642:	4681                	li	a3,0
 644:	00c79863          	bne	a5,a2,654 <mini_vpprintf+0xc6>
 648:	00044783          	lbu	a5,0(s0)
 64c:	4685                	li	a3,1
 64e:	0405                	addi	s0,s0,1
 650:	00f10fa3          	sb	a5,31(sp)
 654:	01f14603          	lbu	a2,31(sp)
 658:	06400793          	li	a5,100
 65c:	06f60563          	beq	a2,a5,6c6 <mini_vpprintf+0x138>
 660:	02c7e763          	bltu	a5,a2,68e <mini_vpprintf+0x100>
 664:	05800793          	li	a5,88
 668:	0af60063          	beq	a2,a5,708 <mini_vpprintf+0x17a>
 66c:	06300793          	li	a5,99
 670:	0af60d63          	beq	a2,a5,72a <mini_vpprintf+0x19c>
 674:	d239                	beqz	a2,5ba <mini_vpprintf+0x2c>
 676:	4612                	lw	a2,4(sp)
 678:	4782                	lw	a5,0(sp)
 67a:	4585                	li	a1,1
 67c:	01f10513          	addi	a0,sp,31
 680:	9782                	jalr	a5
 682:	c426                	sw	s1,8(sp)
 684:	b785                	j	5e4 <mini_vpprintf+0x56>
 686:	02000693          	li	a3,32
 68a:	c636                	sw	a3,12(sp)
 68c:	bfa5                	j	604 <mini_vpprintf+0x76>
 68e:	07500793          	li	a5,117
 692:	02f60a63          	beq	a2,a5,6c6 <mini_vpprintf+0x138>
 696:	07800793          	li	a5,120
 69a:	06f60763          	beq	a2,a5,708 <mini_vpprintf+0x17a>
 69e:	07300793          	li	a5,115
 6a2:	fcf61ae3          	bne	a2,a5,676 <mini_vpprintf+0xe8>
 6a6:	00448793          	addi	a5,s1,4
 6aa:	4084                	lw	s1,0(s1)
 6ac:	cc3a                	sw	a4,24(sp)
 6ae:	c43e                	sw	a5,8(sp)
 6b0:	8526                	mv	a0,s1
 6b2:	35e9                	jal	57c <strlen>
 6b4:	4762                	lw	a4,24(sp)
 6b6:	85aa                	mv	a1,a0
 6b8:	08e05663          	blez	a4,744 <mini_vpprintf+0x1b6>
 6bc:	46c2                	lw	a3,16(sp)
 6be:	4632                	lw	a2,12(sp)
 6c0:	1838                	addi	a4,sp,56
 6c2:	8526                	mv	a0,s1
 6c4:	a01d                	j	6ea <mini_vpprintf+0x15c>
 6c6:	00448793          	addi	a5,s1,4
 6ca:	c43e                	sw	a5,8(sp)
 6cc:	c695                	beqz	a3,6f8 <mini_vpprintf+0x16a>
 6ce:	f8b60613          	addi	a2,a2,-117
 6d2:	1018                	addi	a4,sp,32
 6d4:	00163693          	seqz	a3,a2
 6d8:	4088                	lw	a0,0(s1)
 6da:	4601                	li	a2,0
 6dc:	45a9                	li	a1,10
 6de:	360d                	jal	200 <mini_itoa.part.0>
 6e0:	46c2                	lw	a3,16(sp)
 6e2:	4632                	lw	a2,12(sp)
 6e4:	1838                	addi	a4,sp,56
 6e6:	85aa                	mv	a1,a0
 6e8:	1008                	addi	a0,sp,32
 6ea:	3471                	jal	176 <mini_pad>
 6ec:	4612                	lw	a2,4(sp)
 6ee:	85aa                	mv	a1,a0
 6f0:	1828                	addi	a0,sp,56
 6f2:	4782                	lw	a5,0(sp)
 6f4:	9782                	jalr	a5
 6f6:	b5fd                	j	5e4 <mini_vpprintf+0x56>
 6f8:	07500793          	li	a5,117
 6fc:	1018                	addi	a4,sp,32
 6fe:	4685                	li	a3,1
 700:	fcf60ce3          	beq	a2,a5,6d8 <mini_vpprintf+0x14a>
 704:	4681                	li	a3,0
 706:	bfc9                	j	6d8 <mini_vpprintf+0x14a>
 708:	4088                	lw	a0,0(s1)
 70a:	fa860613          	addi	a2,a2,-88
 70e:	00448793          	addi	a5,s1,4
 712:	1018                	addi	a4,sp,32
 714:	4685                	li	a3,1
 716:	00163613          	seqz	a2,a2
 71a:	45c1                	li	a1,16
 71c:	c43e                	sw	a5,8(sp)
 71e:	34cd                	jal	200 <mini_itoa.part.0>
 720:	46c2                	lw	a3,16(sp)
 722:	4632                	lw	a2,12(sp)
 724:	85aa                	mv	a1,a0
 726:	1838                	addi	a4,sp,56
 728:	b7c1                	j	6e8 <mini_vpprintf+0x15a>
 72a:	00448793          	addi	a5,s1,4
 72e:	c43e                	sw	a5,8(sp)
 730:	409c                	lw	a5,0(s1)
 732:	46c2                	lw	a3,16(sp)
 734:	4632                	lw	a2,12(sp)
 736:	00f10fa3          	sb	a5,31(sp)
 73a:	1838                	addi	a4,sp,56
 73c:	4585                	li	a1,1
 73e:	01f10513          	addi	a0,sp,31
 742:	b765                	j	6ea <mini_vpprintf+0x15c>
 744:	4612                	lw	a2,4(sp)
 746:	8526                	mv	a0,s1
 748:	b76d                	j	6f2 <mini_vpprintf+0x164>

0000074a <printf>:
 74a:	1111                	addi	sp,sp,-28
 74c:	c632                	sw	a2,12(sp)
 74e:	862a                	mv	a2,a0
 750:	c42e                	sw	a1,8(sp)
 752:	c836                	sw	a3,16(sp)
 754:	4581                	li	a1,0
 756:	0034                	addi	a3,sp,8
 758:	4dc00513          	li	a0,1244
 75c:	c206                	sw	ra,4(sp)
 75e:	ca3a                	sw	a4,20(sp)
 760:	cc3e                	sw	a5,24(sp)
 762:	c036                	sw	a3,0(sp)
 764:	352d                	jal	58e <mini_vpprintf>
 766:	4092                	lw	ra,4(sp)
 768:	0171                	addi	sp,sp,28
 76a:	8082                	ret

0000076c <ssd1306_i2c_error.isra.0>:
 * error handler
 */
uint8_t ssd1306_i2c_error(uint8_t err)
{
	// report error
	printf("ssd1306_i2c_error - timeout waiting for %s\n\r", errstr[err]);
 76c:	6785                	lui	a5,0x1
 76e:	050a                	slli	a0,a0,0x2
 770:	c6c78793          	addi	a5,a5,-916 # c6c <errstr>
 774:	97aa                	add	a5,a5,a0
 776:	438c                	lw	a1,0(a5)
 778:	6505                	lui	a0,0x1
uint8_t ssd1306_i2c_error(uint8_t err)
 77a:	1171                	addi	sp,sp,-4
	printf("ssd1306_i2c_error - timeout waiting for %s\n\r", errstr[err]);
 77c:	bf450513          	addi	a0,a0,-1036 # bf4 <main+0x248>
uint8_t ssd1306_i2c_error(uint8_t err)
 780:	c006                	sw	ra,0(sp)
	printf("ssd1306_i2c_error - timeout waiting for %s\n\r", errstr[err]);
 782:	37e1                	jal	74a <printf>
	
	// reset & initialize I2C
	ssd1306_i2c_setup();

	return 1;
}
 784:	4082                	lw	ra,0(sp)
 786:	0111                	addi	sp,sp,4
	ssd1306_i2c_setup();
 788:	be25                	j	2c0 <ssd1306_i2c_setup>

0000078a <ssd1306_i2c_send.constprop.0.isra.0>:
uint8_t ssd1306_i2c_send(uint8_t addr, uint8_t *data, uint8_t sz)
{
	int32_t timeout;
	
	// wait for not busy
	timeout = TIMEOUT_MAX;
 78a:	6761                	lui	a4,0x18
	while((I2C1->STAR2 & I2C_STAR2_BUSY) && (timeout--));
 78c:	400057b7          	lui	a5,0x40005
	timeout = TIMEOUT_MAX;
 790:	6a070713          	addi	a4,a4,1696 # 186a0 <main.c.a622940e+0x16371>
	while((I2C1->STAR2 & I2C_STAR2_BUSY) && (timeout--));
 794:	40078793          	addi	a5,a5,1024 # 40005400 <__global_pointer$+0x20004c00>
 798:	567d                	li	a2,-1
 79a:	0187d683          	lhu	a3,24(a5)
 79e:	8a89                	andi	a3,a3,2
 7a0:	cedd                	beqz	a3,85e <ssd1306_i2c_send.constprop.0.isra.0+0xd4>
 7a2:	177d                	addi	a4,a4,-1
 7a4:	fec71be3          	bne	a4,a2,79a <ssd1306_i2c_send.constprop.0.isra.0+0x10>
	if(timeout==-1)
		return ssd1306_i2c_error(0);
 7a8:	4501                	li	a0,0
 7aa:	a821                	j	7c2 <ssd1306_i2c_send.constprop.0.isra.0+0x38>
 7ac:	67e1                	lui	a5,0x18
 7ae:	6a178793          	addi	a5,a5,1697 # 186a1 <main.c.a622940e+0x16372>
	// send data one byte at a time
	while(sz--)
	{
		// wait for TX Empty
		timeout = TIMEOUT_MAX;
		while(!(I2C1->STAR1 & I2C_STAR1_TXE) && (timeout--));
 7b2:	01475683          	lhu	a3,20(a4)
 7b6:	0806f693          	andi	a3,a3,128
 7ba:	e689                	bnez	a3,7c4 <ssd1306_i2c_send.constprop.0.isra.0+0x3a>
 7bc:	17fd                	addi	a5,a5,-1
 7be:	fbf5                	bnez	a5,7b2 <ssd1306_i2c_send.constprop.0.isra.0+0x28>
		if(timeout==-1)
			return ssd1306_i2c_error(3);
 7c0:	450d                	li	a0,3
		return ssd1306_i2c_error(0);
 7c2:	b76d                	j	76c <ssd1306_i2c_error.isra.0>
		
		// send command
		I2C1->DATAR = *data++;
 7c4:	00054783          	lbu	a5,0(a0)
 7c8:	0505                	addi	a0,a0,1
 7ca:	00f71823          	sh	a5,16(a4)
	while(sz--)
 7ce:	fcb51fe3          	bne	a0,a1,7ac <ssd1306_i2c_send.constprop.0.isra.0+0x22>
	}

	// wait for tx complete
	timeout = TIMEOUT_MAX;
 7d2:	66e1                	lui	a3,0x18
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
 7d4:	40005737          	lui	a4,0x40005
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_BYTE_TRANSMITTED)) && (timeout--));
 7d8:	00070637          	lui	a2,0x70
	timeout = TIMEOUT_MAX;
 7dc:	6a068693          	addi	a3,a3,1696 # 186a0 <main.c.a622940e+0x16371>
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
 7e0:	40070713          	addi	a4,a4,1024 # 40005400 <__global_pointer$+0x20004c00>
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_BYTE_TRANSMITTED)) && (timeout--));
 7e4:	08460613          	addi	a2,a2,132 # 70084 <main.c.a622940e+0x6dd55>
 7e8:	55fd                	li	a1,-1
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
 7ea:	01475503          	lhu	a0,20(a4)
 7ee:	01875783          	lhu	a5,24(a4)
 7f2:	07c2                	slli	a5,a5,0x10
 7f4:	8fc9                	or	a5,a5,a0
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_BYTE_TRANSMITTED)) && (timeout--));
 7f6:	8ff1                	and	a5,a5,a2
 7f8:	00c78763          	beq	a5,a2,806 <ssd1306_i2c_send.constprop.0.isra.0+0x7c>
 7fc:	16fd                	addi	a3,a3,-1
 7fe:	feb696e3          	bne	a3,a1,7ea <ssd1306_i2c_send.constprop.0.isra.0+0x60>
	if(timeout==-1)
		return ssd1306_i2c_error(4);
 802:	4511                	li	a0,4
 804:	bf7d                	j	7c2 <ssd1306_i2c_send.constprop.0.isra.0+0x38>

	// set STOP condition
	I2C1->CTLR1 |= I2C_CTLR1_STOP;
 806:	00075783          	lhu	a5,0(a4)
 80a:	2007e793          	ori	a5,a5,512
 80e:	00f71023          	sh	a5,0(a4)
	
	// we're happy
	return 0;
}
 812:	8082                	ret
		while(!(I2C1->STAR1 & I2C_STAR1_TXE) && (timeout--));
 814:	40005737          	lui	a4,0x40005
 818:	95aa                	add	a1,a1,a0
 81a:	40070713          	addi	a4,a4,1024 # 40005400 <__global_pointer$+0x20004c00>
 81e:	bf45                	j	7ce <ssd1306_i2c_send.constprop.0.isra.0+0x44>
	I2C1->DATAR = addr<<1;
 820:	07800793          	li	a5,120
 824:	00f71823          	sh	a5,16(a4)
	timeout = TIMEOUT_MAX;
 828:	6661                	lui	a2,0x18
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
 82a:	400056b7          	lui	a3,0x40005
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_TRANSMITTER_MODE_SELECTED)) && (timeout--));
 82e:	00070737          	lui	a4,0x70
	timeout = TIMEOUT_MAX;
 832:	6a060613          	addi	a2,a2,1696 # 186a0 <main.c.a622940e+0x16371>
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
 836:	40068693          	addi	a3,a3,1024 # 40005400 <__global_pointer$+0x20004c00>
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_TRANSMITTER_MODE_SELECTED)) && (timeout--));
 83a:	08270713          	addi	a4,a4,130 # 70082 <main.c.a622940e+0x6dd53>
 83e:	537d                	li	t1,-1
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
 840:	0146d283          	lhu	t0,20(a3)
 844:	0186d783          	lhu	a5,24(a3)
 848:	07c2                	slli	a5,a5,0x10
 84a:	0057e7b3          	or	a5,a5,t0
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_TRANSMITTER_MODE_SELECTED)) && (timeout--));
 84e:	8ff9                	and	a5,a5,a4
 850:	fce782e3          	beq	a5,a4,814 <ssd1306_i2c_send.constprop.0.isra.0+0x8a>
 854:	167d                	addi	a2,a2,-1
 856:	fe6615e3          	bne	a2,t1,840 <ssd1306_i2c_send.constprop.0.isra.0+0xb6>
		return ssd1306_i2c_error(2);
 85a:	4509                	li	a0,2
 85c:	b79d                	j	7c2 <ssd1306_i2c_send.constprop.0.isra.0+0x38>
	I2C1->CTLR1 |= I2C_CTLR1_START;
 85e:	0007d703          	lhu	a4,0(a5)
	timeout = TIMEOUT_MAX;
 862:	66e1                	lui	a3,0x18
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_MODE_SELECT)) && (timeout--));
 864:	00030637          	lui	a2,0x30
	I2C1->CTLR1 |= I2C_CTLR1_START;
 868:	10076713          	ori	a4,a4,256
 86c:	00e79023          	sh	a4,0(a5)
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
 870:	40005737          	lui	a4,0x40005
	timeout = TIMEOUT_MAX;
 874:	6a068693          	addi	a3,a3,1696 # 186a0 <main.c.a622940e+0x16371>
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
 878:	40070713          	addi	a4,a4,1024 # 40005400 <__global_pointer$+0x20004c00>
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_MODE_SELECT)) && (timeout--));
 87c:	0605                	addi	a2,a2,1 # 30001 <main.c.a622940e+0x2dcd2>
 87e:	537d                	li	t1,-1
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
 880:	01475283          	lhu	t0,20(a4)
 884:	01875783          	lhu	a5,24(a4)
 888:	07c2                	slli	a5,a5,0x10
 88a:	0057e7b3          	or	a5,a5,t0
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_MODE_SELECT)) && (timeout--));
 88e:	8ff1                	and	a5,a5,a2
 890:	f8c788e3          	beq	a5,a2,820 <ssd1306_i2c_send.constprop.0.isra.0+0x96>
 894:	16fd                	addi	a3,a3,-1
 896:	fe6695e3          	bne	a3,t1,880 <ssd1306_i2c_send.constprop.0.isra.0+0xf6>
		return ssd1306_i2c_error(1);
 89a:	4505                	li	a0,1
 89c:	b71d                	j	7c2 <ssd1306_i2c_send.constprop.0.isra.0+0x38>

0000089e <ssd1306_cmd.isra.0>:
uint8_t ssd1306_cmd(uint8_t cmd)
 89e:	fd810113          	addi	sp,sp,-40
	
	/* build command or data packets */
	if(cmd)
	{
		pkt[0] = 0;
		pkt[1] = *data;
 8a2:	00a100a3          	sb	a0,1(sp)
	else
	{
		pkt[0] = 0x40;
		memcpy(&pkt[1], data, sz);
	}
	return ssd1306_i2c_send(SSD1306_I2C_ADDR, pkt, sz+1);
 8a6:	4589                	li	a1,2
 8a8:	850a                	mv	a0,sp
 8aa:	d206                	sw	ra,36(sp)
		pkt[0] = 0;
 8ac:	00010023          	sb	zero,0(sp)
	return ssd1306_i2c_send(SSD1306_I2C_ADDR, pkt, sz+1);
 8b0:	3de9                	jal	78a <ssd1306_i2c_send.constprop.0.isra.0>
}
 8b2:	5092                	lw	ra,36(sp)
 8b4:	02810113          	addi	sp,sp,40
 8b8:	8082                	ret

000008ba <memset>:
 8ba:	962a                	add	a2,a2,a0
 8bc:	87aa                	mv	a5,a0
 8be:	00c79363          	bne	a5,a2,8c4 <memset+0xa>
 8c2:	8082                	ret
 8c4:	00b78023          	sb	a1,0(a5)
 8c8:	0785                	addi	a5,a5,1
 8ca:	bfd5                	j	8be <memset+0x4>

000008cc <ssd1306_setbuf.constprop.0>:
	memset(ssd1306_buffer, color ? 0xFF : 0x00, sizeof(ssd1306_buffer));
 8cc:	20000537          	lui	a0,0x20000
 8d0:	40000613          	li	a2,1024
 8d4:	4581                	li	a1,0
 8d6:	00050513          	mv	a0,a0
 8da:	b7c5                	j	8ba <memset>

000008dc <memcpy>:
 8dc:	4781                	li	a5,0
 8de:	00f61363          	bne	a2,a5,8e4 <memcpy+0x8>
 8e2:	8082                	ret
 8e4:	00f58733          	add	a4,a1,a5
 8e8:	00074683          	lbu	a3,0(a4)
 8ec:	00f50733          	add	a4,a0,a5
 8f0:	0785                	addi	a5,a5,1
 8f2:	00d70023          	sb	a3,0(a4)
 8f6:	b7e5                	j	8de <memcpy+0x2>

000008f8 <ssd1306_refresh>:
{
 8f8:	7179                	addi	sp,sp,-48
	ssd1306_cmd(SSD1306_COLUMNADDR);
 8fa:	02100513          	li	a0,33
{
 8fe:	d606                	sw	ra,44(sp)
 900:	d422                	sw	s0,40(sp)
 902:	d226                	sw	s1,36(sp)
	ssd1306_cmd(SSD1306_COLUMNADDR);
 904:	3f69                	jal	89e <ssd1306_cmd.isra.0>
	ssd1306_cmd(SSD1306_OFFSET);   // Column start address (0 = reset)
 906:	4501                	li	a0,0
 908:	3f59                	jal	89e <ssd1306_cmd.isra.0>
	ssd1306_cmd(SSD1306_OFFSET+SSD1306_W-1); // Column end address (127 = reset)
 90a:	07f00513          	li	a0,127
 90e:	3f41                	jal	89e <ssd1306_cmd.isra.0>
	ssd1306_cmd(SSD1306_PAGEADDR);
 910:	02200513          	li	a0,34
 914:	3769                	jal	89e <ssd1306_cmd.isra.0>
	ssd1306_cmd(0); // Page start address (0 = reset)
 916:	4501                	li	a0,0
 918:	3759                	jal	89e <ssd1306_cmd.isra.0>
	ssd1306_cmd(7); // Page end address
 91a:	20000437          	lui	s0,0x20000
 91e:	451d                	li	a0,7
 920:	00040413          	mv	s0,s0
 924:	3fad                	jal	89e <ssd1306_cmd.isra.0>
    for(i=0;i<sizeof(ssd1306_buffer);i+=SSD1306_PSZ)
 926:	40040493          	addi	s1,s0,1024 # 20000400 <_ebss>
		pkt[0] = 0x40;
 92a:	04000793          	li	a5,64
		memcpy(&pkt[1], data, sz);
 92e:	85a2                	mv	a1,s0
 930:	02000613          	li	a2,32
 934:	00110513          	addi	a0,sp,1
		pkt[0] = 0x40;
 938:	00f10023          	sb	a5,0(sp)
		memcpy(&pkt[1], data, sz);
 93c:	3745                	jal	8dc <memcpy>
	return ssd1306_i2c_send(SSD1306_I2C_ADDR, pkt, sz+1);
 93e:	02100593          	li	a1,33
 942:	850a                	mv	a0,sp
 944:	02040413          	addi	s0,s0,32
 948:	3589                	jal	78a <ssd1306_i2c_send.constprop.0.isra.0>
 94a:	fe9410e3          	bne	s0,s1,92a <ssd1306_refresh+0x32>
}
 94e:	50b2                	lw	ra,44(sp)
 950:	5422                	lw	s0,40(sp)
 952:	5492                	lw	s1,36(sp)
 954:	6145                	addi	sp,sp,48
 956:	8082                	ret

00000958 <SystemInit>:
 958:	400227b7          	lui	a5,0x40022
 95c:	4705                	li	a4,1
 95e:	c398                	sw	a4,0(a5)
 960:	400217b7          	lui	a5,0x40021
 964:	01080737          	lui	a4,0x1080
 968:	0007a223          	sw	zero,4(a5) # 40021004 <__global_pointer$+0x20020804>
 96c:	08170713          	addi	a4,a4,129 # 1080081 <main.c.a622940e+0x107dd52>
 970:	c398                	sw	a4,0(a5)
 972:	009f0737          	lui	a4,0x9f0
 976:	c798                	sw	a4,8(a5)
 978:	4398                	lw	a4,0(a5)
 97a:	00671693          	slli	a3,a4,0x6
 97e:	fe06dde3          	bgez	a3,978 <SystemInit+0x20>
 982:	43d8                	lw	a4,4(a5)
 984:	400216b7          	lui	a3,0x40021
 988:	9b71                	andi	a4,a4,-4
 98a:	00276713          	ori	a4,a4,2
 98e:	c3d8                	sw	a4,4(a5)
 990:	4721                	li	a4,8
 992:	42dc                	lw	a5,4(a3)
 994:	8bb1                	andi	a5,a5,12
 996:	fee79ee3          	bne	a5,a4,992 <SystemInit+0x3a>
 99a:	e00007b7          	lui	a5,0xe0000
 99e:	0e07ac23          	sw	zero,248(a5) # e00000f8 <__global_pointer$+0xbffff8f8>
 9a2:	08000713          	li	a4,128
 9a6:	0ee7aa23          	sw	a4,244(a5)
 9aa:	8082                	ret

000009ac <main>:
    ssd1306_setbuf(0);
  }
}

int main()
{
 9ac:	fdc10113          	addi	sp,sp,-36
 9b0:	d006                	sw	ra,32(sp)
 9b2:	ce22                	sw	s0,28(sp)
 9b4:	cc26                	sw	s1,24(sp)
	// 48MHz internal clock
	SystemInit();
 9b6:	374d                	jal	958 <SystemInit>
    GPIO_port_enable(GPIO_port_A);
 9b8:	400217b7          	lui	a5,0x40021
 9bc:	4f98                	lw	a4,24(a5)
#endif

void DelaySysTick( uint32_t n )
{
#ifdef CH32V003
	uint32_t targend = SysTick->CNT + n;
 9be:	e000f6b7          	lui	a3,0xe000f
 9c2:	00476713          	ori	a4,a4,4
 9c6:	cf98                	sw	a4,24(a5)
    GPIO_port_enable(GPIO_port_D);
 9c8:	4f98                	lw	a4,24(a5)
 9ca:	02076713          	ori	a4,a4,32
 9ce:	cf98                	sw	a4,24(a5)
    GPIO_port_enable(GPIO_port_C);
 9d0:	4f98                	lw	a4,24(a5)
 9d2:	01076713          	ori	a4,a4,16
 9d6:	cf98                	sw	a4,24(a5)
    GPIO_pinMode(BTN_PIN, GPIO_pinMode_I_pullUp, GPIO_Speed_10MHz);
 9d8:	400117b7          	lui	a5,0x40011
 9dc:	40078793          	addi	a5,a5,1024 # 40011400 <__global_pointer$+0x20010c00>
 9e0:	4398                	lw	a4,0(a5)
 9e2:	f0f77713          	andi	a4,a4,-241
 9e6:	c398                	sw	a4,0(a5)
 9e8:	4398                	lw	a4,0(a5)
 9ea:	08076713          	ori	a4,a4,128
 9ee:	c398                	sw	a4,0(a5)
 9f0:	4709                	li	a4,2
 9f2:	cb98                	sw	a4,16(a5)
 9f4:	4698                	lw	a4,8(a3)
 9f6:	001257b7          	lui	a5,0x125
 9fa:	f8078793          	addi	a5,a5,-128 # 124f80 <main.c.a622940e+0x122c51>
 9fe:	973e                	add	a4,a4,a5
	while( ((int32_t)( SysTick->CNT - targend )) < 0 );
 a00:	469c                	lw	a5,8(a3)
 a02:	8f99                	sub	a5,a5,a4
 a04:	fe07cee3          	bltz	a5,a00 <main+0x54>
 * init I2C and GPIO
 */
uint8_t ssd1306_i2c_init(void)
{
	// Enable GPIOC and I2C
	RCC->APB2PCENR |= RCC_APB2Periph_GPIOC;
 a08:	400217b7          	lui	a5,0x40021
 a0c:	4f98                	lw	a4,24(a5)
	RCC->APB1PCENR |= RCC_APB1Periph_I2C1;
 a0e:	002006b7          	lui	a3,0x200
{
	// pulse reset
	ssd1306_rst();
	
	// initialize OLED
	uint8_t *cmd_list = (uint8_t *)ssd1306_init_array;
 a12:	6405                	lui	s0,0x1
	RCC->APB2PCENR |= RCC_APB2Periph_GPIOC;
 a14:	01076713          	ori	a4,a4,16
 a18:	cf98                	sw	a4,24(a5)
	RCC->APB1PCENR |= RCC_APB1Periph_I2C1;
 a1a:	4fd8                	lw	a4,28(a5)
 a1c:	c8040413          	addi	s0,s0,-896 # c80 <ssd1306_init_array>
 a20:	8f55                	or	a4,a4,a3
 a22:	cfd8                	sw	a4,28(a5)
	
	// PC1 is SDA, 10MHz Output, alt func, open-drain
	GPIOC->CFGLR &= ~(0xf<<(4*1));
 a24:	400117b7          	lui	a5,0x40011
 a28:	4398                	lw	a4,0(a5)
	GPIOC->CFGLR |= (GPIO_Speed_10MHz | GPIO_CNF_OUT_OD_AF)<<(4*1);
	
	// PC2 is SCL, 10MHz Output, alt func, open-drain
	GPIOC->CFGLR &= ~(0xf<<(4*2));
 a2a:	76fd                	lui	a3,0xfffff
 a2c:	0ff68693          	addi	a3,a3,255 # fffff0ff <__global_pointer$+0xdfffe8ff>
	GPIOC->CFGLR &= ~(0xf<<(4*1));
 a30:	f0f77713          	andi	a4,a4,-241
 a34:	c398                	sw	a4,0(a5)
	GPIOC->CFGLR |= (GPIO_Speed_10MHz | GPIO_CNF_OUT_OD_AF)<<(4*1);
 a36:	4398                	lw	a4,0(a5)
 a38:	0d076713          	ori	a4,a4,208
 a3c:	c398                	sw	a4,0(a5)
	GPIOC->CFGLR &= ~(0xf<<(4*2));
 a3e:	4398                	lw	a4,0(a5)
 a40:	8f75                	and	a4,a4,a3
 a42:	c398                	sw	a4,0(a5)
	GPIOC->CFGLR |= (GPIO_Speed_10MHz | GPIO_CNF_OUT_OD_AF)<<(4*2);
 a44:	4398                	lw	a4,0(a5)
 a46:	6685                	lui	a3,0x1
 a48:	d0068693          	addi	a3,a3,-768 # d00 <title+0x1c>
 a4c:	8f55                	or	a4,a4,a3
 a4e:	c398                	sw	a4,0(a5)
	GPIOC->CFGLR |= (GPIO_Speed_10MHz | GPIO_CNF_OUT_PP)<<(4*4);
	GPIOC->BSHR = (1<<(16+4));
#endif

	// load I2C regs
	ssd1306_i2c_setup();
 a50:	871ff0ef          	jal	2c0 <ssd1306_i2c_setup>
	while(*cmd_list != SSD1306_TERMINATE_CMDS)
 a54:	00044503          	lbu	a0,0(s0)
 a58:	0ff00793          	li	a5,255
 a5c:	0af51263          	bne	a0,a5,b00 <main+0x154>
		if(ssd1306_cmd(*cmd_list++))
			return 1;
	}
	
	// clear display
	ssd1306_setbuf(0);
 a60:	35b5                	jal	8cc <ssd1306_setbuf.constprop.0>
    for (int i = 0; i < 30; i+=2) {
 a62:	4401                	li	s0,0
	ssd1306_refresh();
 a64:	3d51                	jal	8f8 <ssd1306_refresh>
      ssd1306_setbuf(0);
 a66:	359d                	jal	8cc <ssd1306_setbuf.constprop.0>
      ssd1306_drawImage(i, 0, title, 24, 64, 0);
 a68:	6485                	lui	s1,0x1
 a6a:	4781                	li	a5,0
 a6c:	04000713          	li	a4,64
 a70:	46e1                	li	a3,24
 a72:	ce448613          	addi	a2,s1,-796 # ce4 <title>
 a76:	4581                	li	a1,0
 a78:	8522                	mv	a0,s0
 a7a:	89bff0ef          	jal	314 <ssd1306_drawImage>
      ssd1306_refresh();
 a7e:	3dad                	jal	8f8 <ssd1306_refresh>
	uint32_t targend = SysTick->CNT + n;
 a80:	e000f6b7          	lui	a3,0xe000f
 a84:	4698                	lw	a4,8(a3)
 a86:	000927b7          	lui	a5,0x92
 a8a:	7c078793          	addi	a5,a5,1984 # 927c0 <main.c.a622940e+0x90491>
 a8e:	973e                	add	a4,a4,a5
	while( ((int32_t)( SysTick->CNT - targend )) < 0 );
 a90:	469c                	lw	a5,8(a3)
 a92:	8f99                	sub	a5,a5,a4
 a94:	fe07cee3          	bltz	a5,a90 <main+0xe4>
    for (int i = 0; i < 30; i+=2) {
 a98:	0409                	addi	s0,s0,2
 a9a:	47f9                	li	a5,30
 a9c:	fcf415e3          	bne	s0,a5,a66 <main+0xba>
    int c = 0;
 aa0:	4401                	li	s0,0
    bool button_state = false;
 aa2:	c202                	sw	zero,4(sp)
      ssd1306_setbuf(0);
 aa4:	3525                	jal	8cc <ssd1306_setbuf.constprop.0>
      ssd1306_drawImage(30, 0, title, 24, 64, 0);
 aa6:	4781                	li	a5,0
 aa8:	ce448613          	addi	a2,s1,-796
 aac:	04000713          	li	a4,64
 ab0:	46e1                	li	a3,24
 ab2:	4581                	li	a1,0
 ab4:	4579                	li	a0,30
 ab6:	85fff0ef          	jal	314 <ssd1306_drawImage>
      if (c > 50) {
 aba:	03200793          	li	a5,50
 abe:	6605                	lui	a2,0x1
 ac0:	0487d363          	bge	a5,s0,b06 <main+0x15a>
        ssd1306_drawImage(80, 20, start, 24, 24, 0);
 ac4:	4781                	li	a5,0
        ssd1306_drawImage(80, 20, start, 24, 24, 1);
 ac6:	4761                	li	a4,24
 ac8:	86ba                	mv	a3,a4
 aca:	c9c60613          	addi	a2,a2,-868 # c9c <start>
 ace:	45d1                	li	a1,20
 ad0:	05000513          	li	a0,80
 ad4:	841ff0ef          	jal	314 <ssd1306_drawImage>
      ssd1306_refresh();
 ad8:	3505                	jal	8f8 <ssd1306_refresh>
      uint8_t button_is_pressed = !GPIO_digitalRead(BTN_PIN);
 ada:	400117b7          	lui	a5,0x40011
 ade:	40078793          	addi	a5,a5,1024 # 40011400 <__global_pointer$+0x20010c00>
 ae2:	479c                	lw	a5,8(a5)
      if (button_state && !button_is_pressed){
 ae4:	4712                	lw	a4,4(sp)
 ae6:	8b89                	andi	a5,a5,2
 ae8:	c311                	beqz	a4,aec <main+0x140>
 aea:	e385                	bnez	a5,b0a <main+0x15e>
      button_state = button_is_pressed;
 aec:	0017b793          	seqz	a5,a5
 af0:	c23e                	sw	a5,4(sp)
      c ++;      
 af2:	0405                	addi	s0,s0,1
      if (c > 100) {
 af4:	06500793          	li	a5,101
 af8:	faf416e3          	bne	s0,a5,aa4 <main+0xf8>
        c = 0;
 afc:	4401                	li	s0,0
 afe:	b75d                	j	aa4 <main+0xf8>
		if(ssd1306_cmd(*cmd_list++))
 b00:	0405                	addi	s0,s0,1
 b02:	3b71                	jal	89e <ssd1306_cmd.isra.0>
 b04:	bf81                	j	a54 <main+0xa8>
        ssd1306_drawImage(80, 20, start, 24, 24, 1);
 b06:	4785                	li	a5,1
 b08:	bf7d                	j	ac6 <main+0x11a>
		ssd1306_init();

    opening();
    
    // clear display
    ssd1306_setbuf(0);
 b0a:	33c9                	jal	8cc <ssd1306_setbuf.constprop.0>
    ssd1306_refresh();
 b0c:	33f5                	jal	8f8 <ssd1306_refresh>
  int mongoose_x = 130;
 b0e:	08200793          	li	a5,130
 b12:	c03e                	sw	a5,0(sp)
  int jump_progress = 0;
 b14:	4401                	li	s0,0
  bool jump_flag = false;
 b16:	c402                	sw	zero,8(sp)
  bool button_state = false;
 b18:	ca02                	sw	zero,20(sp)
  bool flip_flag = false;
 b1a:	c802                	sw	zero,16(sp)
  int flip_c = 0;
 b1c:	c602                	sw	zero,12(sp)
  int kuina_y = init_kuina_y;
 b1e:	02d00493          	li	s1,45
    uint8_t button_is_pressed = !GPIO_digitalRead(BTN_PIN); 
 b22:	400117b7          	lui	a5,0x40011
 b26:	40078793          	addi	a5,a5,1024 # 40011400 <__global_pointer$+0x20010c00>
 b2a:	479c                	lw	a5,8(a5)
    if (!button_state && button_is_pressed && !jump_flag){
 b2c:	4752                	lw	a4,20(sp)
 b2e:	8b89                	andi	a5,a5,2
 b30:	e311                	bnez	a4,b34 <main+0x188>
 b32:	c7c9                	beqz	a5,bbc <main+0x210>
    button_state = button_is_pressed;
 b34:	0017b793          	seqz	a5,a5
 b38:	ca3e                	sw	a5,20(sp)
    if (jump_flag && (max_jump * 2) < jump_progress){
 b3a:	47a2                	lw	a5,8(sp)
 b3c:	cf91                	beqz	a5,b58 <main+0x1ac>
 b3e:	03200793          	li	a5,50
 b42:	0887c263          	blt	a5,s0,bc6 <main+0x21a>
    else if (jump_flag && max_jump >= jump_progress){
 b46:	4765                	li	a4,25
      jump_progress += 1;
 b48:	00140793          	addi	a5,s0,1
    else if (jump_flag && max_jump >= jump_progress){
 b4c:	06874b63          	blt	a4,s0,bc2 <main+0x216>
      kuina_y -= 1;
 b50:	14fd                	addi	s1,s1,-1
      jump_progress += 1;
 b52:	843e                	mv	s0,a5
      kuina_y += 1;
 b54:	4792                	lw	a5,4(sp)
 b56:	c43e                	sw	a5,8(sp)
    flip_c ++;
 b58:	47b2                	lw	a5,12(sp)
 b5a:	0785                	addi	a5,a5,1
 b5c:	c63e                	sw	a5,12(sp)
    if (flip_c > 20) {
 b5e:	4732                	lw	a4,12(sp)
 b60:	47d5                	li	a5,21
 b62:	00f71763          	bne	a4,a5,b70 <main+0x1c4>
      flip_flag = !flip_flag;
 b66:	47c2                	lw	a5,16(sp)
      flip_c = 0;
 b68:	c602                	sw	zero,12(sp)
      flip_flag = !flip_flag;
 b6a:	0017c793          	xori	a5,a5,1
 b6e:	c83e                	sw	a5,16(sp)
    if(flip_flag){
 b70:	47c2                	lw	a5,16(sp)
 b72:	cfb9                	beqz	a5,bd0 <main+0x224>
      ssd1306_drawImage(kuina_x, kuina_y, kuina_1, 16, 16, 0);
 b74:	4741                	li	a4,16
 b76:	6605                	lui	a2,0x1
 b78:	86ba                	mv	a3,a4
 b7a:	4781                	li	a5,0
 b7c:	e4460613          	addi	a2,a2,-444 # e44 <kuina_1>
 b80:	85a6                	mv	a1,s1
 b82:	453d                	li	a0,15
 b84:	f90ff0ef          	jal	314 <ssd1306_drawImage>
      ssd1306_drawImage(mongoose_x, mongoose_y, mongoose_1, 32, 16, 0);
 b88:	6605                	lui	a2,0x1
 b8a:	4781                	li	a5,0
 b8c:	4741                	li	a4,16
 b8e:	02000693          	li	a3,32
 b92:	e0460613          	addi	a2,a2,-508 # e04 <mongoose_1>
      ssd1306_drawImage(mongoose_x, mongoose_y, mongoose_2, 32, 16, 0);
 b96:	4502                	lw	a0,0(sp)
 b98:	02d00593          	li	a1,45
 b9c:	f78ff0ef          	jal	314 <ssd1306_drawImage>
    mongoose_x -= 1;
 ba0:	4782                	lw	a5,0(sp)
 ba2:	17fd                	addi	a5,a5,-1
 ba4:	c03e                	sw	a5,0(sp)
    if (mongoose_x < -32){
 ba6:	4702                	lw	a4,0(sp)
 ba8:	fdf00793          	li	a5,-33
 bac:	00f71563          	bne	a4,a5,bb6 <main+0x20a>
      mongoose_x = 130;
 bb0:	08200793          	li	a5,130
 bb4:	c03e                	sw	a5,0(sp)
    ssd1306_refresh();
 bb6:	3389                	jal	8f8 <ssd1306_refresh>
    ssd1306_setbuf(0);
 bb8:	3b11                	jal	8cc <ssd1306_setbuf.constprop.0>
  while (1) {
 bba:	b7a5                	j	b22 <main+0x176>
    button_state = button_is_pressed;
 bbc:	4792                	lw	a5,4(sp)
 bbe:	ca3e                	sw	a5,20(sp)
 bc0:	bfbd                	j	b3e <main+0x192>
      kuina_y += 1;
 bc2:	0485                	addi	s1,s1,1
 bc4:	b779                	j	b52 <main+0x1a6>
      jump_progress = 0;
 bc6:	4401                	li	s0,0
      jump_flag = false;
 bc8:	c402                	sw	zero,8(sp)
      kuina_y = init_kuina_y;
 bca:	02d00493          	li	s1,45
 bce:	b769                	j	b58 <main+0x1ac>
      ssd1306_drawImage(kuina_x, kuina_y, kuina_2, 16, 16, 0);
 bd0:	4741                	li	a4,16
 bd2:	6605                	lui	a2,0x1
 bd4:	86ba                	mv	a3,a4
 bd6:	4781                	li	a5,0
 bd8:	de460613          	addi	a2,a2,-540 # de4 <kuina_2>
 bdc:	85a6                	mv	a1,s1
 bde:	453d                	li	a0,15
 be0:	f34ff0ef          	jal	314 <ssd1306_drawImage>
      ssd1306_drawImage(mongoose_x, mongoose_y, mongoose_2, 32, 16, 0);
 be4:	6605                	lui	a2,0x1
 be6:	4781                	li	a5,0
 be8:	4741                	li	a4,16
 bea:	02000693          	li	a3,32
 bee:	da460613          	addi	a2,a2,-604 # da4 <mongoose_2>
 bf2:	b755                	j	b96 <main+0x1ea>
 bf4:	31647373          	.insn	4, 0x31647373
 bf8:	5f363033          	.insn	4, 0x5f363033
 bfc:	3269                	jal	586 <strlen+0xa>
 bfe:	72655f63          	bge	a0,t1,133c <_data_lma+0x4d8>
 c02:	6f72                	.insn	2, 0x6f72
 c04:	2072                	.insn	2, 0x2072
 c06:	202d                	jal	c30 <main+0x284>
 c08:	6974                	.insn	2, 0x6974
 c0a:	656d                	lui	a0,0x1b
 c0c:	2074756f          	jal	a0,48612 <main.c.a622940e+0x462e3>
 c10:	74696177          	.insn	4, 0x74696177
 c14:	6e69                	lui	t3,0x1a
 c16:	6f662067          	.insn	4, 0x6f662067
 c1a:	2072                	.insn	2, 0x2072
 c1c:	7325                	lui	t1,0xfffe9
 c1e:	0d0a                	slli	s10,s10,0x2
 c20:	0000                	unimp
 c22:	0000                	unimp
 c24:	6f6e                	.insn	2, 0x6f6e
 c26:	2074                	.insn	2, 0x2074
 c28:	7562                	.insn	2, 0x7562
 c2a:	00007973          	.insn	4, 0x7973
 c2e:	0000                	unimp
 c30:	616d                	addi	sp,sp,240
 c32:	72657473          	.insn	4, 0x72657473
 c36:	6d20                	.insn	2, 0x6d20
 c38:	0065646f          	jal	s0,56c3e <main.c.a622940e+0x5490f>
 c3c:	7274                	.insn	2, 0x7274
 c3e:	6e61                	lui	t3,0x18
 c40:	74696d73          	.insn	4, 0x74696d73
 c44:	6d20                	.insn	2, 0x6d20
 c46:	0065646f          	jal	s0,56c4c <main.c.a622940e+0x5491d>
 c4a:	0000                	unimp
 c4c:	7874                	.insn	2, 0x7874
 c4e:	6520                	.insn	2, 0x6520
 c50:	706d                	c.lui	zero,0xffffb
 c52:	7974                	.insn	2, 0x7974
 c54:	0000                	unimp
 c56:	0000                	unimp
 c58:	7274                	.insn	2, 0x7274
 c5a:	6e61                	lui	t3,0x18
 c5c:	74696d73          	.insn	4, 0x74696d73
 c60:	6320                	.insn	2, 0x6320
 c62:	6c706d6f          	jal	s10,7b28 <main.c.a622940e+0x57f9>
 c66:	7465                	lui	s0,0xffff9
 c68:	0065                	c.nop	25
	...

00000c6c <errstr>:
 c6c:	0c24 0000 0c30 0000 0c3c 0000 0c4c 0000     $...0...<...L...
 c7c:	0c58 0000                                   X...

00000c80 <ssd1306_init_array>:
 c80:	d5ae a880 d33f 4000 148d 0020 c8a1 12da     ....?..@.. .....
 c90:	8f81 f1d9 40db a6a4 ffaf 0000               .....@......

00000c9c <start>:
 c9c:	0000 0000 0004 7c00 0000 0004 0000 0000     .......|........
 cac:	0068 1400 0000 0014 7800 0000 0000 7800     h........x.....x
 cbc:	0000 0014 1400 0000 0078 0000 0000 0004     ........x.......
 ccc:	7c00 0000 0004 0000 0000 0024 5400 0000     .|........$..T..
 cdc:	0054 4800 0000 0000                         T..H....

00000ce4 <title>:
	...
 cec:	0000 00f8 0401 0200 00fa 0603 0200 0002     ................
 cfc:	0202 0300 00fe 0202 0300 00fe 0000 0000     ................
 d0c:	0000 fe03 0200 0002 fe03 0000 0000 0000     ................
 d1c:	0000 00f8 0401 0200 00fa 0603 0200 0002     ................
 d2c:	0202 0200 0002 0401 0000 00f8 0000 0000     ................
 d3c:	0006 1800 0000 0020 c000 0300 00b0 dc00     ...... .........
 d4c:	0000 0026 1a00 0000 0006 0000 0000 00f8     ..&.............
 d5c:	0401 0200 00fa 0603 0200 0002 0202 0200     ................
 d6c:	0002 0401 0000 00f8 0000 0300 00fe 0202     ................
 d7c:	0300 00fe 0400 0000 0018 6000 0100 00a0     ...........`....
 d8c:	5000 0000 002c 1600 0300 00fe 0000 0000     .P..,...........
	...

00000da4 <mongoose_2>:
 da4:	0000 8001 0000 e001 0000 f802 0000 fc03     ................
 db4:	fe00 fe03 ff03 f6ff ff0f f6ff 7ffe feff     ................
 dc4:	77f8 bcff 7bc0 80ff 7b00 00ff 7f00 00ff     .w...{...{......
 dd4:	3c00 0007 5800 0007 fc00 800e dc00 800d     .<...X..........

00000de4 <kuina_2>:
 de4:	c03f c03f c0f3 c0f3 fc3f fc3f ff33 ff33     ?.?.....?.?.3.3.
 df4:	cf00 cf00 3c33 3c33 c00c c00c 3030 3030     ....3<3<....0000

00000e04 <mongoose_1>:
 e04:	0000 c001 3000 e001 7800 f001 ff01 fcc3     .....0...x......
 e14:	ff03 feff ff07 fbff ff0f fbff fd3f fbff     ............?...
 e24:	fe7c ffff 7ee0 beff 7ee0 1eff bfc1 00fe     |....~...~......
 e34:	de03 c01d de03 c03d 9e03 e038 0f06 7070     ......=...8...pp

00000e44 <kuina_1>:
 e44:	c03f c03f c0f3 c0f3 fc3f fc3f ff33 ff33     ?.?.....?.?.3.3.
 e54:	cf00 cf00 3c33 3c33 c00c c00c c00c c00c     ....3<3<........
