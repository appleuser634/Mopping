
main.elf:     file format elf32-littleriscv


Disassembly of section .init:

00000000 <InterruptVector>:
   0:	5420006f          	j	542 <handle_reset>
   4:	00000000          	.word	0x00000000
   8:	000005b8          	.word	0x000005b8
   c:	000005b6          	.word	0x000005b6
	...
  30:	000005b6          	.word	0x000005b6
  34:	00000000          	.word	0x00000000
  38:	000005b6          	.word	0x000005b6
  3c:	00000000          	.word	0x00000000
  40:	000005b6          	.word	0x000005b6
  44:	000005b6          	.word	0x000005b6
  48:	000005b6          	.word	0x000005b6
  4c:	000005b6          	.word	0x000005b6
  50:	000005b6          	.word	0x000005b6
  54:	000005b6          	.word	0x000005b6
  58:	000005b6          	.word	0x000005b6
  5c:	000005b6          	.word	0x000005b6
  60:	000005b6          	.word	0x000005b6
  64:	000005b6          	.word	0x000005b6
  68:	000005b6          	.word	0x000005b6
  6c:	000005b6          	.word	0x000005b6
  70:	000005b6          	.word	0x000005b6
  74:	000005b6          	.word	0x000005b6
  78:	000005b6          	.word	0x000005b6
  7c:	000005b6          	.word	0x000005b6
  80:	000005b6          	.word	0x000005b6
  84:	000005b6          	.word	0x000005b6
  88:	000005b6          	.word	0x000005b6
  8c:	000005b6          	.word	0x000005b6
  90:	000005b6          	.word	0x000005b6
  94:	000005b6          	.word	0x000005b6
  98:	000005b6          	.word	0x000005b6
  9c:	0000                	unimp
	...

Disassembly of section .text:

000000a0 <__mulsi3>:
      a0:	862a                	mv	a2,a0
      a2:	4501                	li	a0,0
      a4:	0015f693          	andi	a3,a1,1
      a8:	c291                	beqz	a3,ac <__mulsi3+0xc>
      aa:	9532                	add	a0,a0,a2
      ac:	8185                	srli	a1,a1,0x1
      ae:	0606                	slli	a2,a2,0x1
      b0:	f9f5                	bnez	a1,a4 <__mulsi3+0x4>
      b2:	8082                	ret
      b4:	0000                	unimp
	...

000000b8 <__divsi3>:
      b8:	02054e63          	bltz	a0,f4 <__umodsi3+0x8>
      bc:	0405c363          	bltz	a1,102 <__umodsi3+0x16>

000000c0 <__hidden___udivsi3>:
      c0:	862e                	mv	a2,a1
      c2:	85aa                	mv	a1,a0
      c4:	557d                	li	a0,-1
      c6:	c215                	beqz	a2,ea <__hidden___udivsi3+0x2a>
      c8:	4685                	li	a3,1
      ca:	00b67863          	bgeu	a2,a1,da <__hidden___udivsi3+0x1a>
      ce:	00c05663          	blez	a2,da <__hidden___udivsi3+0x1a>
      d2:	0606                	slli	a2,a2,0x1
      d4:	0686                	slli	a3,a3,0x1
      d6:	feb66ce3          	bltu	a2,a1,ce <__hidden___udivsi3+0xe>
      da:	4501                	li	a0,0
      dc:	00c5e463          	bltu	a1,a2,e4 <__hidden___udivsi3+0x24>
      e0:	8d91                	sub	a1,a1,a2
      e2:	8d55                	or	a0,a0,a3
      e4:	8285                	srli	a3,a3,0x1
      e6:	8205                	srli	a2,a2,0x1
      e8:	faf5                	bnez	a3,dc <__hidden___udivsi3+0x1c>
      ea:	8082                	ret

000000ec <__umodsi3>:
      ec:	8286                	mv	t0,ra
      ee:	3fc9                	jal	c0 <__hidden___udivsi3>
      f0:	852e                	mv	a0,a1
      f2:	8282                	jr	t0
      f4:	40a00533          	neg	a0,a0
      f8:	00b04763          	bgtz	a1,106 <__umodsi3+0x1a>
      fc:	40b005b3          	neg	a1,a1
     100:	b7c1                	j	c0 <__hidden___udivsi3>
     102:	40b005b3          	neg	a1,a1
     106:	8286                	mv	t0,ra
     108:	3f65                	jal	c0 <__hidden___udivsi3>
     10a:	40a00533          	neg	a0,a0
     10e:	8282                	jr	t0

00000110 <__modsi3>:
     110:	8286                	mv	t0,ra
     112:	0005c763          	bltz	a1,120 <__modsi3+0x10>
     116:	00054963          	bltz	a0,128 <__modsi3+0x18>
     11a:	375d                	jal	c0 <__hidden___udivsi3>
     11c:	852e                	mv	a0,a1
     11e:	8282                	jr	t0
     120:	40b005b3          	neg	a1,a1
     124:	fe055be3          	bgez	a0,11a <__modsi3+0xa>
     128:	40a00533          	neg	a0,a0
     12c:	3f51                	jal	c0 <__hidden___udivsi3>
     12e:	40b00533          	neg	a0,a1
     132:	8282                	jr	t0
	...

00000136 <_puts>:
     136:	832a                	mv	t1,a0
     138:	852e                	mv	a0,a1
     13a:	ce01                	beqz	a2,152 <_puts+0x1c>
     13c:	00062283          	lw	t0,0(a2)
     140:	4701                	li	a4,0
     142:	425c                	lw	a5,4(a2)
     144:	00a74863          	blt	a4,a0,154 <_puts+0x1e>
     148:	00078023          	sb	zero,0(a5)
     14c:	4248                	lw	a0,4(a2)
     14e:	40550533          	sub	a0,a0,t0
     152:	8082                	ret
     154:	460c                	lw	a1,8(a2)
     156:	4214                	lw	a3,0(a2)
     158:	15fd                	addi	a1,a1,-1
     15a:	96ae                	add	a3,a3,a1
     15c:	fed786e3          	beq	a5,a3,148 <_puts+0x12>
     160:	00178693          	addi	a3,a5,1
     164:	c254                	sw	a3,4(a2)
     166:	00e306b3          	add	a3,t1,a4
     16a:	0006c683          	lbu	a3,0(a3)
     16e:	0705                	addi	a4,a4,1
     170:	00d78023          	sb	a3,0(a5)
     174:	b7f9                	j	142 <_puts+0xc>

00000176 <mini_pad>:
     176:	c699                	beqz	a3,184 <mini_pad+0xe>
     178:	4301                	li	t1,0
     17a:	00b6d763          	bge	a3,a1,188 <mini_pad+0x12>
     17e:	85b6                	mv	a1,a3
     180:	4305                	li	t1,1
     182:	a019                	j	188 <mini_pad+0x12>
     184:	4301                	li	t1,0
     186:	86ae                	mv	a3,a1
     188:	8e8d                	sub	a3,a3,a1
     18a:	87ba                	mv	a5,a4
     18c:	00e683b3          	add	t2,a3,a4
     190:	40f382b3          	sub	t0,t2,a5
     194:	04504a63          	bgtz	t0,1e8 <mini_pad+0x72>
     198:	fff6c793          	not	a5,a3
     19c:	87fd                	srai	a5,a5,0x1f
     19e:	8efd                	and	a3,a3,a5
     1a0:	96ba                	add	a3,a3,a4
     1a2:	4781                	li	a5,0
     1a4:	40f58633          	sub	a2,a1,a5
     1a8:	00f682b3          	add	t0,a3,a5
     1ac:	04c04263          	bgtz	a2,1f0 <mini_pad+0x7a>
     1b0:	fff5c793          	not	a5,a1
     1b4:	87fd                	srai	a5,a5,0x1f
     1b6:	8dfd                	and	a1,a1,a5
     1b8:	95b6                	add	a1,a1,a3
     1ba:	40e58533          	sub	a0,a1,a4
     1be:	02030463          	beqz	t1,1e6 <mini_pad+0x70>
     1c2:	02b77263          	bgeu	a4,a1,1e6 <mini_pad+0x70>
     1c6:	02a00793          	li	a5,42
     1ca:	fef58fa3          	sb	a5,-1(a1)
     1ce:	fff58693          	addi	a3,a1,-1
     1d2:	00d77a63          	bgeu	a4,a3,1e6 <mini_pad+0x70>
     1d6:	fef58f23          	sb	a5,-2(a1)
     1da:	ffe58693          	addi	a3,a1,-2
     1de:	00d77463          	bgeu	a4,a3,1e6 <mini_pad+0x70>
     1e2:	fef58ea3          	sb	a5,-3(a1)
     1e6:	8082                	ret
     1e8:	0785                	addi	a5,a5,1
     1ea:	fec78fa3          	sb	a2,-1(a5)
     1ee:	b74d                	j	190 <mini_pad+0x1a>
     1f0:	00f50633          	add	a2,a0,a5
     1f4:	00064603          	lbu	a2,0(a2)
     1f8:	0785                	addi	a5,a5,1
     1fa:	00c28023          	sb	a2,0(t0)
     1fe:	b75d                	j	1a4 <mini_pad+0x2e>

00000200 <DelaySysTick>:
     200:	e000f737          	lui	a4,0xe000f
     204:	471c                	lw	a5,8(a4)
     206:	953e                	add	a0,a0,a5
     208:	471c                	lw	a5,8(a4)
     20a:	8f89                	sub	a5,a5,a0
     20c:	fe07cee3          	bltz	a5,208 <DelaySysTick+0x8>
     210:	8082                	ret

00000212 <mini_itoa.part.0>:
     212:	1101                	addi	sp,sp,-32
     214:	ce06                	sw	ra,28(sp)
     216:	cc22                	sw	s0,24(sp)
     218:	ca26                	sw	s1,20(sp)
     21a:	c002                	sw	zero,0(sp)
     21c:	832a                	mv	t1,a0
     21e:	00055763          	bgez	a0,22c <mini_itoa.part.0+0x1a>
     222:	e689                	bnez	a3,22c <mini_itoa.part.0+0x1a>
     224:	4785                	li	a5,1
     226:	40a00333          	neg	t1,a0
     22a:	c03e                	sw	a5,0(sp)
     22c:	8a05                	andi	a2,a2,1
     22e:	06100413          	li	s0,97
     232:	c219                	beqz	a2,238 <mini_itoa.part.0+0x26>
     234:	04100413          	li	s0,65
     238:	84ba                	mv	s1,a4
     23a:	1459                	addi	s0,s0,-10
     23c:	851a                	mv	a0,t1
     23e:	c83a                	sw	a4,16(sp)
     240:	c21a                	sw	t1,4(sp)
     242:	c62e                	sw	a1,12(sp)
     244:	c41a                	sw	t1,8(sp)
     246:	355d                	jal	ec <__umodsi3>
     248:	47a5                	li	a5,9
     24a:	4322                	lw	t1,8(sp)
     24c:	45b2                	lw	a1,12(sp)
     24e:	4742                	lw	a4,16(sp)
     250:	0ff57693          	zext.b	a3,a0
     254:	06a7e163          	bltu	a5,a0,2b6 <mini_itoa.part.0+0xa4>
     258:	03068693          	addi	a3,a3,48
     25c:	0ff6f693          	zext.b	a3,a3
     260:	00148793          	addi	a5,s1,1
     264:	00d48023          	sb	a3,0(s1)
     268:	851a                	mv	a0,t1
     26a:	c83a                	sw	a4,16(sp)
     26c:	c63e                	sw	a5,12(sp)
     26e:	c42e                	sw	a1,8(sp)
     270:	3d81                	jal	c0 <__hidden___udivsi3>
     272:	4692                	lw	a3,4(sp)
     274:	45a2                	lw	a1,8(sp)
     276:	47b2                	lw	a5,12(sp)
     278:	4742                	lw	a4,16(sp)
     27a:	832a                	mv	t1,a0
     27c:	02b6fb63          	bgeu	a3,a1,2b2 <mini_itoa.part.0+0xa0>
     280:	4682                	lw	a3,0(sp)
     282:	c699                	beqz	a3,290 <mini_itoa.part.0+0x7e>
     284:	02d00693          	li	a3,45
     288:	00d78023          	sb	a3,0(a5)
     28c:	00248793          	addi	a5,s1,2
     290:	40e78533          	sub	a0,a5,a4
     294:	01f55693          	srli	a3,a0,0x1f
     298:	96aa                	add	a3,a3,a0
     29a:	00078023          	sb	zero,0(a5)
     29e:	8685                	srai	a3,a3,0x1
     2a0:	4601                	li	a2,0
     2a2:	17fd                	addi	a5,a5,-1
     2a4:	00d64b63          	blt	a2,a3,2ba <mini_itoa.part.0+0xa8>
     2a8:	40f2                	lw	ra,28(sp)
     2aa:	4462                	lw	s0,24(sp)
     2ac:	44d2                	lw	s1,20(sp)
     2ae:	6105                	addi	sp,sp,32
     2b0:	8082                	ret
     2b2:	84be                	mv	s1,a5
     2b4:	b761                	j	23c <mini_itoa.part.0+0x2a>
     2b6:	96a2                	add	a3,a3,s0
     2b8:	b755                	j	25c <mini_itoa.part.0+0x4a>
     2ba:	00c705b3          	add	a1,a4,a2
     2be:	0007c283          	lbu	t0,0(a5)
     2c2:	0005c303          	lbu	t1,0(a1)
     2c6:	0605                	addi	a2,a2,1
     2c8:	00558023          	sb	t0,0(a1)
     2cc:	00678023          	sb	t1,0(a5)
     2d0:	bfc9                	j	2a2 <mini_itoa.part.0+0x90>

000002d2 <ssd1306_i2c_setup>:
void ssd1306_i2c_setup(void)
{
	uint16_t tempreg;
	
	// Reset I2C1 to init all regs
	RCC->APB1PRSTR |= RCC_APB1Periph_I2C1;
     2d2:	400217b7          	lui	a5,0x40021
     2d6:	4b98                	lw	a4,16(a5)
     2d8:	002006b7          	lui	a3,0x200
     2dc:	8f55                	or	a4,a4,a3
     2de:	cb98                	sw	a4,16(a5)
	RCC->APB1PRSTR &= ~RCC_APB1Periph_I2C1;
     2e0:	4b98                	lw	a4,16(a5)
     2e2:	ffe006b7          	lui	a3,0xffe00
     2e6:	16fd                	addi	a3,a3,-1 # ffdfffff <__global_pointer$+0xdfdff7ff>
     2e8:	8f75                	and	a4,a4,a3
     2ea:	cb98                	sw	a4,16(a5)
	
	// set freq
	tempreg = I2C1->CTLR2;
     2ec:	400057b7          	lui	a5,0x40005
     2f0:	4047d703          	lhu	a4,1028(a5) # 40005404 <__global_pointer$+0x20004c04>
	tempreg &= ~I2C_CTLR2_FREQ;
     2f4:	66c1                	lui	a3,0x10
     2f6:	fc068693          	addi	a3,a3,-64 # ffc0 <main.c.46010771+0xd8cc>
     2fa:	8f75                	and	a4,a4,a3
	tempreg |= (FUNCONF_SYSTEM_CORE_CLOCK/SSD1306_I2C_PRERATE)&I2C_CTLR2_FREQ;
     2fc:	01876713          	ori	a4,a4,24
	I2C1->CTLR2 = tempreg;
     300:	40e79223          	sh	a4,1028(a5)
	tempreg = (FUNCONF_SYSTEM_CORE_CLOCK/(25*SSD1306_I2C_CLKRATE))&I2C_CKCFGR_CCR;
	tempreg |= I2C_CKCFGR_DUTY;
#endif
	tempreg |= I2C_CKCFGR_FS;
#endif
	I2C1->CKCFGR = tempreg;
     304:	7771                	lui	a4,0xffffc
     306:	0705                	addi	a4,a4,1 # ffffc001 <__global_pointer$+0xdfffb801>
     308:	40e79e23          	sh	a4,1052(a5)
	// initialize the state
	ssd1306_i2c_irq_state = 0;
#endif
	
	// Enable I2C
	I2C1->CTLR1 |= I2C_CTLR1_PE;
     30c:	4007d703          	lhu	a4,1024(a5)
     310:	00176713          	ori	a4,a4,1
     314:	40e79023          	sh	a4,1024(a5)

	// set ACK mode
	I2C1->CTLR1 |= I2C_CTLR1_ACK;
     318:	4007d703          	lhu	a4,1024(a5)
     31c:	40076713          	ori	a4,a4,1024
     320:	40e79023          	sh	a4,1024(a5)
}
     324:	8082                	ret

00000326 <ssd1306_drawImage>:

/*
 * draw a an image from an array, directly into to the display buffer
 * the color modes allow for overwriting and even layering (sprites!)
 */
void ssd1306_drawImage(int x, int y, const unsigned char* input, uint8_t width, uint8_t height, uint8_t color_mode) {
     326:	fcc10113          	addi	sp,sp,-52
     32a:	d03e                	sw	a5,32(sp)
	int x_absolute;
	int y_absolute;
	uint8_t pixel;
	uint8_t bytes_to_draw = width / 8;
     32c:	0036d793          	srli	a5,a3,0x3
     330:	0f86f693          	andi	a3,a3,248
     334:	c63e                	sw	a5,12(sp)
	uint16_t buffer_addr;

	for (uint8_t line = 0; line < height; line++) {
     336:	00a687b3          	add	a5,a3,a0
void ssd1306_drawImage(int x, int y, const unsigned char* input, uint8_t width, uint8_t height, uint8_t color_mode) {
     33a:	d622                	sw	s0,44(sp)
     33c:	d426                	sw	s1,40(sp)
     33e:	d806                	sw	ra,48(sp)
     340:	c02a                	sw	a0,0(sp)
     342:	ca2e                	sw	a1,20(sp)
     344:	cc32                	sw	a2,24(sp)
     346:	ce3a                	sw	a4,28(sp)
     348:	c43e                	sw	a5,8(sp)
	for (uint8_t line = 0; line < height; line++) {
     34a:	4401                	li	s0,0
			break;
		}

		// SSD1306 is in vertical mode, yet we want to draw horizontally, which necessitates assembling the output bytes from the input data
		// bitmask for current pixel in vertical (output) byte
		uint8_t v_mask = 1 << (y_absolute & 7);
     34c:	4485                	li	s1,1
		y_absolute = y + line;
     34e:	47d2                	lw	a5,20(sp)
     350:	97a2                	add	a5,a5,s0
    if (y_absolute < 0) {
     352:	0007de63          	bgez	a5,36e <ssd1306_drawImage+0x48>
	for (uint8_t line = 0; line < height; line++) {
     356:	47f2                	lw	a5,28(sp)
     358:	0405                	addi	s0,s0,1
     35a:	0ff47413          	zext.b	s0,s0
     35e:	fef468e3          	bltu	s0,a5,34e <ssd1306_drawImage+0x28>
		}
		#if SSD1306_LOG_IMAGE == 1
		printf("\n\r");
		#endif
	}
}
     362:	50c2                	lw	ra,48(sp)
     364:	5432                	lw	s0,44(sp)
     366:	54a2                	lw	s1,40(sp)
     368:	03410113          	addi	sp,sp,52
     36c:	8082                	ret
		if (y_absolute >= SSD1306_H || y_absolute < 0) {
     36e:	03f00713          	li	a4,63
     372:	fef768e3          	bltu	a4,a5,362 <ssd1306_drawImage+0x3c>
			uint8_t input_byte = input[byte + line * bytes_to_draw];
     376:	45b2                	lw	a1,12(sp)
		uint8_t v_mask = 1 << (y_absolute & 7);
     378:	0077f713          	andi	a4,a5,7
     37c:	c83e                	sw	a5,16(sp)
			uint8_t input_byte = input[byte + line * bytes_to_draw];
     37e:	8522                	mv	a0,s0
		uint8_t v_mask = 1 << (y_absolute & 7);
     380:	00e497b3          	sll	a5,s1,a4
     384:	c23e                	sw	a5,4(sp)
			uint8_t input_byte = input[byte + line * bytes_to_draw];
     386:	3b29                	jal	a0 <__mulsi3>
     388:	47e2                	lw	a5,24(sp)
     38a:	4322                	lw	t1,8(sp)
     38c:	953e                	add	a0,a0,a5
				buffer_addr = x_absolute + SSD1306_W * (y_absolute / 8);
     38e:	47c2                	lw	a5,16(sp)
     390:	878d                	srai	a5,a5,0x3
     392:	079e                	slli	a5,a5,0x7
     394:	d23e                	sw	a5,36(sp)
			uint8_t input_byte = input[byte + line * bytes_to_draw];
     396:	00054783          	lbu	a5,0(a0)
     39a:	4581                	li	a1,0
     39c:	c83e                	sw	a5,16(sp)
				if (x_absolute >= SSD1306_W) {
     39e:	00b306b3          	add	a3,t1,a1
     3a2:	07f00793          	li	a5,127
     3a6:	00d7d863          	bge	a5,a3,3b6 <ssd1306_drawImage+0x90>
		for (uint8_t byte = 0; byte < bytes_to_draw; byte++) {
     3aa:	4782                	lw	a5,0(sp)
     3ac:	1361                	addi	t1,t1,-8
     3ae:	0505                	addi	a0,a0,1
     3b0:	fe6793e3          	bne	a5,t1,396 <ssd1306_drawImage+0x70>
     3b4:	b74d                	j	356 <ssd1306_drawImage+0x30>
				uint8_t input_pixel = input_byte & (1 << pixel);
     3b6:	47c2                	lw	a5,16(sp)
     3b8:	00b49733          	sll	a4,s1,a1
						ssd1306_buffer[buffer_addr] = (ssd1306_buffer[buffer_addr] & ~v_mask) | (input_pixel ? v_mask : 0);
     3bc:	200002b7          	lui	t0,0x20000
				uint8_t input_pixel = input_byte & (1 << pixel);
     3c0:	8f7d                	and	a4,a4,a5
				buffer_addr = x_absolute + SSD1306_W * (y_absolute / 8);
     3c2:	5792                	lw	a5,36(sp)
						ssd1306_buffer[buffer_addr] = (ssd1306_buffer[buffer_addr] & ~v_mask) | (input_pixel ? v_mask : 0);
     3c4:	8396                	mv	t2,t0
     3c6:	02028293          	addi	t0,t0,32 # 20000020 <ssd1306_buffer>
				buffer_addr = x_absolute + SSD1306_W * (y_absolute / 8);
     3ca:	96be                	add	a3,a3,a5
						ssd1306_buffer[buffer_addr] = (ssd1306_buffer[buffer_addr] & ~v_mask) | (input_pixel ? v_mask : 0);
     3cc:	06c2                	slli	a3,a3,0x10
     3ce:	82c1                	srli	a3,a3,0x10
     3d0:	00410603          	lb	a2,4(sp)
     3d4:	92b6                	add	t0,t0,a3
     3d6:	0002c283          	lbu	t0,0(t0)
     3da:	fff64793          	not	a5,a2
     3de:	0057f7b3          	and	a5,a5,t0
     3e2:	02038293          	addi	t0,t2,32
				switch (color_mode) {
     3e6:	5382                	lw	t2,32(sp)
						ssd1306_buffer[buffer_addr] = (ssd1306_buffer[buffer_addr] & ~v_mask) | (input_pixel ? v_mask : 0);
     3e8:	07e2                	slli	a5,a5,0x18
     3ea:	87e1                	srai	a5,a5,0x18
				switch (color_mode) {
     3ec:	02938263          	beq	t2,s1,410 <ssd1306_drawImage+0xea>
						ssd1306_buffer[buffer_addr] = (ssd1306_buffer[buffer_addr] & ~v_mask) | (input_pixel ? v_mask : 0);
     3f0:	00e03733          	snez	a4,a4
						ssd1306_buffer[buffer_addr] = (ssd1306_buffer[buffer_addr] & ~v_mask) | (!input_pixel ? v_mask : 0);
     3f4:	40e00733          	neg	a4,a4
     3f8:	8e79                	and	a2,a2,a4
     3fa:	8fd1                	or	a5,a5,a2
     3fc:	0ff7f793          	zext.b	a5,a5
     400:	92b6                	add	t0,t0,a3
     402:	00f28023          	sb	a5,0(t0)
			for (pixel = 0; pixel < 8; pixel++) {
     406:	0585                	addi	a1,a1,1
     408:	47a1                	li	a5,8
     40a:	f8f59ae3          	bne	a1,a5,39e <ssd1306_drawImage+0x78>
     40e:	bf71                	j	3aa <ssd1306_drawImage+0x84>
						ssd1306_buffer[buffer_addr] = (ssd1306_buffer[buffer_addr] & ~v_mask) | (!input_pixel ? v_mask : 0);
     410:	00173713          	seqz	a4,a4
     414:	b7c5                	j	3f4 <ssd1306_drawImage+0xce>

00000416 <get_random>:
int get_random(void)
{
	uint8_t bit;
	uint32_t new_data;
	
	for(bit=0;bit<NOISE_BITS;bit++)
     416:	200006b7          	lui	a3,0x20000
     41a:	0006a503          	lw	a0,0(a3) # 20000000 <lfsr>
{
     41e:	1171                	addi	sp,sp,-4
     420:	c006                	sw	ra,0(sp)
     422:	4721                	li	a4,8
	{
		new_data = ((lfsr>>NOISE_POLY_TAP0) ^
					(lfsr>>NOISE_POLY_TAP1) ^
     424:	01555613          	srli	a2,a0,0x15
		new_data = ((lfsr>>NOISE_POLY_TAP0) ^
     428:	01f55793          	srli	a5,a0,0x1f
     42c:	8fb1                	xor	a5,a5,a2
     42e:	8fa9                	xor	a5,a5,a0
					(lfsr>>NOISE_POLY_TAP2) ^
     430:	00155613          	srli	a2,a0,0x1
		new_data = ((lfsr>>NOISE_POLY_TAP0) ^
     434:	8fb1                	xor	a5,a5,a2
	for(bit=0;bit<NOISE_BITS;bit++)
     436:	177d                	addi	a4,a4,-1
					(lfsr>>NOISE_POLY_TAP3));
		lfsr = (lfsr<<1) | (new_data&1);
     438:	8b85                	andi	a5,a5,1
     43a:	0506                	slli	a0,a0,0x1
	for(bit=0;bit<NOISE_BITS;bit++)
     43c:	0ff77713          	zext.b	a4,a4
		lfsr = (lfsr<<1) | (new_data&1);
     440:	8d5d                	or	a0,a0,a5
	for(bit=0;bit<NOISE_BITS;bit++)
     442:	f36d                	bnez	a4,424 <get_random+0xe>
     444:	00a6a023          	sw	a0,0(a3)
	}

  int random_8 = lfsr&NOISE_MASK;
	return random_8 % 11;
     448:	45ad                	li	a1,11
     44a:	0ff57513          	zext.b	a0,a0
     44e:	31c9                	jal	110 <__modsi3>
}
     450:	4082                	lw	ra,0(sp)
     452:	0111                	addi	sp,sp,4
     454:	8082                	ret

00000456 <internal_handle_input.constprop.0>:
     456:	e00007b7          	lui	a5,0xe0000
     45a:	0f47a783          	lw	a5,244(a5) # e00000f4 <__global_pointer$+0xbffff8f4>
     45e:	8082                	ret

00000460 <_write.constprop.0>:
     460:	1121                	addi	sp,sp,-24
     462:	c822                	sw	s0,16(sp)
     464:	ca06                	sw	ra,20(sp)
     466:	c626                	sw	s1,12(sp)
     468:	c402                	sw	zero,8(sp)
     46a:	842e                	mv	s0,a1
     46c:	eddd                	bnez	a1,52a <_write.constprop.0+0xca>
     46e:	e00007b7          	lui	a5,0xe0000
     472:	0f47a783          	lw	a5,244(a5) # e00000f4 <__global_pointer$+0xbffff8f4>
     476:	c789                	beqz	a5,480 <_write.constprop.0+0x20>
     478:	0807f793          	andi	a5,a5,128
     47c:	e391                	bnez	a5,480 <_write.constprop.0+0x20>
     47e:	3fe1                	jal	456 <internal_handle_input.constprop.0>
     480:	40d2                	lw	ra,20(sp)
     482:	8522                	mv	a0,s0
     484:	4442                	lw	s0,16(sp)
     486:	44b2                	lw	s1,12(sp)
     488:	0161                	addi	sp,sp,24
     48a:	8082                	ret
     48c:	409407b3          	sub	a5,s0,s1
     490:	471d                	li	a4,7
     492:	00f75363          	bge	a4,a5,498 <_write.constprop.0+0x38>
     496:	87ba                	mv	a5,a4
     498:	00027737          	lui	a4,0x27
     49c:	e00006b7          	lui	a3,0xe0000
     4a0:	10170713          	addi	a4,a4,257 # 27101 <main.c.46010771+0x24a0d>
     4a4:	0f468693          	addi	a3,a3,244 # e00000f4 <__global_pointer$+0xbffff8f4>
     4a8:	4290                	lw	a2,0(a3)
     4aa:	08067593          	andi	a1,a2,128
     4ae:	e1a5                	bnez	a1,50e <_write.constprop.0+0xae>
     4b0:	c611                	beqz	a2,4bc <_write.constprop.0+0x5c>
     4b2:	c22a                	sw	a0,4(sp)
     4b4:	c03e                	sw	a5,0(sp)
     4b6:	3745                	jal	456 <internal_handle_input.constprop.0>
     4b8:	4512                	lw	a0,4(sp)
     4ba:	4782                	lw	a5,0(sp)
     4bc:	0034                	addi	a3,sp,8
     4be:	470d                	li	a4,3
     4c0:	85b6                	mv	a1,a3
     4c2:	04f74a63          	blt	a4,a5,516 <_write.constprop.0+0xb6>
     4c6:	46a2                	lw	a3,8(sp)
     4c8:	e0000737          	lui	a4,0xe0000
     4cc:	460d                	li	a2,3
     4ce:	0ed72c23          	sw	a3,248(a4) # e00000f8 <__global_pointer$+0xbffff8f8>
     4d2:	009506b3          	add	a3,a0,s1
     4d6:	4701                	li	a4,0
     4d8:	0006c283          	lbu	t0,0(a3)
     4dc:	0705                	addi	a4,a4,1
     4de:	00e58333          	add	t1,a1,a4
     4e2:	00530023          	sb	t0,0(t1)
     4e6:	00e78563          	beq	a5,a4,4f0 <_write.constprop.0+0x90>
     4ea:	0685                	addi	a3,a3,1
     4ec:	fec716e3          	bne	a4,a2,4d8 <_write.constprop.0+0x78>
     4f0:	00478713          	addi	a4,a5,4
     4f4:	f8076713          	ori	a4,a4,-128
     4f8:	00e10423          	sb	a4,8(sp)
     4fc:	46a2                	lw	a3,8(sp)
     4fe:	e0000737          	lui	a4,0xe0000
     502:	94be                	add	s1,s1,a5
     504:	0ed72a23          	sw	a3,244(a4) # e00000f4 <__global_pointer$+0xbffff8f4>
     508:	f884c2e3          	blt	s1,s0,48c <_write.constprop.0+0x2c>
     50c:	bf95                	j	480 <_write.constprop.0+0x20>
     50e:	177d                	addi	a4,a4,-1
     510:	ff41                	bnez	a4,4a8 <_write.constprop.0+0x48>
     512:	8426                	mv	s0,s1
     514:	b7b5                	j	480 <_write.constprop.0+0x20>
     516:	00e48633          	add	a2,s1,a4
     51a:	962a                	add	a2,a2,a0
     51c:	00064603          	lbu	a2,0(a2)
     520:	0705                	addi	a4,a4,1
     522:	0685                	addi	a3,a3,1
     524:	fec68fa3          	sb	a2,-1(a3)
     528:	bf69                	j	4c2 <_write.constprop.0+0x62>
     52a:	4481                	li	s1,0
     52c:	bff1                	j	508 <_write.constprop.0+0xa8>

0000052e <__puts_uart>:
     52e:	1161                	addi	sp,sp,-8
     530:	c022                	sw	s0,0(sp)
     532:	c206                	sw	ra,4(sp)
     534:	842e                	mv	s0,a1
     536:	372d                	jal	460 <_write.constprop.0>
     538:	4092                	lw	ra,4(sp)
     53a:	8522                	mv	a0,s0
     53c:	4402                	lw	s0,0(sp)
     53e:	0121                	addi	sp,sp,8
     540:	8082                	ret

00000542 <handle_reset>:
     542:	20000197          	auipc	gp,0x20000
     546:	2be18193          	addi	gp,gp,702 # 20000800 <__global_pointer$>
     54a:	00018113          	mv	sp,gp
     54e:	08000513          	li	a0,128
     552:	30051073          	csrw	mstatus,a0
     556:	468d                	li	a3,3
     558:	00000517          	auipc	a0,0x0
     55c:	aa850513          	addi	a0,a0,-1368 # 0 <InterruptVector>
     560:	8d55                	or	a0,a0,a3
     562:	30551073          	csrw	mtvec,a0
     566:	82018513          	addi	a0,gp,-2016 # 20000020 <ssd1306_buffer>
     56a:	c2018593          	addi	a1,gp,-992 # 20000420 <_ebss>
     56e:	4601                	li	a2,0
     570:	00b55663          	bge	a0,a1,57c <handle_reset+0x3a>
     574:	c110                	sw	a2,0(a0)
     576:	0511                	addi	a0,a0,4
     578:	feb54ee3          	blt	a0,a1,574 <handle_reset+0x32>
     57c:	00001517          	auipc	a0,0x1
     580:	33050513          	addi	a0,a0,816 # 18ac <_data_lma>
     584:	20000597          	auipc	a1,0x20000
     588:	a7c58593          	addi	a1,a1,-1412 # 20000000 <lfsr>
     58c:	82018613          	addi	a2,gp,-2016 # 20000020 <ssd1306_buffer>
     590:	00c58863          	beq	a1,a2,5a0 <handle_reset+0x5e>
     594:	4114                	lw	a3,0(a0)
     596:	c194                	sw	a3,0(a1)
     598:	0511                	addi	a0,a0,4
     59a:	0591                	addi	a1,a1,4
     59c:	fec59ae3          	bne	a1,a2,590 <handle_reset+0x4e>
     5a0:	e000f7b7          	lui	a5,0xe000f
     5a4:	4705                	li	a4,1
     5a6:	c398                	sw	a4,0(a5)
     5a8:	6785                	lui	a5,0x1
     5aa:	9f678793          	addi	a5,a5,-1546 # 9f6 <main>
     5ae:	34179073          	csrw	mepc,a5
     5b2:	30200073          	mret

000005b6 <ADC1_IRQHandler>:
     5b6:	a001                	j	5b6 <ADC1_IRQHandler>

000005b8 <NMI_Handler>:
     5b8:	40021737          	lui	a4,0x40021
     5bc:	471c                	lw	a5,8(a4)
     5be:	008006b7          	lui	a3,0x800
     5c2:	8fd5                	or	a5,a5,a3
     5c4:	c71c                	sw	a5,8(a4)

000005c6 <strlen>:
     5c6:	87aa                	mv	a5,a0
     5c8:	0007c703          	lbu	a4,0(a5)
     5cc:	e701                	bnez	a4,5d4 <strlen+0xe>
     5ce:	40a78533          	sub	a0,a5,a0
     5d2:	8082                	ret
     5d4:	0785                	addi	a5,a5,1
     5d6:	bfcd                	j	5c8 <strlen+0x2>

000005d8 <mini_vpprintf>:
     5d8:	fa410113          	addi	sp,sp,-92
     5dc:	caa2                	sw	s0,84(sp)
     5de:	c8a6                	sw	s1,80(sp)
     5e0:	cc86                	sw	ra,88(sp)
     5e2:	c02a                	sw	a0,0(sp)
     5e4:	c22e                	sw	a1,4(sp)
     5e6:	8432                	mv	s0,a2
     5e8:	84b6                	mv	s1,a3
     5ea:	e509                	bnez	a0,5f4 <mini_vpprintf+0x1c>
     5ec:	13600793          	li	a5,310
     5f0:	c202                	sw	zero,4(sp)
     5f2:	c03e                	sw	a5,0(sp)
     5f4:	ca02                	sw	zero,20(sp)
     5f6:	00044783          	lbu	a5,0(s0)
     5fa:	00140713          	addi	a4,s0,1
     5fe:	00f10fa3          	sb	a5,31(sp)
     602:	eb81                	bnez	a5,612 <mini_vpprintf+0x3a>
     604:	40e6                	lw	ra,88(sp)
     606:	4456                	lw	s0,84(sp)
     608:	4552                	lw	a0,20(sp)
     60a:	44c6                	lw	s1,80(sp)
     60c:	05c10113          	addi	sp,sp,92
     610:	8082                	ret
     612:	c63a                	sw	a4,12(sp)
     614:	02500693          	li	a3,37
     618:	02d78063          	beq	a5,a3,638 <mini_vpprintf+0x60>
     61c:	4612                	lw	a2,4(sp)
     61e:	4782                	lw	a5,0(sp)
     620:	4585                	li	a1,1
     622:	01f10513          	addi	a0,sp,31
     626:	9782                	jalr	a5
     628:	4732                	lw	a4,12(sp)
     62a:	c426                	sw	s1,8(sp)
     62c:	843a                	mv	s0,a4
     62e:	47d2                	lw	a5,20(sp)
     630:	44a2                	lw	s1,8(sp)
     632:	97aa                	add	a5,a5,a0
     634:	ca3e                	sw	a5,20(sp)
     636:	b7c1                	j	5f6 <mini_vpprintf+0x1e>
     638:	00144783          	lbu	a5,1(s0)
     63c:	03000693          	li	a3,48
     640:	00240713          	addi	a4,s0,2
     644:	00f10fa3          	sb	a5,31(sp)
     648:	c63e                	sw	a5,12(sp)
     64a:	08d79363          	bne	a5,a3,6d0 <mini_vpprintf+0xf8>
     64e:	843a                	mv	s0,a4
     650:	4681                	li	a3,0
     652:	4701                	li	a4,0
     654:	45a5                	li	a1,9
     656:	a819                	j	66c <mini_vpprintf+0x94>
     658:	00271793          	slli	a5,a4,0x2
     65c:	97ba                	add	a5,a5,a4
     65e:	0786                	slli	a5,a5,0x1
     660:	0405                	addi	s0,s0,1
     662:	00f60733          	add	a4,a2,a5
     666:	fff44783          	lbu	a5,-1(s0)
     66a:	4685                	li	a3,1
     66c:	fd078613          	addi	a2,a5,-48
     670:	0ff67513          	zext.b	a0,a2
     674:	fea5f2e3          	bgeu	a1,a0,658 <mini_vpprintf+0x80>
     678:	c299                	beqz	a3,67e <mini_vpprintf+0xa6>
     67a:	00f10fa3          	sb	a5,31(sp)
     67e:	c83a                	sw	a4,16(sp)
     680:	46e1                	li	a3,24
     682:	00e6d363          	bge	a3,a4,688 <mini_vpprintf+0xb0>
     686:	c836                	sw	a3,16(sp)
     688:	06c00613          	li	a2,108
     68c:	4681                	li	a3,0
     68e:	00c79863          	bne	a5,a2,69e <mini_vpprintf+0xc6>
     692:	00044783          	lbu	a5,0(s0)
     696:	4685                	li	a3,1
     698:	0405                	addi	s0,s0,1
     69a:	00f10fa3          	sb	a5,31(sp)
     69e:	01f14603          	lbu	a2,31(sp)
     6a2:	06400793          	li	a5,100
     6a6:	06f60563          	beq	a2,a5,710 <mini_vpprintf+0x138>
     6aa:	02c7e763          	bltu	a5,a2,6d8 <mini_vpprintf+0x100>
     6ae:	05800793          	li	a5,88
     6b2:	0af60063          	beq	a2,a5,752 <mini_vpprintf+0x17a>
     6b6:	06300793          	li	a5,99
     6ba:	0af60d63          	beq	a2,a5,774 <mini_vpprintf+0x19c>
     6be:	d239                	beqz	a2,604 <mini_vpprintf+0x2c>
     6c0:	4612                	lw	a2,4(sp)
     6c2:	4782                	lw	a5,0(sp)
     6c4:	4585                	li	a1,1
     6c6:	01f10513          	addi	a0,sp,31
     6ca:	9782                	jalr	a5
     6cc:	c426                	sw	s1,8(sp)
     6ce:	b785                	j	62e <mini_vpprintf+0x56>
     6d0:	02000693          	li	a3,32
     6d4:	c636                	sw	a3,12(sp)
     6d6:	bfa5                	j	64e <mini_vpprintf+0x76>
     6d8:	07500793          	li	a5,117
     6dc:	02f60a63          	beq	a2,a5,710 <mini_vpprintf+0x138>
     6e0:	07800793          	li	a5,120
     6e4:	06f60763          	beq	a2,a5,752 <mini_vpprintf+0x17a>
     6e8:	07300793          	li	a5,115
     6ec:	fcf61ae3          	bne	a2,a5,6c0 <mini_vpprintf+0xe8>
     6f0:	00448793          	addi	a5,s1,4
     6f4:	4084                	lw	s1,0(s1)
     6f6:	cc3a                	sw	a4,24(sp)
     6f8:	c43e                	sw	a5,8(sp)
     6fa:	8526                	mv	a0,s1
     6fc:	35e9                	jal	5c6 <strlen>
     6fe:	4762                	lw	a4,24(sp)
     700:	85aa                	mv	a1,a0
     702:	08e05663          	blez	a4,78e <mini_vpprintf+0x1b6>
     706:	46c2                	lw	a3,16(sp)
     708:	4632                	lw	a2,12(sp)
     70a:	1838                	addi	a4,sp,56
     70c:	8526                	mv	a0,s1
     70e:	a01d                	j	734 <mini_vpprintf+0x15c>
     710:	00448793          	addi	a5,s1,4
     714:	c43e                	sw	a5,8(sp)
     716:	c695                	beqz	a3,742 <mini_vpprintf+0x16a>
     718:	f8b60613          	addi	a2,a2,-117
     71c:	1018                	addi	a4,sp,32
     71e:	00163693          	seqz	a3,a2
     722:	4088                	lw	a0,0(s1)
     724:	4601                	li	a2,0
     726:	45a9                	li	a1,10
     728:	34ed                	jal	212 <mini_itoa.part.0>
     72a:	46c2                	lw	a3,16(sp)
     72c:	4632                	lw	a2,12(sp)
     72e:	1838                	addi	a4,sp,56
     730:	85aa                	mv	a1,a0
     732:	1008                	addi	a0,sp,32
     734:	3489                	jal	176 <mini_pad>
     736:	4612                	lw	a2,4(sp)
     738:	85aa                	mv	a1,a0
     73a:	1828                	addi	a0,sp,56
     73c:	4782                	lw	a5,0(sp)
     73e:	9782                	jalr	a5
     740:	b5fd                	j	62e <mini_vpprintf+0x56>
     742:	07500793          	li	a5,117
     746:	1018                	addi	a4,sp,32
     748:	4685                	li	a3,1
     74a:	fcf60ce3          	beq	a2,a5,722 <mini_vpprintf+0x14a>
     74e:	4681                	li	a3,0
     750:	bfc9                	j	722 <mini_vpprintf+0x14a>
     752:	4088                	lw	a0,0(s1)
     754:	fa860613          	addi	a2,a2,-88
     758:	00448793          	addi	a5,s1,4
     75c:	1018                	addi	a4,sp,32
     75e:	4685                	li	a3,1
     760:	00163613          	seqz	a2,a2
     764:	45c1                	li	a1,16
     766:	c43e                	sw	a5,8(sp)
     768:	346d                	jal	212 <mini_itoa.part.0>
     76a:	46c2                	lw	a3,16(sp)
     76c:	4632                	lw	a2,12(sp)
     76e:	85aa                	mv	a1,a0
     770:	1838                	addi	a4,sp,56
     772:	b7c1                	j	732 <mini_vpprintf+0x15a>
     774:	00448793          	addi	a5,s1,4
     778:	c43e                	sw	a5,8(sp)
     77a:	409c                	lw	a5,0(s1)
     77c:	46c2                	lw	a3,16(sp)
     77e:	4632                	lw	a2,12(sp)
     780:	00f10fa3          	sb	a5,31(sp)
     784:	1838                	addi	a4,sp,56
     786:	4585                	li	a1,1
     788:	01f10513          	addi	a0,sp,31
     78c:	b765                	j	734 <mini_vpprintf+0x15c>
     78e:	4612                	lw	a2,4(sp)
     790:	8526                	mv	a0,s1
     792:	b76d                	j	73c <mini_vpprintf+0x164>

00000794 <printf>:
     794:	1111                	addi	sp,sp,-28
     796:	c632                	sw	a2,12(sp)
     798:	862a                	mv	a2,a0
     79a:	c42e                	sw	a1,8(sp)
     79c:	c836                	sw	a3,16(sp)
     79e:	4581                	li	a1,0
     7a0:	0034                	addi	a3,sp,8
     7a2:	52e00513          	li	a0,1326
     7a6:	c206                	sw	ra,4(sp)
     7a8:	ca3a                	sw	a4,20(sp)
     7aa:	cc3e                	sw	a5,24(sp)
     7ac:	c036                	sw	a3,0(sp)
     7ae:	352d                	jal	5d8 <mini_vpprintf>
     7b0:	4092                	lw	ra,4(sp)
     7b2:	0171                	addi	sp,sp,28
     7b4:	8082                	ret

000007b6 <ssd1306_i2c_error.isra.0>:
 * error handler
 */
uint8_t ssd1306_i2c_error(uint8_t err)
{
	// report error
	printf("ssd1306_i2c_error - timeout waiting for %s\n\r", errstr[err]);
     7b6:	6785                	lui	a5,0x1
     7b8:	050a                	slli	a0,a0,0x2
     7ba:	ef478793          	addi	a5,a5,-268 # ef4 <errstr>
     7be:	97aa                	add	a5,a5,a0
     7c0:	438c                	lw	a1,0(a5)
     7c2:	6505                	lui	a0,0x1
uint8_t ssd1306_i2c_error(uint8_t err)
     7c4:	1171                	addi	sp,sp,-4
	printf("ssd1306_i2c_error - timeout waiting for %s\n\r", errstr[err]);
     7c6:	e7850513          	addi	a0,a0,-392 # e78 <main+0x482>
uint8_t ssd1306_i2c_error(uint8_t err)
     7ca:	c006                	sw	ra,0(sp)
	printf("ssd1306_i2c_error - timeout waiting for %s\n\r", errstr[err]);
     7cc:	37e1                	jal	794 <printf>
	
	// reset & initialize I2C
	ssd1306_i2c_setup();

	return 1;
}
     7ce:	4082                	lw	ra,0(sp)
     7d0:	0111                	addi	sp,sp,4
	ssd1306_i2c_setup();
     7d2:	b601                	j	2d2 <ssd1306_i2c_setup>

000007d4 <ssd1306_i2c_send.constprop.0.isra.0>:
uint8_t ssd1306_i2c_send(uint8_t addr, uint8_t *data, uint8_t sz)
{
	int32_t timeout;
	
	// wait for not busy
	timeout = TIMEOUT_MAX;
     7d4:	6761                	lui	a4,0x18
	while((I2C1->STAR2 & I2C_STAR2_BUSY) && (timeout--));
     7d6:	400057b7          	lui	a5,0x40005
	timeout = TIMEOUT_MAX;
     7da:	6a070713          	addi	a4,a4,1696 # 186a0 <main.c.46010771+0x15fac>
	while((I2C1->STAR2 & I2C_STAR2_BUSY) && (timeout--));
     7de:	40078793          	addi	a5,a5,1024 # 40005400 <__global_pointer$+0x20004c00>
     7e2:	567d                	li	a2,-1
     7e4:	0187d683          	lhu	a3,24(a5)
     7e8:	8a89                	andi	a3,a3,2
     7ea:	cedd                	beqz	a3,8a8 <ssd1306_i2c_send.constprop.0.isra.0+0xd4>
     7ec:	177d                	addi	a4,a4,-1
     7ee:	fec71be3          	bne	a4,a2,7e4 <ssd1306_i2c_send.constprop.0.isra.0+0x10>
	if(timeout==-1)
		return ssd1306_i2c_error(0);
     7f2:	4501                	li	a0,0
     7f4:	a821                	j	80c <ssd1306_i2c_send.constprop.0.isra.0+0x38>
     7f6:	67e1                	lui	a5,0x18
     7f8:	6a178793          	addi	a5,a5,1697 # 186a1 <main.c.46010771+0x15fad>
	// send data one byte at a time
	while(sz--)
	{
		// wait for TX Empty
		timeout = TIMEOUT_MAX;
		while(!(I2C1->STAR1 & I2C_STAR1_TXE) && (timeout--));
     7fc:	01475683          	lhu	a3,20(a4)
     800:	0806f693          	andi	a3,a3,128
     804:	e689                	bnez	a3,80e <ssd1306_i2c_send.constprop.0.isra.0+0x3a>
     806:	17fd                	addi	a5,a5,-1
     808:	fbf5                	bnez	a5,7fc <ssd1306_i2c_send.constprop.0.isra.0+0x28>
		if(timeout==-1)
			return ssd1306_i2c_error(3);
     80a:	450d                	li	a0,3
		return ssd1306_i2c_error(0);
     80c:	b76d                	j	7b6 <ssd1306_i2c_error.isra.0>
		
		// send command
		I2C1->DATAR = *data++;
     80e:	00054783          	lbu	a5,0(a0)
     812:	0505                	addi	a0,a0,1
     814:	00f71823          	sh	a5,16(a4)
	while(sz--)
     818:	fcb51fe3          	bne	a0,a1,7f6 <ssd1306_i2c_send.constprop.0.isra.0+0x22>
	}

	// wait for tx complete
	timeout = TIMEOUT_MAX;
     81c:	66e1                	lui	a3,0x18
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
     81e:	40005737          	lui	a4,0x40005
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_BYTE_TRANSMITTED)) && (timeout--));
     822:	00070637          	lui	a2,0x70
	timeout = TIMEOUT_MAX;
     826:	6a068693          	addi	a3,a3,1696 # 186a0 <main.c.46010771+0x15fac>
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
     82a:	40070713          	addi	a4,a4,1024 # 40005400 <__global_pointer$+0x20004c00>
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_BYTE_TRANSMITTED)) && (timeout--));
     82e:	08460613          	addi	a2,a2,132 # 70084 <main.c.46010771+0x6d990>
     832:	55fd                	li	a1,-1
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
     834:	01475503          	lhu	a0,20(a4)
     838:	01875783          	lhu	a5,24(a4)
     83c:	07c2                	slli	a5,a5,0x10
     83e:	8fc9                	or	a5,a5,a0
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_BYTE_TRANSMITTED)) && (timeout--));
     840:	8ff1                	and	a5,a5,a2
     842:	00c78763          	beq	a5,a2,850 <ssd1306_i2c_send.constprop.0.isra.0+0x7c>
     846:	16fd                	addi	a3,a3,-1
     848:	feb696e3          	bne	a3,a1,834 <ssd1306_i2c_send.constprop.0.isra.0+0x60>
	if(timeout==-1)
		return ssd1306_i2c_error(4);
     84c:	4511                	li	a0,4
     84e:	bf7d                	j	80c <ssd1306_i2c_send.constprop.0.isra.0+0x38>

	// set STOP condition
	I2C1->CTLR1 |= I2C_CTLR1_STOP;
     850:	00075783          	lhu	a5,0(a4)
     854:	2007e793          	ori	a5,a5,512
     858:	00f71023          	sh	a5,0(a4)
	
	// we're happy
	return 0;
}
     85c:	8082                	ret
		while(!(I2C1->STAR1 & I2C_STAR1_TXE) && (timeout--));
     85e:	40005737          	lui	a4,0x40005
     862:	95aa                	add	a1,a1,a0
     864:	40070713          	addi	a4,a4,1024 # 40005400 <__global_pointer$+0x20004c00>
     868:	bf45                	j	818 <ssd1306_i2c_send.constprop.0.isra.0+0x44>
	I2C1->DATAR = addr<<1;
     86a:	07800793          	li	a5,120
     86e:	00f71823          	sh	a5,16(a4)
	timeout = TIMEOUT_MAX;
     872:	6661                	lui	a2,0x18
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
     874:	400056b7          	lui	a3,0x40005
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_TRANSMITTER_MODE_SELECTED)) && (timeout--));
     878:	00070737          	lui	a4,0x70
	timeout = TIMEOUT_MAX;
     87c:	6a060613          	addi	a2,a2,1696 # 186a0 <main.c.46010771+0x15fac>
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
     880:	40068693          	addi	a3,a3,1024 # 40005400 <__global_pointer$+0x20004c00>
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_TRANSMITTER_MODE_SELECTED)) && (timeout--));
     884:	08270713          	addi	a4,a4,130 # 70082 <main.c.46010771+0x6d98e>
     888:	537d                	li	t1,-1
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
     88a:	0146d283          	lhu	t0,20(a3)
     88e:	0186d783          	lhu	a5,24(a3)
     892:	07c2                	slli	a5,a5,0x10
     894:	0057e7b3          	or	a5,a5,t0
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_TRANSMITTER_MODE_SELECTED)) && (timeout--));
     898:	8ff9                	and	a5,a5,a4
     89a:	fce782e3          	beq	a5,a4,85e <ssd1306_i2c_send.constprop.0.isra.0+0x8a>
     89e:	167d                	addi	a2,a2,-1
     8a0:	fe6615e3          	bne	a2,t1,88a <ssd1306_i2c_send.constprop.0.isra.0+0xb6>
		return ssd1306_i2c_error(2);
     8a4:	4509                	li	a0,2
     8a6:	b79d                	j	80c <ssd1306_i2c_send.constprop.0.isra.0+0x38>
	I2C1->CTLR1 |= I2C_CTLR1_START;
     8a8:	0007d703          	lhu	a4,0(a5)
	timeout = TIMEOUT_MAX;
     8ac:	66e1                	lui	a3,0x18
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_MODE_SELECT)) && (timeout--));
     8ae:	00030637          	lui	a2,0x30
	I2C1->CTLR1 |= I2C_CTLR1_START;
     8b2:	10076713          	ori	a4,a4,256
     8b6:	00e79023          	sh	a4,0(a5)
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
     8ba:	40005737          	lui	a4,0x40005
	timeout = TIMEOUT_MAX;
     8be:	6a068693          	addi	a3,a3,1696 # 186a0 <main.c.46010771+0x15fac>
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
     8c2:	40070713          	addi	a4,a4,1024 # 40005400 <__global_pointer$+0x20004c00>
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_MODE_SELECT)) && (timeout--));
     8c6:	0605                	addi	a2,a2,1 # 30001 <main.c.46010771+0x2d90d>
     8c8:	537d                	li	t1,-1
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
     8ca:	01475283          	lhu	t0,20(a4)
     8ce:	01875783          	lhu	a5,24(a4)
     8d2:	07c2                	slli	a5,a5,0x10
     8d4:	0057e7b3          	or	a5,a5,t0
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_MODE_SELECT)) && (timeout--));
     8d8:	8ff1                	and	a5,a5,a2
     8da:	f8c788e3          	beq	a5,a2,86a <ssd1306_i2c_send.constprop.0.isra.0+0x96>
     8de:	16fd                	addi	a3,a3,-1
     8e0:	fe6695e3          	bne	a3,t1,8ca <ssd1306_i2c_send.constprop.0.isra.0+0xf6>
		return ssd1306_i2c_error(1);
     8e4:	4505                	li	a0,1
     8e6:	b71d                	j	80c <ssd1306_i2c_send.constprop.0.isra.0+0x38>

000008e8 <ssd1306_cmd.isra.0>:
uint8_t ssd1306_cmd(uint8_t cmd)
     8e8:	fd810113          	addi	sp,sp,-40
	
	/* build command or data packets */
	if(cmd)
	{
		pkt[0] = 0;
		pkt[1] = *data;
     8ec:	00a100a3          	sb	a0,1(sp)
	else
	{
		pkt[0] = 0x40;
		memcpy(&pkt[1], data, sz);
	}
	return ssd1306_i2c_send(SSD1306_I2C_ADDR, pkt, sz+1);
     8f0:	4589                	li	a1,2
     8f2:	850a                	mv	a0,sp
     8f4:	d206                	sw	ra,36(sp)
		pkt[0] = 0;
     8f6:	00010023          	sb	zero,0(sp)
	return ssd1306_i2c_send(SSD1306_I2C_ADDR, pkt, sz+1);
     8fa:	3de9                	jal	7d4 <ssd1306_i2c_send.constprop.0.isra.0>
}
     8fc:	5092                	lw	ra,36(sp)
     8fe:	02810113          	addi	sp,sp,40
     902:	8082                	ret

00000904 <memset>:
     904:	962a                	add	a2,a2,a0
     906:	87aa                	mv	a5,a0
     908:	00c79363          	bne	a5,a2,90e <memset+0xa>
     90c:	8082                	ret
     90e:	00b78023          	sb	a1,0(a5)
     912:	0785                	addi	a5,a5,1
     914:	bfd5                	j	908 <memset+0x4>

00000916 <ssd1306_setbuf.constprop.0>:
	memset(ssd1306_buffer, color ? 0xFF : 0x00, sizeof(ssd1306_buffer));
     916:	20000537          	lui	a0,0x20000
     91a:	40000613          	li	a2,1024
     91e:	4581                	li	a1,0
     920:	02050513          	addi	a0,a0,32 # 20000020 <ssd1306_buffer>
     924:	b7c5                	j	904 <memset>

00000926 <memcpy>:
     926:	4781                	li	a5,0
     928:	00f61363          	bne	a2,a5,92e <memcpy+0x8>
     92c:	8082                	ret
     92e:	00f58733          	add	a4,a1,a5
     932:	00074683          	lbu	a3,0(a4)
     936:	00f50733          	add	a4,a0,a5
     93a:	0785                	addi	a5,a5,1
     93c:	00d70023          	sb	a3,0(a4)
     940:	b7e5                	j	928 <memcpy+0x2>

00000942 <ssd1306_refresh>:
{
     942:	7179                	addi	sp,sp,-48
	ssd1306_cmd(SSD1306_COLUMNADDR);
     944:	02100513          	li	a0,33
{
     948:	d606                	sw	ra,44(sp)
     94a:	d422                	sw	s0,40(sp)
     94c:	d226                	sw	s1,36(sp)
	ssd1306_cmd(SSD1306_COLUMNADDR);
     94e:	3f69                	jal	8e8 <ssd1306_cmd.isra.0>
	ssd1306_cmd(SSD1306_OFFSET);   // Column start address (0 = reset)
     950:	4501                	li	a0,0
     952:	3f59                	jal	8e8 <ssd1306_cmd.isra.0>
	ssd1306_cmd(SSD1306_OFFSET+SSD1306_W-1); // Column end address (127 = reset)
     954:	07f00513          	li	a0,127
     958:	3f41                	jal	8e8 <ssd1306_cmd.isra.0>
	ssd1306_cmd(SSD1306_PAGEADDR);
     95a:	02200513          	li	a0,34
     95e:	3769                	jal	8e8 <ssd1306_cmd.isra.0>
	ssd1306_cmd(0); // Page start address (0 = reset)
     960:	4501                	li	a0,0
     962:	3759                	jal	8e8 <ssd1306_cmd.isra.0>
	ssd1306_cmd(7); // Page end address
     964:	20000437          	lui	s0,0x20000
     968:	451d                	li	a0,7
     96a:	02040413          	addi	s0,s0,32 # 20000020 <ssd1306_buffer>
     96e:	3fad                	jal	8e8 <ssd1306_cmd.isra.0>
    for(i=0;i<sizeof(ssd1306_buffer);i+=SSD1306_PSZ)
     970:	40040493          	addi	s1,s0,1024
		pkt[0] = 0x40;
     974:	04000793          	li	a5,64
		memcpy(&pkt[1], data, sz);
     978:	85a2                	mv	a1,s0
     97a:	02000613          	li	a2,32
     97e:	00110513          	addi	a0,sp,1
		pkt[0] = 0x40;
     982:	00f10023          	sb	a5,0(sp)
		memcpy(&pkt[1], data, sz);
     986:	3745                	jal	926 <memcpy>
	return ssd1306_i2c_send(SSD1306_I2C_ADDR, pkt, sz+1);
     988:	02100593          	li	a1,33
     98c:	850a                	mv	a0,sp
     98e:	02040413          	addi	s0,s0,32
     992:	3589                	jal	7d4 <ssd1306_i2c_send.constprop.0.isra.0>
     994:	fe9410e3          	bne	s0,s1,974 <ssd1306_refresh+0x32>
}
     998:	50b2                	lw	ra,44(sp)
     99a:	5422                	lw	s0,40(sp)
     99c:	5492                	lw	s1,36(sp)
     99e:	6145                	addi	sp,sp,48
     9a0:	8082                	ret

000009a2 <SystemInit>:
     9a2:	400227b7          	lui	a5,0x40022
     9a6:	4705                	li	a4,1
     9a8:	c398                	sw	a4,0(a5)
     9aa:	400217b7          	lui	a5,0x40021
     9ae:	01080737          	lui	a4,0x1080
     9b2:	0007a223          	sw	zero,4(a5) # 40021004 <__global_pointer$+0x20020804>
     9b6:	08170713          	addi	a4,a4,129 # 1080081 <main.c.46010771+0x107d98d>
     9ba:	c398                	sw	a4,0(a5)
     9bc:	009f0737          	lui	a4,0x9f0
     9c0:	c798                	sw	a4,8(a5)
     9c2:	4398                	lw	a4,0(a5)
     9c4:	00671693          	slli	a3,a4,0x6
     9c8:	fe06dde3          	bgez	a3,9c2 <SystemInit+0x20>
     9cc:	43d8                	lw	a4,4(a5)
     9ce:	400216b7          	lui	a3,0x40021
     9d2:	9b71                	andi	a4,a4,-4
     9d4:	00276713          	ori	a4,a4,2
     9d8:	c3d8                	sw	a4,4(a5)
     9da:	4721                	li	a4,8
     9dc:	42dc                	lw	a5,4(a3)
     9de:	8bb1                	andi	a5,a5,12
     9e0:	fee79ee3          	bne	a5,a4,9dc <SystemInit+0x3a>
     9e4:	e00007b7          	lui	a5,0xe0000
     9e8:	0e07ac23          	sw	zero,248(a5) # e00000f8 <__global_pointer$+0xbffff8f8>
     9ec:	08000713          	li	a4,128
     9f0:	0ee7aa23          	sw	a4,244(a5)
     9f4:	8082                	ret

000009f6 <main>:
    ssd1306_setbuf(0);
  }
}

int main()
{
     9f6:	f9410113          	addi	sp,sp,-108
     9fa:	d486                	sw	ra,104(sp)
     9fc:	d2a2                	sw	s0,100(sp)
     9fe:	d0a6                	sw	s1,96(sp)
    GPIO_port_enable(GPIO_port_A);
     a00:	40021437          	lui	s0,0x40021
	// 48MHz internal clock
	SystemInit();
     a04:	3f79                	jal	9a2 <SystemInit>
    GPIO_port_enable(GPIO_port_A);
     a06:	4c1c                	lw	a5,24(s0)
    GPIO_pinMode(BTN_PIN, GPIO_pinMode_I_pullUp, GPIO_Speed_10MHz);
     a08:	400114b7          	lui	s1,0x40011

  init_gpio();

	Delay_Ms( 200 );
     a0c:	00125537          	lui	a0,0x125
    GPIO_port_enable(GPIO_port_A);
     a10:	0047e793          	ori	a5,a5,4
     a14:	cc1c                	sw	a5,24(s0)
    GPIO_port_enable(GPIO_port_D);
     a16:	4c1c                	lw	a5,24(s0)
	Delay_Ms( 200 );
     a18:	f8050513          	addi	a0,a0,-128 # 124f80 <main.c.46010771+0x12288c>
    GPIO_port_enable(GPIO_port_D);
     a1c:	0207e793          	ori	a5,a5,32
     a20:	cc1c                	sw	a5,24(s0)
    GPIO_port_enable(GPIO_port_C);
     a22:	4c1c                	lw	a5,24(s0)
     a24:	0107e793          	ori	a5,a5,16
     a28:	cc1c                	sw	a5,24(s0)
    GPIO_pinMode(BTN_PIN, GPIO_pinMode_I_pullUp, GPIO_Speed_10MHz);
     a2a:	40048793          	addi	a5,s1,1024 # 40011400 <__global_pointer$+0x20010c00>
     a2e:	4398                	lw	a4,0(a5)
     a30:	f0f77713          	andi	a4,a4,-241
     a34:	c398                	sw	a4,0(a5)
     a36:	4398                	lw	a4,0(a5)
     a38:	08076713          	ori	a4,a4,128
     a3c:	c398                	sw	a4,0(a5)
     a3e:	4709                	li	a4,2
     a40:	cb98                	sw	a4,16(a5)
	Delay_Ms( 200 );
     a42:	fbeff0ef          	jal	200 <DelaySysTick>
 * init I2C and GPIO
 */
uint8_t ssd1306_i2c_init(void)
{
	// Enable GPIOC and I2C
	RCC->APB2PCENR |= RCC_APB2Periph_GPIOC;
     a46:	4c1c                	lw	a5,24(s0)
	RCC->APB1PCENR |= RCC_APB1Periph_I2C1;
     a48:	00200737          	lui	a4,0x200
	RCC->APB2PCENR |= RCC_APB2Periph_GPIOC;
     a4c:	0107e793          	ori	a5,a5,16
     a50:	cc1c                	sw	a5,24(s0)
	RCC->APB1PCENR |= RCC_APB1Periph_I2C1;
     a52:	4c5c                	lw	a5,28(s0)
     a54:	8fd9                	or	a5,a5,a4
     a56:	cc5c                	sw	a5,28(s0)
	
	// PC1 is SDA, 10MHz Output, alt func, open-drain
	GPIOC->CFGLR &= ~(0xf<<(4*1));
     a58:	409c                	lw	a5,0(s1)
	GPIOC->CFGLR |= (GPIO_Speed_10MHz | GPIO_CNF_OUT_OD_AF)<<(4*1);
	
	// PC2 is SCL, 10MHz Output, alt func, open-drain
	GPIOC->CFGLR &= ~(0xf<<(4*2));
     a5a:	777d                	lui	a4,0xfffff
     a5c:	0ff70713          	addi	a4,a4,255 # fffff0ff <__global_pointer$+0xdfffe8ff>
	GPIOC->CFGLR &= ~(0xf<<(4*1));
     a60:	f0f7f793          	andi	a5,a5,-241
     a64:	c09c                	sw	a5,0(s1)
	GPIOC->CFGLR |= (GPIO_Speed_10MHz | GPIO_CNF_OUT_OD_AF)<<(4*1);
     a66:	409c                	lw	a5,0(s1)
{
	// pulse reset
	ssd1306_rst();
	
	// initialize OLED
	uint8_t *cmd_list = (uint8_t *)ssd1306_init_array;
     a68:	6405                	lui	s0,0x1
     a6a:	f0840413          	addi	s0,s0,-248 # f08 <ssd1306_init_array>
     a6e:	0d07e793          	ori	a5,a5,208
     a72:	c09c                	sw	a5,0(s1)
	GPIOC->CFGLR &= ~(0xf<<(4*2));
     a74:	409c                	lw	a5,0(s1)
     a76:	8ff9                	and	a5,a5,a4
     a78:	c09c                	sw	a5,0(s1)
	GPIOC->CFGLR |= (GPIO_Speed_10MHz | GPIO_CNF_OUT_OD_AF)<<(4*2);
     a7a:	409c                	lw	a5,0(s1)
     a7c:	6705                	lui	a4,0x1
     a7e:	d0070713          	addi	a4,a4,-768 # d00 <main+0x30a>
     a82:	8fd9                	or	a5,a5,a4
     a84:	c09c                	sw	a5,0(s1)
	GPIOC->CFGLR |= (GPIO_Speed_10MHz | GPIO_CNF_OUT_PP)<<(4*4);
	GPIOC->BSHR = (1<<(16+4));
#endif

	// load I2C regs
	ssd1306_i2c_setup();
     a86:	84dff0ef          	jal	2d2 <ssd1306_i2c_setup>
	while(*cmd_list != SSD1306_TERMINATE_CMDS)
     a8a:	00044503          	lbu	a0,0(s0)
     a8e:	0ff00793          	li	a5,255
     a92:	08f51c63          	bne	a0,a5,b2a <main+0x134>
		if(ssd1306_cmd(*cmd_list++))
			return 1;
	}
	
	// clear display
	ssd1306_setbuf(0);
     a96:	3541                	jal	916 <ssd1306_setbuf.constprop.0>
    for (int i = 0; i < 30; i+=2) {
     a98:	4401                	li	s0,0
	ssd1306_refresh();
     a9a:	3565                	jal	942 <ssd1306_refresh>
      ssd1306_setbuf(0);
     a9c:	3dad                	jal	916 <ssd1306_setbuf.constprop.0>
      ssd1306_drawImage(i, 0, title, 24, 64, 0);
     a9e:	6485                	lui	s1,0x1
     aa0:	4781                	li	a5,0
     aa2:	8522                	mv	a0,s0
     aa4:	04000713          	li	a4,64
     aa8:	46e1                	li	a3,24
     aaa:	f6c48613          	addi	a2,s1,-148 # f6c <title>
     aae:	4581                	li	a1,0
     ab0:	877ff0ef          	jal	326 <ssd1306_drawImage>
      ssd1306_refresh();
     ab4:	3579                	jal	942 <ssd1306_refresh>
      Delay_Ms(100);
     ab6:	00092537          	lui	a0,0x92
     aba:	7c050513          	addi	a0,a0,1984 # 927c0 <main.c.46010771+0x900cc>
     abe:	f42ff0ef          	jal	200 <DelaySysTick>
    for (int i = 0; i < 30; i+=2) {
     ac2:	0409                	addi	s0,s0,2
     ac4:	47f9                	li	a5,30
     ac6:	fcf41be3          	bne	s0,a5,a9c <main+0xa6>
    int c = 0;
     aca:	4401                	li	s0,0
    bool button_state = false;
     acc:	c602                	sw	zero,12(sp)
      ssd1306_setbuf(0);
     ace:	35a1                	jal	916 <ssd1306_setbuf.constprop.0>
      ssd1306_drawImage(30, 0, title, 24, 64, 0);
     ad0:	4781                	li	a5,0
     ad2:	f6c48613          	addi	a2,s1,-148
     ad6:	04000713          	li	a4,64
     ada:	46e1                	li	a3,24
     adc:	4581                	li	a1,0
     ade:	4579                	li	a0,30
     ae0:	847ff0ef          	jal	326 <ssd1306_drawImage>
      if (c > 50) {
     ae4:	03200793          	li	a5,50
     ae8:	6605                	lui	a2,0x1
     aea:	0487d363          	bge	a5,s0,b30 <main+0x13a>
        ssd1306_drawImage(80, 20, start, 24, 24, 0);
     aee:	4781                	li	a5,0
        ssd1306_drawImage(80, 20, start, 24, 24, 1);
     af0:	4761                	li	a4,24
     af2:	86ba                	mv	a3,a4
     af4:	f2460613          	addi	a2,a2,-220 # f24 <start>
     af8:	45d1                	li	a1,20
     afa:	05000513          	li	a0,80
     afe:	829ff0ef          	jal	326 <ssd1306_drawImage>
      ssd1306_refresh();
     b02:	3581                	jal	942 <ssd1306_refresh>
      uint8_t button_is_pressed = !GPIO_digitalRead(BTN_PIN);
     b04:	400117b7          	lui	a5,0x40011
     b08:	40078793          	addi	a5,a5,1024 # 40011400 <__global_pointer$+0x20010c00>
     b0c:	479c                	lw	a5,8(a5)
      if (button_state && !button_is_pressed){
     b0e:	4732                	lw	a4,12(sp)
     b10:	8b89                	andi	a5,a5,2
     b12:	c311                	beqz	a4,b16 <main+0x120>
     b14:	e385                	bnez	a5,b34 <main+0x13e>
      button_state = button_is_pressed;
     b16:	0017b793          	seqz	a5,a5
     b1a:	c63e                	sw	a5,12(sp)
      c ++;      
     b1c:	0405                	addi	s0,s0,1
      if (c > 100) {
     b1e:	06500793          	li	a5,101
     b22:	faf416e3          	bne	s0,a5,ace <main+0xd8>
        c = 0;
     b26:	4401                	li	s0,0
     b28:	b75d                	j	ace <main+0xd8>
		if(ssd1306_cmd(*cmd_list++))
     b2a:	0405                	addi	s0,s0,1
     b2c:	3b75                	jal	8e8 <ssd1306_cmd.isra.0>
     b2e:	bfb1                	j	a8a <main+0x94>
        ssd1306_drawImage(80, 20, start, 24, 24, 1);
     b30:	4785                	li	a5,1
     b32:	bf7d                	j	af0 <main+0xfa>
		ssd1306_init();

    opening();
    
    // clear display
    ssd1306_setbuf(0);
     b34:	33cd                	jal	916 <ssd1306_setbuf.constprop.0>
    ssd1306_refresh();
     b36:	3531                	jal	942 <ssd1306_refresh>
  int random_n = get_random();
     b38:	8dfff0ef          	jal	416 <get_random>
  int character_y = 53;
     b3c:	03500793          	li	a5,53
     b40:	c03e                	sw	a5,0(sp)
  int character_x = 130;
     b42:	08200793          	li	a5,130
  int character_h = 8;
     b46:	4421                	li	s0,8
  int character_x = 130;
     b48:	c23e                	sw	a5,4(sp)
  int kuina_y = init_kuina_y;
     b4a:	02d00793          	li	a5,45
  int random_n = get_random();
     b4e:	d02a                	sw	a0,32(sp)
  int character_num = 0;
     b50:	4481                	li	s1,0
  bool danger_flag = false;
     b52:	ce02                	sw	zero,28(sp)
  int character_w = 8;
     b54:	c422                	sw	s0,8(sp)
  int jump_progress = 0;
     b56:	cc02                	sw	zero,24(sp)
  bool jump_flag = false;
     b58:	d202                	sw	zero,36(sp)
  bool button_state = false;
     b5a:	d602                	sw	zero,44(sp)
  bool flip_flag = false;
     b5c:	ca02                	sw	zero,20(sp)
  int flip_c = 0;
     b5e:	d402                	sw	zero,40(sp)
  int kuina_y = init_kuina_y;
     b60:	c83e                	sw	a5,16(sp)
    uint8_t button_is_pressed = !GPIO_digitalRead(BTN_PIN); 
     b62:	400117b7          	lui	a5,0x40011
     b66:	40078793          	addi	a5,a5,1024 # 40011400 <__global_pointer$+0x20010c00>
     b6a:	479c                	lw	a5,8(a5)
    if (!button_state && button_is_pressed && !jump_flag){
     b6c:	5732                	lw	a4,44(sp)
     b6e:	8b89                	andi	a5,a5,2
     b70:	e311                	bnez	a4,b74 <main+0x17e>
     b72:	cbc1                	beqz	a5,c02 <main+0x20c>
    button_state = button_is_pressed;
     b74:	0017b793          	seqz	a5,a5
     b78:	d63e                	sw	a5,44(sp)
    if (jump_flag && (max_jump * 2) < jump_progress){
     b7a:	5792                	lw	a5,36(sp)
     b7c:	c395                	beqz	a5,ba0 <main+0x1aa>
     b7e:	4762                	lw	a4,24(sp)
     b80:	03c00793          	li	a5,60
     b84:	08e7c563          	blt	a5,a4,c0e <main+0x218>
    else if (jump_flag && max_jump >= jump_progress){
     b88:	46e2                	lw	a3,24(sp)
      jump_progress += 1;
     b8a:	00170793          	addi	a5,a4,1
    else if (jump_flag && max_jump >= jump_progress){
     b8e:	4779                	li	a4,30
     b90:	06d74c63          	blt	a4,a3,c08 <main+0x212>
      kuina_y -= 1;
     b94:	4742                	lw	a4,16(sp)
     b96:	177d                	addi	a4,a4,-1
      jump_progress += 1;
     b98:	cc3e                	sw	a5,24(sp)
      kuina_y += 1;
     b9a:	47b2                	lw	a5,12(sp)
     b9c:	c83a                	sw	a4,16(sp)
     b9e:	d23e                	sw	a5,36(sp)
    flip_c ++;
     ba0:	57a2                	lw	a5,40(sp)
     ba2:	0785                	addi	a5,a5,1
     ba4:	d43e                	sw	a5,40(sp)
    if (flip_c > 20) {
     ba6:	5722                	lw	a4,40(sp)
     ba8:	47d5                	li	a5,21
     baa:	00f71763          	bne	a4,a5,bb8 <main+0x1c2>
      flip_flag = !flip_flag;
     bae:	47d2                	lw	a5,20(sp)
      flip_c = 0;
     bb0:	d402                	sw	zero,40(sp)
      flip_flag = !flip_flag;
     bb2:	0017c793          	xori	a5,a5,1
     bb6:	ca3e                	sw	a5,20(sp)
    if (!danger_flag){
     bb8:	47f2                	lw	a5,28(sp)
     bba:	e781                	bnez	a5,bc2 <main+0x1cc>
      random_n = get_random();
     bbc:	85bff0ef          	jal	416 <get_random>
     bc0:	d02a                	sw	a0,32(sp)
      if (random_n <= 5){
     bc2:	5682                	lw	a3,32(sp)
     bc4:	4715                	li	a4,5
     bc6:	47a1                	li	a5,8
     bc8:	1cd75a63          	bge	a4,a3,d9c <main+0x3a6>
      else if (random_n <= 8){
     bcc:	24d7dd63          	bge	a5,a3,e26 <main+0x430>
      else if (random_n <= 9){
     bd0:	4725                	li	a4,9
     bd2:	26e68363          	beq	a3,a4,e38 <main+0x442>
      else if (random_n <= 10){
     bd6:	4729                	li	a4,10
     bd8:	26e68a63          	beq	a3,a4,e4c <main+0x456>
    if (flip_flag){
     bdc:	47d2                	lw	a5,20(sp)
     bde:	cfa5                	beqz	a5,c56 <main+0x260>
      if (character_num == 0){
     be0:	1c048663          	beqz	s1,dac <main+0x3b6>
      else if (character_num == 1){
     be4:	4785                	li	a5,1
     be6:	02f49e63          	bne	s1,a5,c22 <main+0x22c>
        ssd1306_drawImage(character_x, character_y, pineapple_1, 16, 16, 0);
     bea:	4582                	lw	a1,0(sp)
     bec:	4512                	lw	a0,4(sp)
     bee:	4741                	li	a4,16
     bf0:	6609                	lui	a2,0x2
     bf2:	4781                	li	a5,0
     bf4:	86ba                	mv	a3,a4
     bf6:	88c60613          	addi	a2,a2,-1908 # 188c <pineapple_1>
     bfa:	f2cff0ef          	jal	326 <ssd1306_drawImage>
     bfe:	4485                	li	s1,1
     c00:	a2c1                	j	dc0 <main+0x3ca>
    button_state = button_is_pressed;
     c02:	47b2                	lw	a5,12(sp)
     c04:	d63e                	sw	a5,44(sp)
     c06:	bfa5                	j	b7e <main+0x188>
      kuina_y += 1;
     c08:	4742                	lw	a4,16(sp)
     c0a:	0705                	addi	a4,a4,1
     c0c:	b771                	j	b98 <main+0x1a2>
      kuina_y = init_kuina_y;
     c0e:	02d00793          	li	a5,45
      jump_progress = 0;
     c12:	cc02                	sw	zero,24(sp)
      jump_flag = false;
     c14:	d202                	sw	zero,36(sp)
      kuina_y = init_kuina_y;
     c16:	c83e                	sw	a5,16(sp)
     c18:	b761                	j	ba0 <main+0x1aa>
        character_y = 45;
     c1a:	02d00793          	li	a5,45
     c1e:	c03e                	sw	a5,0(sp)
     c20:	b7e9                	j	bea <main+0x1f4>
      else if (character_num == 2){
     c22:	4789                	li	a5,2
     c24:	00f49e63          	bne	s1,a5,c40 <main+0x24a>
        ssd1306_drawImage(character_x, character_y, mongoose_1, 16, 8, 0);
     c28:	4582                	lw	a1,0(sp)
     c2a:	4512                	lw	a0,4(sp)
     c2c:	6609                	lui	a2,0x2
     c2e:	4781                	li	a5,0
     c30:	4721                	li	a4,8
     c32:	46c1                	li	a3,16
     c34:	87c60613          	addi	a2,a2,-1924 # 187c <mongoose_1>
     c38:	eeeff0ef          	jal	326 <ssd1306_drawImage>
     c3c:	4489                	li	s1,2
     c3e:	a249                	j	dc0 <main+0x3ca>
        ssd1306_drawImage(character_x, character_y, earthworm_1, 8, 8, 0);
     c40:	4582                	lw	a1,0(sp)
     c42:	4512                	lw	a0,4(sp)
     c44:	4721                	li	a4,8
     c46:	4781                	li	a5,0
     c48:	86ba                	mv	a3,a4
     c4a:	81018613          	addi	a2,gp,-2032 # 20000010 <earthworm_1>
     c4e:	ed8ff0ef          	jal	326 <ssd1306_drawImage>
     c52:	448d                	li	s1,3
     c54:	a2b5                	j	dc0 <main+0x3ca>
      if (character_num == 0){
     c56:	e095                	bnez	s1,c7a <main+0x284>
        ssd1306_drawImage(character_x, character_y, grass_1, 8, 8, 0);
     c58:	4582                	lw	a1,0(sp)
     c5a:	4512                	lw	a0,4(sp)
     c5c:	4721                	li	a4,8
     c5e:	4781                	li	a5,0
     c60:	86ba                	mv	a3,a4
     c62:	81818613          	addi	a2,gp,-2024 # 20000018 <grass_1>
     c66:	ec0ff0ef          	jal	326 <ssd1306_drawImage>
     c6a:	4481                	li	s1,0
      ssd1306_drawImage(kuina_x, kuina_y, kuina_2, 16, 16, 0);
     c6c:	4741                	li	a4,16
     c6e:	6609                	lui	a2,0x2
     c70:	4781                	li	a5,0
     c72:	86ba                	mv	a3,a4
     c74:	82c60613          	addi	a2,a2,-2004 # 182c <kuina_2>
     c78:	aa91                	j	dcc <main+0x3d6>
      else if (character_num == 1){
     c7a:	4785                	li	a5,1
     c7c:	00f49e63          	bne	s1,a5,c98 <main+0x2a2>
        ssd1306_drawImage(character_x, character_y, pineapple_1, 16, 16, 0);
     c80:	4582                	lw	a1,0(sp)
     c82:	4512                	lw	a0,4(sp)
     c84:	4741                	li	a4,16
     c86:	6609                	lui	a2,0x2
     c88:	4781                	li	a5,0
     c8a:	86ba                	mv	a3,a4
     c8c:	88c60613          	addi	a2,a2,-1908 # 188c <pineapple_1>
     c90:	e96ff0ef          	jal	326 <ssd1306_drawImage>
     c94:	4485                	li	s1,1
     c96:	bfd9                	j	c6c <main+0x276>
      else if (character_num == 2){
     c98:	4789                	li	a5,2
     c9a:	1cf49163          	bne	s1,a5,e5c <main+0x466>
        ssd1306_drawImage(character_x, character_y, mongoose_2, 16, 8, 0);
     c9e:	4582                	lw	a1,0(sp)
     ca0:	4512                	lw	a0,4(sp)
     ca2:	6609                	lui	a2,0x2
     ca4:	4781                	li	a5,0
     ca6:	4721                	li	a4,8
     ca8:	46c1                	li	a3,16
     caa:	84c60613          	addi	a2,a2,-1972 # 184c <mongoose_2>
     cae:	e78ff0ef          	jal	326 <ssd1306_drawImage>
     cb2:	4489                	li	s1,2
     cb4:	bf65                	j	c6c <main+0x276>
      character_x = 130;
     cb6:	08200793          	li	a5,130
      danger_flag = false;
     cba:	ce02                	sw	zero,28(sp)
      character_x = 130;
     cbc:	c23e                	sw	a5,4(sp)
    char score_txt[30] = "Score:"; 
     cbe:	726f67b7          	lui	a5,0x726f6
     cc2:	35378793          	addi	a5,a5,851 # 726f6353 <__global_pointer$+0x526f5b53>
     cc6:	c0be                	sw	a5,64(sp)
     cc8:	6791                	lui	a5,0x4
     cca:	a6578793          	addi	a5,a5,-1435 # 3a65 <main.c.46010771+0x1371>
     cce:	4659                	li	a2,22
     cd0:	4581                	li	a1,0
     cd2:	00a8                	addi	a0,sp,72
     cd4:	c2be                	sw	a5,68(sp)
     cd6:	313d                	jal	904 <memset>
     cd8:	0098                	addi	a4,sp,64
    while (*dest != '\0') {
     cda:	00074783          	lbu	a5,0(a4)
     cde:	ebc5                	bnez	a5,d8e <main+0x398>
     ce0:	6685                	lui	a3,0x1
     ce2:	ea868693          	addi	a3,a3,-344 # ea8 <main+0x4b2>
    while (*src != '\0') {
     ce6:	0006c783          	lbu	a5,0(a3)
     cea:	e7c5                	bnez	a5,d92 <main+0x39c>
    *dest = '\0';
     cec:	00070023          	sb	zero,0(a4)
}
     cf0:	0094                	addi	a3,sp,64
     cf2:	20000737          	lui	a4,0x20000
     cf6:	02070713          	addi	a4,a4,32 # 20000020 <ssd1306_buffer>
     cfa:	d836                	sw	a3,48(sp)
	while((c=*str++))
     cfc:	56c2                	lw	a3,48(sp)
     cfe:	0006c603          	lbu	a2,0(a3)
     d02:	0685                	addi	a3,a3,1
     d04:	d836                	sw	a3,48(sp)
     d06:	ce35                	beqz	a2,d82 <main+0x38c>
        d = fontdata[(chr << 3) + i];
     d08:	060e                	slli	a2,a2,0x3
     d0a:	4681                	li	a3,0
     d0c:	de32                	sw	a2,60(sp)
     d0e:	5672                	lw	a2,60(sp)
     d10:	6585                	lui	a1,0x1
     d12:	02c58593          	addi	a1,a1,44 # 102c <fontdata>
     d16:	9636                	add	a2,a2,a3
     d18:	962e                	add	a2,a2,a1
     d1a:	00064583          	lbu	a1,0(a2)
		ssd1306_buffer[addr] |= (1<<(y&7));
     d1e:	4605                	li	a2,1
     d20:	00d61333          	sll	t1,a2,a3
		ssd1306_buffer[addr] &= ~(1<<(y&7));
     d24:	fff34293          	not	t0,t1
     d28:	0ff2f613          	zext.b	a2,t0
     d2c:	dc32                	sw	a2,56(sp)
     d2e:	0ff37613          	zext.b	a2,t1
     d32:	da32                	sw	a2,52(sp)
     d34:	853a                	mv	a0,a4
        for (j = 0; j < 8; j++)
     d36:	4601                	li	a2,0
		ssd1306_buffer[addr] |= (1<<(y&7));
     d38:	00054283          	lbu	t0,0(a0)
		ssd1306_buffer[addr] &= ~(1<<(y&7));
     d3c:	5362                	lw	t1,56(sp)
	if(color)
     d3e:	01859393          	slli	t2,a1,0x18
     d42:	4183d393          	srai	t2,t2,0x18
		ssd1306_buffer[addr] &= ~(1<<(y&7));
     d46:	0062f333          	and	t1,t0,t1
	if(color)
     d4a:	0003d563          	bgez	t2,d54 <main+0x35e>
		ssd1306_buffer[addr] |= (1<<(y&7));
     d4e:	5352                	lw	t1,52(sp)
     d50:	0062e333          	or	t1,t0,t1
        for (j = 0; j < 8; j++)
     d54:	0605                	addi	a2,a2,1
     d56:	0642                	slli	a2,a2,0x10
		ssd1306_buffer[addr] |= (1<<(y&7));
     d58:	00650023          	sb	t1,0(a0)
            d <<= 1;
     d5c:	0586                	slli	a1,a1,0x1
        for (j = 0; j < 8; j++)
     d5e:	8241                	srli	a2,a2,0x10
     d60:	4321                	li	t1,8
            d <<= 1;
     d62:	0ff5f593          	zext.b	a1,a1
        for (j = 0; j < 8; j++)
     d66:	0505                	addi	a0,a0,1
     d68:	fc6618e3          	bne	a2,t1,d38 <main+0x342>
    for (i = 0; i < 8; i++)
     d6c:	0685                	addi	a3,a3,1
     d6e:	fa6690e3          	bne	a3,t1,d0e <main+0x318>
		x += 8 * font_size;
     d72:	979a                	add	a5,a5,t1
     d74:	0ff7f793          	zext.b	a5,a5
		if(x>128 - 8 * font_size)
     d78:	08000693          	li	a3,128
     d7c:	971a                	add	a4,a4,t1
     d7e:	f6d79fe3          	bne	a5,a3,cfc <main+0x306>
    ssd1306_refresh();
     d82:	36c1                	jal	942 <ssd1306_refresh>
    ssd1306_setbuf(0);
     d84:	3e49                	jal	916 <ssd1306_setbuf.constprop.0>
  while (1) {
     d86:	bbf1                	j	b62 <main+0x16c>
     d88:	47b2                	lw	a5,12(sp)
     d8a:	ce3e                	sw	a5,28(sp)
     d8c:	bf0d                	j	cbe <main+0x2c8>
        dest++;
     d8e:	0705                	addi	a4,a4,1
     d90:	b7a9                	j	cda <main+0x2e4>
        *dest = *src;
     d92:	00f70023          	sb	a5,0(a4)
        src++;
     d96:	0685                	addi	a3,a3,1
        dest++;
     d98:	0705                	addi	a4,a4,1
     d9a:	b7b1                	j	ce6 <main+0x2f0>
    if (flip_flag){
     d9c:	4752                	lw	a4,20(sp)
        character_h = 8;
     d9e:	843e                	mv	s0,a5
        character_w = 8;
     da0:	c43e                	sw	a5,8(sp)
        character_y = 53;
     da2:	03500793          	li	a5,53
     da6:	c03e                	sw	a5,0(sp)
    if (flip_flag){
     da8:	ea0708e3          	beqz	a4,c58 <main+0x262>
        ssd1306_drawImage(character_x, character_y, grass_1, 8, 8, 0);
     dac:	4582                	lw	a1,0(sp)
     dae:	4512                	lw	a0,4(sp)
     db0:	4721                	li	a4,8
     db2:	4781                	li	a5,0
     db4:	86ba                	mv	a3,a4
     db6:	81818613          	addi	a2,gp,-2024 # 20000018 <grass_1>
     dba:	d6cff0ef          	jal	326 <ssd1306_drawImage>
     dbe:	4481                	li	s1,0
      ssd1306_drawImage(kuina_x, kuina_y, kuina_1, 16, 16, 0);
     dc0:	4741                	li	a4,16
     dc2:	6609                	lui	a2,0x2
     dc4:	4781                	li	a5,0
     dc6:	86ba                	mv	a3,a4
     dc8:	85c60613          	addi	a2,a2,-1956 # 185c <kuina_1>
      ssd1306_drawImage(kuina_x, kuina_y, kuina_2, 16, 16, 0);
     dcc:	45c2                	lw	a1,16(sp)
     dce:	453d                	li	a0,15
     dd0:	d56ff0ef          	jal	326 <ssd1306_drawImage>
    character_x -= 1;
     dd4:	4792                	lw	a5,4(sp)
     dd6:	17fd                	addi	a5,a5,-1
     dd8:	c23e                	sw	a5,4(sp)
    if (character_x < 0){
     dda:	4712                	lw	a4,4(sp)
     ddc:	57fd                	li	a5,-1
     dde:	ecf70ce3          	beq	a4,a5,cb6 <main+0x2c0>
     de2:	4732                	lw	a4,12(sp)
    if (kuina_x < character_x && (kuina_x + character_w) > character_x && kuina_y > (init_kuina_y - character_h)) {
     de4:	47bd                	li	a5,15
     de6:	ce3a                	sw	a4,28(sp)
     de8:	4712                	lw	a4,4(sp)
     dea:	ece7dae3          	bge	a5,a4,cbe <main+0x2c8>
     dee:	47a2                	lw	a5,8(sp)
     df0:	4712                	lw	a4,4(sp)
     df2:	17e1                	addi	a5,a5,-8
     df4:	00f037b3          	snez	a5,a5
     df8:	078e                	slli	a5,a5,0x3
     dfa:	07dd                	addi	a5,a5,23
     dfc:	ecf751e3          	bge	a4,a5,cbe <main+0x2c8>
     e00:	ff840793          	addi	a5,s0,-8
     e04:	00f037b3          	snez	a5,a5
     e08:	40f007b3          	neg	a5,a5
     e0c:	4742                	lw	a4,16(sp)
     e0e:	9be1                	andi	a5,a5,-8
     e10:	02578793          	addi	a5,a5,37
     e14:	f6e7dae3          	bge	a5,a4,d88 <main+0x392>
	  Delay_Ms(2000);
     e18:	00b72537          	lui	a0,0xb72
     e1c:	b0050513          	addi	a0,a0,-1280 # b71b00 <main.c.46010771+0xb6f40c>
     e20:	be0ff0ef          	jal	200 <DelaySysTick>
}
     e24:	bb11                	j	b38 <main+0x142>
    if (flip_flag){
     e26:	47d2                	lw	a5,20(sp)
        character_h = 16;
     e28:	4441                	li	s0,16
        character_w = 16;
     e2a:	c422                	sw	s0,8(sp)
    if (flip_flag){
     e2c:	de0797e3          	bnez	a5,c1a <main+0x224>
        character_y = 45;
     e30:	02d00793          	li	a5,45
     e34:	c03e                	sw	a5,0(sp)
     e36:	b5a9                	j	c80 <main+0x28a>
        character_h = 8;
     e38:	843e                	mv	s0,a5
    if (flip_flag){
     e3a:	4752                	lw	a4,20(sp)
        character_w = 16;
     e3c:	47c1                	li	a5,16
     e3e:	c43e                	sw	a5,8(sp)
        character_y = 53;
     e40:	03500793          	li	a5,53
     e44:	c03e                	sw	a5,0(sp)
    if (flip_flag){
     e46:	de0711e3          	bnez	a4,c28 <main+0x232>
     e4a:	bd91                	j	c9e <main+0x2a8>
     e4c:	4752                	lw	a4,20(sp)
        character_h = 8;
     e4e:	843e                	mv	s0,a5
        character_w = 8;
     e50:	c43e                	sw	a5,8(sp)
        character_y = 53;
     e52:	03500793          	li	a5,53
     e56:	c03e                	sw	a5,0(sp)
    if (flip_flag){
     e58:	de0714e3          	bnez	a4,c40 <main+0x24a>
        ssd1306_drawImage(character_x, character_y, earthworm_2, 8, 8, 0);
     e5c:	4582                	lw	a1,0(sp)
     e5e:	4512                	lw	a0,4(sp)
     e60:	4721                	li	a4,8
     e62:	20000637          	lui	a2,0x20000
     e66:	4781                	li	a5,0
     e68:	86ba                	mv	a3,a4
     e6a:	00860613          	addi	a2,a2,8 # 20000008 <earthworm_2>
     e6e:	cb8ff0ef          	jal	326 <ssd1306_drawImage>
     e72:	448d                	li	s1,3
     e74:	bbe5                	j	c6c <main+0x276>
     e76:	0000                	unimp
     e78:	31647373          	.insn	4, 0x31647373
     e7c:	5f363033          	.insn	4, 0x5f363033
     e80:	3269                	jal	80a <ssd1306_i2c_send.constprop.0.isra.0+0x36>
     e82:	72655f63          	bge	a0,t1,15c0 <fontdata+0x594>
     e86:	6f72                	.insn	2, 0x6f72
     e88:	2072                	.insn	2, 0x2072
     e8a:	202d                	jal	eb4 <main+0x4be>
     e8c:	6974                	.insn	2, 0x6974
     e8e:	656d                	lui	a0,0x1b
     e90:	2074756f          	jal	a0,48896 <main.c.46010771+0x461a2>
     e94:	74696177          	.insn	4, 0x74696177
     e98:	6e69                	lui	t3,0x1a
     e9a:	6f662067          	.insn	4, 0x6f662067
     e9e:	2072                	.insn	2, 0x2072
     ea0:	7325                	lui	t1,0xfffe9
     ea2:	0d0a                	slli	s10,s10,0x2
     ea4:	0000                	unimp
     ea6:	0000                	unimp
     ea8:	3031                	jal	6b4 <mini_vpprintf+0xdc>
     eaa:	0000                	unimp
     eac:	6f6e                	.insn	2, 0x6f6e
     eae:	2074                	.insn	2, 0x2074
     eb0:	7562                	.insn	2, 0x7562
     eb2:	00007973          	.insn	4, 0x7973
     eb6:	0000                	unimp
     eb8:	616d                	addi	sp,sp,240
     eba:	72657473          	.insn	4, 0x72657473
     ebe:	6d20                	.insn	2, 0x6d20
     ec0:	0065646f          	jal	s0,56ec6 <main.c.46010771+0x547d2>
     ec4:	7274                	.insn	2, 0x7274
     ec6:	6e61                	lui	t3,0x18
     ec8:	74696d73          	.insn	4, 0x74696d73
     ecc:	6d20                	.insn	2, 0x6d20
     ece:	0065646f          	jal	s0,56ed4 <main.c.46010771+0x547e0>
     ed2:	0000                	unimp
     ed4:	7874                	.insn	2, 0x7874
     ed6:	6520                	.insn	2, 0x6520
     ed8:	706d                	c.lui	zero,0xffffb
     eda:	7974                	.insn	2, 0x7974
     edc:	0000                	unimp
     ede:	0000                	unimp
     ee0:	7274                	.insn	2, 0x7274
     ee2:	6e61                	lui	t3,0x18
     ee4:	74696d73          	.insn	4, 0x74696d73
     ee8:	6320                	.insn	2, 0x6320
     eea:	6c706d6f          	jal	s10,7db0 <main.c.46010771+0x56bc>
     eee:	7465                	lui	s0,0xffff9
     ef0:	0065                	c.nop	25
	...

00000ef4 <errstr>:
     ef4:	0eac 0000 0eb8 0000 0ec4 0000 0ed4 0000     ................
     f04:	0ee0 0000                                   ....

00000f08 <ssd1306_init_array>:
     f08:	d5ae a880 d33f 4000 148d 0020 c8a1 12da     ....?..@.. .....
     f18:	8f81 f1d9 40db a6a4 ffaf 0000               .....@......

00000f24 <start>:
     f24:	0000 0000 0004 7c00 0000 0004 0000 0000     .......|........
     f34:	0068 1400 0000 0014 7800 0000 0000 7800     h........x.....x
     f44:	0000 0014 1400 0000 0078 0000 0000 0004     ........x.......
     f54:	7c00 0000 0004 0000 0000 0024 5400 0000     .|........$..T..
     f64:	0054 4800 0000 0000                         T..H....

00000f6c <title>:
	...
     f74:	0000 00f8 0401 0200 00fa 0603 0200 0002     ................
     f84:	0202 0300 00fe 0202 0300 00fe 0000 0000     ................
     f94:	0000 fe03 0200 0002 fe03 0000 0000 0000     ................
     fa4:	0000 00f8 0401 0200 00fa 0603 0200 0002     ................
     fb4:	0202 0200 0002 0401 0000 00f8 0000 0000     ................
     fc4:	0006 1800 0000 0020 c000 0300 00b0 dc00     ...... .........
     fd4:	0000 0026 1a00 0000 0006 0000 0000 00f8     ..&.............
     fe4:	0401 0200 00fa 0603 0200 0002 0202 0200     ................
     ff4:	0002 0401 0000 00f8 0000 0300 00fe 0202     ................
    1004:	0300 00fe 0400 0000 0018 6000 0100 00a0     ...........`....
    1014:	5000 0000 002c 1600 0300 00fe 0000 0000     .P..,...........
	...

0000102c <fontdata>:
	...
    1034:	817e 81a5 99bd 7e81 ff7e ffdb e7c3 7eff     ~......~~......~
    1044:	fe6c fefe 387c 0010 3810 fe7c 387c 0010     l...|8...8|.|8..
    1054:	7c38 fe38 d6fe 3810 3810 fe7c 7cfe 3810     8|8....8.8|..|.8
    1064:	0000 3c18 183c 0000 ffff c3e7 e7c3 ffff     ...<<...........
    1074:	3c00 4266 6642 003c c3ff bd99 99bd ffc3     .<fBBf<.........
    1084:	070f 7d0f cccc 78cc 663c 6666 183c 187e     ...}...x<fff<.~.
    1094:	333f 303f 7030 e0f0 637f 637f 6763 c0e6     ?3?00p...c.ccg..
    10a4:	db18 e73c 3ce7 18db e080 fef8 e0f8 0080     ..<..<..........
    10b4:	0e02 fe3e 0e3e 0002 3c18 187e 7e18 183c     ..>.>....<~..~<.
    10c4:	6666 6666 0066 0066 db7f 7bdb 1b1b 001b     fffff.f....{....
    10d4:	613e 663c 3c66 7c86 0000 0000 7e7e 007e     >a<ff<.|....~~~.
    10e4:	3c18 187e 3c7e ff18 3c18 187e 1818 0018     .<~.~<...<~.....
    10f4:	1818 1818 3c7e 0018 1800 fe0c 180c 0000     ....~<..........
    1104:	3000 fe60 3060 0000 0000 c0c0 fec0 0000     .0`.`0..........
    1114:	2400 ff66 2466 0000 1800 7e3c ffff 0000     .$f.f$....<~....
    1124:	ff00 7eff 183c 0000 0000 0000 0000 0000     ...~<...........
    1134:	3c18 183c 0018 0018 6666 0024 0000 0000     .<<.....ff$.....
    1144:	6c6c 6cfe 6cfe 006c 3e18 3c60 7c06 0018     ll.l.ll..>`<.|..
    1154:	c600 18cc 6630 00c6 6c38 7638 ccdc 0076     ....0f..8l8v..v.
    1164:	1818 0030 0000 0000 180c 3030 1830 000c     ..0.......000...
    1174:	1830 0c0c 180c 0030 6600 ff3c 663c 0000     0.....0..f<.<f..
    1184:	1800 7e18 1818 0000 0000 0000 1800 3018     ...~...........0
    1194:	0000 7e00 0000 0000 0000 0000 1800 0018     ...~............
    11a4:	0c06 3018 c060 0080 6c38 d6c6 6cc6 0038     ...0`...8l...l8.
    11b4:	3818 1818 1818 007e c67c 1c06 6630 00fe     .8....~.|...0f..
    11c4:	c67c 3c06 c606 007c 3c1c cc6c 0cfe 001e     |..<..|..<l.....
    11d4:	c0fe fcc0 c606 007c 6038 fcc0 c6c6 007c     ......|.8`....|.
    11e4:	c6fe 180c 3030 0030 c67c 7cc6 c6c6 007c     ....000.|..|..|.
    11f4:	c67c 7ec6 0c06 0078 1800 0018 1800 0018     |..~..x.........
    1204:	1800 0018 1800 3018 0c06 3018 0c18 0006     .......0...0....
    1214:	0000 007e 7e00 0000 3060 0c18 3018 0060     ..~..~..`0...0`.
    1224:	c67c 180c 0018 0018 c67c dede c0de 0078     |.......|.....x.
    1234:	6c38 fec6 c6c6 00c6 66fc 7c66 6666 00fc     8l.......ff|ff..
    1244:	663c c0c0 66c0 003c 6cf8 6666 6c66 00f8     <f...f<..lfffl..
    1254:	62fe 7868 6268 00fe 62fe 7868 6068 00f0     .bhxhb...bhxh`..
    1264:	663c c0c0 66ce 003a c6c6 fec6 c6c6 00c6     <f...f:.........
    1274:	183c 1818 1818 003c 0c1e 0c0c cccc 0078     <.....<.......x.
    1284:	66e6 786c 666c 00e6 60f0 6060 6662 00fe     .flxlf...```bf..
    1294:	eec6 fefe c6d6 00c6 e6c6 def6 c6ce 00c6     ................
    12a4:	c67c c6c6 c6c6 007c 66fc 7c66 6060 00f0     |.....|..ff|``..
    12b4:	c67c c6c6 cec6 0e7c 66fc 7c66 666c 00e6     |.....|..ff|lf..
    12c4:	663c 1830 660c 003c 7e7e 185a 1818 003c     <f0..f<.~~Z...<.
    12d4:	c6c6 c6c6 c6c6 007c c6c6 c6c6 6cc6 0038     ......|......l8.
    12e4:	c6c6 d6c6 fed6 006c c6c6 386c c66c 00c6     ......l...l8l...
    12f4:	6666 3c66 1818 003c c6fe 188c 6632 00fe     fff<..<.....2f..
    1304:	303c 3030 3030 003c 60c0 1830 060c 0002     <00000<..`0.....
    1314:	0c3c 0c0c 0c0c 003c 3810 c66c 0000 0000     <.....<..8l.....
    1324:	0000 0000 0000 ff00 1830 000c 0000 0000     ........0.......
    1334:	0000 0c78 cc7c 0076 60e0 667c 6666 00dc     ..x.|.v..`|fff..
    1344:	0000 c67c c6c0 007c 0c1c cc7c cccc 0076     ..|...|...|...v.
    1354:	0000 c67c c0fe 007c 663c f860 6060 00f0     ..|...|.<f`.``..
    1364:	0000 cc76 7ccc f80c 60e0 766c 6666 00e6     ..v..|...`lvff..
    1374:	0018 1838 1818 003c 0006 0606 6606 3c66     ..8...<......ff<
    1384:	60e0 6c66 6c78 00e6 1838 1818 1818 003c     .`flxl..8.....<.
    1394:	0000 feec d6d6 00d6 0000 66dc 6666 0066     ...........ffff.
    13a4:	0000 c67c c6c6 007c 0000 66dc 7c66 f060     ..|...|....ff|`.
    13b4:	0000 cc76 7ccc 1e0c 0000 76dc 6060 00f0     ..v..|.....v``..
    13c4:	0000 c07e 067c 00fc 3030 30fc 3630 001c     ..~.|...00.006..
    13d4:	0000 cccc cccc 0076 0000 c6c6 6cc6 0038     ......v......l8.
    13e4:	0000 d6c6 fed6 006c 0000 6cc6 6c38 00c6     ......l....l8l..
    13f4:	0000 c6c6 7ec6 fc06 0000 4c7e 3218 007e     .....~....~L.2~.
    1404:	180e 7018 1818 000e 1818 1818 1818 0018     ...p............
    1414:	1870 0e18 1818 0070 dc76 0000 0000 0000     p.....p.v.......
    1424:	1000 6c38 c6c6 00fe c67c c0c0 7cc6 780c     ..8l....|....|.x
    1434:	00cc cccc cccc 0076 180c c67c c0fe 007c     ......v...|...|.
    1444:	827c 0c78 cc7c 0076 00c6 0c78 cc7c 0076     |.x.|.v...x.|.v.
    1454:	1830 0c78 cc7c 0076 3030 0c78 cc7c 0076     0.x.|.v.00x.|.v.
    1464:	0000 c07e 7ec0 380c 827c c67c c0fe 007c     ..~..~.8|.|...|.
    1474:	00c6 c67c c0fe 007c 1830 c67c c0fe 007c     ..|...|.0.|...|.
    1484:	0066 1838 1818 003c 827c 1838 1818 003c     f.8...<.|.8...<.
    1494:	1830 3800 1818 003c 38c6 c66c c6fe 00c6     0..8..<..8l.....
    14a4:	6c38 c67c c6fe 00c6 3018 c0fe c0f8 00fe     8l|......0......
    14b4:	0000 187e d87e 007e 6c3e fecc cccc 00ce     ..~.~.~.>l......
    14c4:	827c c67c c6c6 007c 00c6 c67c c6c6 007c     |.|...|...|...|.
    14d4:	1830 c67c c6c6 007c 8478 cc00 cccc 0076     0.|...|.x.....v.
    14e4:	3060 cccc cccc 0076 00c6 c6c6 7ec6 fc06     `0....v......~..
    14f4:	38c6 c66c 6cc6 0038 00c6 c6c6 c6c6 007c     .8l..l8.......|.
    1504:	1818 c07e 7ec0 1818 6c38 f064 6660 00fc     ..~..~..8ld.`f..
    1514:	6666 7e3c 7e18 1818 ccf8 facc cfc6 c7c6     ff<~.~..........
    1524:	1b0e 3c18 d818 0070 3018 0c78 cc7c 0076     ...<..p..0x.|.v.
    1534:	180c 3800 1818 003c 180c c67c c6c6 007c     ...8..<...|...|.
    1544:	3018 cccc cccc 0076 dc76 dc00 6666 0066     .0....v.v...fff.
    1554:	dc76 e600 def6 00ce 6c3c 3e6c 7e00 0000     v.......<ll>.~..
    1564:	6c38 386c 7c00 0000 0018 1818 6330 003e     8ll8.|......0c>.
    1574:	0000 fe00 c0c0 0000 0000 fe00 0606 0000     ................
    1584:	e663 7e6c 6633 0fcc e663 7a6c 6a36 06df     c.l~3f..c.lz6j..
    1594:	0018 1818 3c3c 0018 3300 cc66 3366 0000     ....<<...3f.f3..
    15a4:	cc00 3366 cc66 0000 8822 8822 8822 8822     ..f3f...".".".".
    15b4:	aa55 aa55 aa55 aa55 dd77 dd77 dd77 dd77     U.U.U.U.w.w.w.w.
    15c4:	1818 1818 1818 1818 1818 1818 18f8 1818     ................
    15d4:	1818 18f8 18f8 1818 3636 3636 36f6 3636     ........6666.666
    15e4:	0000 0000 36fe 3636 0000 18f8 18f8 1818     .....666........
    15f4:	3636 06f6 36f6 3636 3636 3636 3636 3636     66...66666666666
    1604:	0000 06fe 36f6 3636 3636 06f6 00fe 0000     .....66666......
    1614:	3636 3636 00fe 0000 1818 18f8 00f8 0000     6666............
    1624:	0000 0000 18f8 1818 1818 1818 001f 0000     ................
    1634:	1818 1818 00ff 0000 0000 0000 18ff 1818     ................
    1644:	1818 1818 181f 1818 0000 0000 00ff 0000     ................
    1654:	1818 1818 18ff 1818 1818 181f 181f 1818     ................
    1664:	3636 3636 3637 3636 3636 3037 003f 0000     666676666670?...
    1674:	0000 303f 3637 3636 3636 00f7 00ff 0000     ..?0766666......
    1684:	0000 00ff 36f7 3636 3636 3037 3637 3636     .....66666707666
    1694:	0000 00ff 00ff 0000 3636 00f7 36f7 3636     ........66...666
    16a4:	1818 00ff 00ff 0000 3636 3636 00ff 0000     ........6666....
    16b4:	0000 00ff 18ff 1818 0000 0000 36ff 3636     .............666
    16c4:	3636 3636 003f 0000 1818 181f 001f 0000     6666?...........
    16d4:	0000 181f 181f 1818 0000 0000 363f 3636     ............?666
    16e4:	3636 3636 36ff 3636 1818 18ff 18ff 1818     6666.666........
    16f4:	1818 1818 00f8 0000 0000 0000 181f 1818     ................
    1704:	ffff ffff ffff ffff 0000 0000 ffff ffff     ................
    1714:	f0f0 f0f0 f0f0 f0f0 0f0f 0f0f 0f0f 0f0f     ................
    1724:	ffff ffff 0000 0000 0000 dc76 dcc8 0076     ..........v...v.
    1734:	cc78 d8cc c6cc 00cc c6fe c0c0 c0c0 00c0     x...............
    1744:	0000 6cfe 6c6c 006c c6fe 3060 c660 00fe     ...llll...`0`...
    1754:	0000 d87e d8d8 0070 0000 6666 6666 c07c     ..~...p...ffff|.
    1764:	7600 18dc 1818 0018 187e 663c 3c66 7e18     .v......~.<ff<.~
    1774:	6c38 fec6 6cc6 0038 6c38 c6c6 6c6c 00ee     8l...l8.8l..ll..
    1784:	180e 3e0c 6666 003c 0000 db7e 7edb 0000     ...>ff<...~..~..
    1794:	0c06 db7e 7edb c060 301e 7e60 3060 001e     ..~..~`..0`~`0..
    17a4:	7c00 c6c6 c6c6 00c6 fe00 fe00 fe00 0000     .|..............
    17b4:	1818 187e 0018 007e 1830 180c 0030 007e     ..~...~.0...0.~.
    17c4:	180c 1830 000c 007e 1b0e 181b 1818 1818     ..0...~.........
    17d4:	1818 1818 d818 70d8 1800 7e00 1800 0000     .......p...~....
    17e4:	7600 00dc dc76 0000 6c38 386c 0000 0000     .v..v...8ll8....
    17f4:	0000 1800 0018 0000 0000 1800 0000 0000     ................
    1804:	0c0f 0c0c 6cec 1c3c 366c 3636 0036 0000     .....l<.l6666...
    1814:	0c78 3018 007c 0000 0000 3c3c 3c3c 0000     x..0|.....<<<<..
	...

0000182c <kuina_2>:
    182c:	c03f c03f c0f3 c0f3 fc3f fc3f ff33 ff33     ?.?.....?.?.3.3.
    183c:	cf00 cf00 3c33 3c33 c00c c00c 3030 3030     ....3<3<....0000

0000184c <mongoose_2>:
    184c:	1800 1e00 ff1f ff7f fecf f007 3006 300e     .............0.0

0000185c <kuina_1>:
    185c:	c03f c03f c0f3 c0f3 fc3f fc3f ff33 ff33     ?.?.....?.?.3.3.
    186c:	cf00 cf00 3c33 3c33 c00c c00c c00c c00c     ....3<3<........

0000187c <mongoose_1>:
    187c:	0800 8e0f ff1f fd7f ffee f08f 681e 4c13     .............h.L

0000188c <pineapple_1>:
    188c:	0008 600c 4862 b01b 600f c007 600d a00a     ...`bH...`...`..
    189c:	600d a00a 600d c7e7 1e79 f81f f00f c007     .`...`..y.......
