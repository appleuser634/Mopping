
main.elf:     file format elf32-littleriscv


Disassembly of section .init:

00000000 <InterruptVector>:
   0:	7000006f          	j	700 <handle_reset>
   4:	00000000          	.word	0x00000000
   8:	00000776          	.word	0x00000776
   c:	00000774          	.word	0x00000774
	...
  30:	00000774          	.word	0x00000774
  34:	00000000          	.word	0x00000000
  38:	00000774          	.word	0x00000774
  3c:	00000000          	.word	0x00000000
  40:	00000774          	.word	0x00000774
  44:	00000774          	.word	0x00000774
  48:	00000774          	.word	0x00000774
  4c:	00000774          	.word	0x00000774
  50:	00000774          	.word	0x00000774
  54:	00000774          	.word	0x00000774
  58:	00000774          	.word	0x00000774
  5c:	00000774          	.word	0x00000774
  60:	00000774          	.word	0x00000774
  64:	00000774          	.word	0x00000774
  68:	00000774          	.word	0x00000774
  6c:	00000774          	.word	0x00000774
  70:	00000774          	.word	0x00000774
  74:	00000774          	.word	0x00000774
  78:	00000774          	.word	0x00000774
  7c:	00000774          	.word	0x00000774
  80:	00000774          	.word	0x00000774
  84:	00000774          	.word	0x00000774
  88:	00000774          	.word	0x00000774
  8c:	00000774          	.word	0x00000774
  90:	00000774          	.word	0x00000774
  94:	00000774          	.word	0x00000774
  98:	00000774          	.word	0x00000774
  9c:	0000                	unimp
	...

Disassembly of section .text:

000000a0 <__mulsi3>:
      a0:	862a                	mv	a2,a0
      a2:	4501                	li	a0,0
      a4:	0015f693          	andi	a3,a1,1
      a8:	c291                	beqz	a3,ac <__mulsi3+0xc>
      aa:	9532                	add	a0,a0,a2
      ac:	8185                	srli	a1,a1,0x1
      ae:	0606                	slli	a2,a2,0x1
      b0:	f9f5                	bnez	a1,a4 <__mulsi3+0x4>
      b2:	8082                	ret
      b4:	0000                	unimp
	...

000000b8 <__divsi3>:
      b8:	02054e63          	bltz	a0,f4 <__umodsi3+0x8>
      bc:	0405c363          	bltz	a1,102 <__umodsi3+0x16>

000000c0 <__hidden___udivsi3>:
      c0:	862e                	mv	a2,a1
      c2:	85aa                	mv	a1,a0
      c4:	557d                	li	a0,-1
      c6:	c215                	beqz	a2,ea <__hidden___udivsi3+0x2a>
      c8:	4685                	li	a3,1
      ca:	00b67863          	bgeu	a2,a1,da <__hidden___udivsi3+0x1a>
      ce:	00c05663          	blez	a2,da <__hidden___udivsi3+0x1a>
      d2:	0606                	slli	a2,a2,0x1
      d4:	0686                	slli	a3,a3,0x1
      d6:	feb66ce3          	bltu	a2,a1,ce <__hidden___udivsi3+0xe>
      da:	4501                	li	a0,0
      dc:	00c5e463          	bltu	a1,a2,e4 <__hidden___udivsi3+0x24>
      e0:	8d91                	sub	a1,a1,a2
      e2:	8d55                	or	a0,a0,a3
      e4:	8285                	srli	a3,a3,0x1
      e6:	8205                	srli	a2,a2,0x1
      e8:	faf5                	bnez	a3,dc <__hidden___udivsi3+0x1c>
      ea:	8082                	ret

000000ec <__umodsi3>:
      ec:	8286                	mv	t0,ra
      ee:	3fc9                	jal	c0 <__hidden___udivsi3>
      f0:	852e                	mv	a0,a1
      f2:	8282                	jr	t0
      f4:	40a00533          	neg	a0,a0
      f8:	00b04763          	bgtz	a1,106 <__umodsi3+0x1a>
      fc:	40b005b3          	neg	a1,a1
     100:	b7c1                	j	c0 <__hidden___udivsi3>
     102:	40b005b3          	neg	a1,a1
     106:	8286                	mv	t0,ra
     108:	3f65                	jal	c0 <__hidden___udivsi3>
     10a:	40a00533          	neg	a0,a0
     10e:	8282                	jr	t0

00000110 <__modsi3>:
     110:	8286                	mv	t0,ra
     112:	0005c763          	bltz	a1,120 <__modsi3+0x10>
     116:	00054963          	bltz	a0,128 <__modsi3+0x18>
     11a:	375d                	jal	c0 <__hidden___udivsi3>
     11c:	852e                	mv	a0,a1
     11e:	8282                	jr	t0
     120:	40b005b3          	neg	a1,a1
     124:	fe055be3          	bgez	a0,11a <__modsi3+0xa>
     128:	40a00533          	neg	a0,a0
     12c:	3f51                	jal	c0 <__hidden___udivsi3>
     12e:	40b00533          	neg	a0,a1
     132:	8282                	jr	t0
	...

00000136 <_puts>:
     136:	832a                	mv	t1,a0
     138:	852e                	mv	a0,a1
     13a:	ce01                	beqz	a2,152 <_puts+0x1c>
     13c:	00062283          	lw	t0,0(a2)
     140:	4701                	li	a4,0
     142:	425c                	lw	a5,4(a2)
     144:	00a74863          	blt	a4,a0,154 <_puts+0x1e>
     148:	00078023          	sb	zero,0(a5)
     14c:	4248                	lw	a0,4(a2)
     14e:	40550533          	sub	a0,a0,t0
     152:	8082                	ret
     154:	460c                	lw	a1,8(a2)
     156:	4214                	lw	a3,0(a2)
     158:	15fd                	addi	a1,a1,-1
     15a:	96ae                	add	a3,a3,a1
     15c:	fed786e3          	beq	a5,a3,148 <_puts+0x12>
     160:	00178693          	addi	a3,a5,1
     164:	c254                	sw	a3,4(a2)
     166:	00e306b3          	add	a3,t1,a4
     16a:	0006c683          	lbu	a3,0(a3)
     16e:	0705                	addi	a4,a4,1
     170:	00d78023          	sb	a3,0(a5)
     174:	b7f9                	j	142 <_puts+0xc>

00000176 <mini_pad>:
     176:	c699                	beqz	a3,184 <mini_pad+0xe>
     178:	4301                	li	t1,0
     17a:	00b6d763          	bge	a3,a1,188 <mini_pad+0x12>
     17e:	85b6                	mv	a1,a3
     180:	4305                	li	t1,1
     182:	a019                	j	188 <mini_pad+0x12>
     184:	4301                	li	t1,0
     186:	86ae                	mv	a3,a1
     188:	8e8d                	sub	a3,a3,a1
     18a:	87ba                	mv	a5,a4
     18c:	00e683b3          	add	t2,a3,a4
     190:	40f382b3          	sub	t0,t2,a5
     194:	04504a63          	bgtz	t0,1e8 <mini_pad+0x72>
     198:	fff6c793          	not	a5,a3
     19c:	87fd                	srai	a5,a5,0x1f
     19e:	8efd                	and	a3,a3,a5
     1a0:	96ba                	add	a3,a3,a4
     1a2:	4781                	li	a5,0
     1a4:	40f58633          	sub	a2,a1,a5
     1a8:	00f682b3          	add	t0,a3,a5
     1ac:	04c04263          	bgtz	a2,1f0 <mini_pad+0x7a>
     1b0:	fff5c793          	not	a5,a1
     1b4:	87fd                	srai	a5,a5,0x1f
     1b6:	8dfd                	and	a1,a1,a5
     1b8:	95b6                	add	a1,a1,a3
     1ba:	40e58533          	sub	a0,a1,a4
     1be:	02030463          	beqz	t1,1e6 <mini_pad+0x70>
     1c2:	02b77263          	bgeu	a4,a1,1e6 <mini_pad+0x70>
     1c6:	02a00793          	li	a5,42
     1ca:	fef58fa3          	sb	a5,-1(a1)
     1ce:	fff58693          	addi	a3,a1,-1
     1d2:	00d77a63          	bgeu	a4,a3,1e6 <mini_pad+0x70>
     1d6:	fef58f23          	sb	a5,-2(a1)
     1da:	ffe58693          	addi	a3,a1,-2
     1de:	00d77463          	bgeu	a4,a3,1e6 <mini_pad+0x70>
     1e2:	fef58ea3          	sb	a5,-3(a1)
     1e6:	8082                	ret
     1e8:	0785                	addi	a5,a5,1
     1ea:	fec78fa3          	sb	a2,-1(a5)
     1ee:	b74d                	j	190 <mini_pad+0x1a>
     1f0:	00f50633          	add	a2,a0,a5
     1f4:	00064603          	lbu	a2,0(a2)
     1f8:	0785                	addi	a5,a5,1
     1fa:	00c28023          	sb	a2,0(t0)
     1fe:	b75d                	j	1a4 <mini_pad+0x2e>

00000200 <DelaySysTick>:
     200:	e000f737          	lui	a4,0xe000f
     204:	471c                	lw	a5,8(a4)
     206:	953e                	add	a0,a0,a5
     208:	471c                	lw	a5,8(a4)
     20a:	8f89                	sub	a5,a5,a0
     20c:	fe07cee3          	bltz	a5,208 <DelaySysTick+0x8>
     210:	8082                	ret

00000212 <mini_itoa.part.0>:
     212:	1101                	addi	sp,sp,-32
     214:	ce06                	sw	ra,28(sp)
     216:	cc22                	sw	s0,24(sp)
     218:	ca26                	sw	s1,20(sp)
     21a:	c002                	sw	zero,0(sp)
     21c:	832a                	mv	t1,a0
     21e:	00055763          	bgez	a0,22c <mini_itoa.part.0+0x1a>
     222:	e689                	bnez	a3,22c <mini_itoa.part.0+0x1a>
     224:	4785                	li	a5,1
     226:	40a00333          	neg	t1,a0
     22a:	c03e                	sw	a5,0(sp)
     22c:	8a05                	andi	a2,a2,1
     22e:	06100413          	li	s0,97
     232:	c219                	beqz	a2,238 <mini_itoa.part.0+0x26>
     234:	04100413          	li	s0,65
     238:	84ba                	mv	s1,a4
     23a:	1459                	addi	s0,s0,-10
     23c:	851a                	mv	a0,t1
     23e:	c83a                	sw	a4,16(sp)
     240:	c21a                	sw	t1,4(sp)
     242:	c62e                	sw	a1,12(sp)
     244:	c41a                	sw	t1,8(sp)
     246:	355d                	jal	ec <__umodsi3>
     248:	47a5                	li	a5,9
     24a:	4322                	lw	t1,8(sp)
     24c:	45b2                	lw	a1,12(sp)
     24e:	4742                	lw	a4,16(sp)
     250:	0ff57693          	zext.b	a3,a0
     254:	06a7e163          	bltu	a5,a0,2b6 <mini_itoa.part.0+0xa4>
     258:	03068693          	addi	a3,a3,48
     25c:	0ff6f693          	zext.b	a3,a3
     260:	00148793          	addi	a5,s1,1
     264:	00d48023          	sb	a3,0(s1)
     268:	851a                	mv	a0,t1
     26a:	c83a                	sw	a4,16(sp)
     26c:	c63e                	sw	a5,12(sp)
     26e:	c42e                	sw	a1,8(sp)
     270:	3d81                	jal	c0 <__hidden___udivsi3>
     272:	4692                	lw	a3,4(sp)
     274:	45a2                	lw	a1,8(sp)
     276:	47b2                	lw	a5,12(sp)
     278:	4742                	lw	a4,16(sp)
     27a:	832a                	mv	t1,a0
     27c:	02b6fb63          	bgeu	a3,a1,2b2 <mini_itoa.part.0+0xa0>
     280:	4682                	lw	a3,0(sp)
     282:	c699                	beqz	a3,290 <mini_itoa.part.0+0x7e>
     284:	02d00693          	li	a3,45
     288:	00d78023          	sb	a3,0(a5)
     28c:	00248793          	addi	a5,s1,2
     290:	40e78533          	sub	a0,a5,a4
     294:	01f55693          	srli	a3,a0,0x1f
     298:	96aa                	add	a3,a3,a0
     29a:	00078023          	sb	zero,0(a5)
     29e:	8685                	srai	a3,a3,0x1
     2a0:	4601                	li	a2,0
     2a2:	17fd                	addi	a5,a5,-1
     2a4:	00d64b63          	blt	a2,a3,2ba <mini_itoa.part.0+0xa8>
     2a8:	40f2                	lw	ra,28(sp)
     2aa:	4462                	lw	s0,24(sp)
     2ac:	44d2                	lw	s1,20(sp)
     2ae:	6105                	addi	sp,sp,32
     2b0:	8082                	ret
     2b2:	84be                	mv	s1,a5
     2b4:	b761                	j	23c <mini_itoa.part.0+0x2a>
     2b6:	96a2                	add	a3,a3,s0
     2b8:	b755                	j	25c <mini_itoa.part.0+0x4a>
     2ba:	00c705b3          	add	a1,a4,a2
     2be:	0007c283          	lbu	t0,0(a5)
     2c2:	0005c303          	lbu	t1,0(a1)
     2c6:	0605                	addi	a2,a2,1
     2c8:	00558023          	sb	t0,0(a1)
     2cc:	00678023          	sb	t1,0(a5)
     2d0:	bfc9                	j	2a2 <mini_itoa.part.0+0x90>

000002d2 <ssd1306_i2c_setup>:
void ssd1306_i2c_setup(void)
{
	uint16_t tempreg;
	
	// Reset I2C1 to init all regs
	RCC->APB1PRSTR |= RCC_APB1Periph_I2C1;
     2d2:	400217b7          	lui	a5,0x40021
     2d6:	4b98                	lw	a4,16(a5)
     2d8:	002006b7          	lui	a3,0x200
     2dc:	8f55                	or	a4,a4,a3
     2de:	cb98                	sw	a4,16(a5)
	RCC->APB1PRSTR &= ~RCC_APB1Periph_I2C1;
     2e0:	4b98                	lw	a4,16(a5)
     2e2:	ffe006b7          	lui	a3,0xffe00
     2e6:	16fd                	addi	a3,a3,-1 # ffdfffff <__global_pointer$+0xdfdff7ff>
     2e8:	8f75                	and	a4,a4,a3
     2ea:	cb98                	sw	a4,16(a5)
	
	// set freq
	tempreg = I2C1->CTLR2;
     2ec:	400057b7          	lui	a5,0x40005
     2f0:	4047d703          	lhu	a4,1028(a5) # 40005404 <__global_pointer$+0x20004c04>
	tempreg &= ~I2C_CTLR2_FREQ;
     2f4:	66c1                	lui	a3,0x10
     2f6:	fc068693          	addi	a3,a3,-64 # ffc0 <main.c.ca7a85b7+0xd53b>
     2fa:	8f75                	and	a4,a4,a3
	tempreg |= (FUNCONF_SYSTEM_CORE_CLOCK/SSD1306_I2C_PRERATE)&I2C_CTLR2_FREQ;
     2fc:	01876713          	ori	a4,a4,24
	I2C1->CTLR2 = tempreg;
     300:	40e79223          	sh	a4,1028(a5)
	tempreg = (FUNCONF_SYSTEM_CORE_CLOCK/(25*SSD1306_I2C_CLKRATE))&I2C_CKCFGR_CCR;
	tempreg |= I2C_CKCFGR_DUTY;
#endif
	tempreg |= I2C_CKCFGR_FS;
#endif
	I2C1->CKCFGR = tempreg;
     304:	7771                	lui	a4,0xffffc
     306:	0705                	addi	a4,a4,1 # ffffc001 <__global_pointer$+0xdfffb801>
     308:	40e79e23          	sh	a4,1052(a5)
	// initialize the state
	ssd1306_i2c_irq_state = 0;
#endif
	
	// Enable I2C
	I2C1->CTLR1 |= I2C_CTLR1_PE;
     30c:	4007d703          	lhu	a4,1024(a5)
     310:	00176713          	ori	a4,a4,1
     314:	40e79023          	sh	a4,1024(a5)

	// set ACK mode
	I2C1->CTLR1 |= I2C_CTLR1_ACK;
     318:	4007d703          	lhu	a4,1024(a5)
     31c:	40076713          	ori	a4,a4,1024
     320:	40e79023          	sh	a4,1024(a5)
}
     324:	8082                	ret

00000326 <ssd1306_drawPixel>:
void ssd1306_drawPixel(uint8_t x, uint8_t y, uint8_t color)
{
	uint16_t addr;
	
	/* clip */
	if(x >= SSD1306_W)
     326:	01851793          	slli	a5,a0,0x18
     32a:	87e1                	srai	a5,a5,0x18
     32c:	0207c963          	bltz	a5,35e <ssd1306_drawPixel+0x38>
		return;
	if(y >= SSD1306_H)
     330:	03f00793          	li	a5,63
     334:	02b7e563          	bltu	a5,a1,35e <ssd1306_drawPixel+0x38>
		return;
	
	/* compute buffer address */
	addr = x + SSD1306_W*(y/8);
     338:	0035d793          	srli	a5,a1,0x3
     33c:	079e                	slli	a5,a5,0x7
	
	/* set/clear bit in buffer */
	if(color)
		ssd1306_buffer[addr] |= (1<<(y&7));
     33e:	953e                	add	a0,a0,a5
     340:	200007b7          	lui	a5,0x20000
     344:	02078793          	addi	a5,a5,32 # 20000020 <ssd1306_buffer>
     348:	97aa                	add	a5,a5,a0
     34a:	899d                	andi	a1,a1,7
     34c:	4685                	li	a3,1
     34e:	0007c703          	lbu	a4,0(a5)
     352:	00b695b3          	sll	a1,a3,a1
	if(color)
     356:	c609                	beqz	a2,360 <ssd1306_drawPixel+0x3a>
		ssd1306_buffer[addr] |= (1<<(y&7));
     358:	8f4d                	or	a4,a4,a1
	else
		ssd1306_buffer[addr] &= ~(1<<(y&7));
     35a:	00e78023          	sb	a4,0(a5)
}
     35e:	8082                	ret
		ssd1306_buffer[addr] &= ~(1<<(y&7));
     360:	fff5c593          	not	a1,a1
     364:	8f6d                	and	a4,a4,a1
     366:	bfd5                	j	35a <ssd1306_drawPixel+0x34>

00000368 <get_random>:
int get_random(int num)
{
	uint8_t bit;
	uint32_t new_data;
	
	for(bit=0;bit<NOISE_BITS;bit++)
     368:	20000637          	lui	a2,0x20000
     36c:	00062783          	lw	a5,0(a2) # 20000000 <lfsr>
{
     370:	1171                	addi	sp,sp,-4
     372:	c006                	sw	ra,0(sp)
     374:	46a1                	li	a3,8
	{
		new_data = ((lfsr>>NOISE_POLY_TAP0) ^
					(lfsr>>NOISE_POLY_TAP1) ^
     376:	0157d593          	srli	a1,a5,0x15
		new_data = ((lfsr>>NOISE_POLY_TAP0) ^
     37a:	01f7d713          	srli	a4,a5,0x1f
     37e:	8f2d                	xor	a4,a4,a1
     380:	8f3d                	xor	a4,a4,a5
					(lfsr>>NOISE_POLY_TAP2) ^
     382:	0017d593          	srli	a1,a5,0x1
		new_data = ((lfsr>>NOISE_POLY_TAP0) ^
     386:	8f2d                	xor	a4,a4,a1
	for(bit=0;bit<NOISE_BITS;bit++)
     388:	16fd                	addi	a3,a3,-1
					(lfsr>>NOISE_POLY_TAP3));
		lfsr = (lfsr<<1) | (new_data&1);
     38a:	8b05                	andi	a4,a4,1
     38c:	0786                	slli	a5,a5,0x1
	for(bit=0;bit<NOISE_BITS;bit++)
     38e:	0ff6f693          	zext.b	a3,a3
		lfsr = (lfsr<<1) | (new_data&1);
     392:	8fd9                	or	a5,a5,a4
	for(bit=0;bit<NOISE_BITS;bit++)
     394:	f2ed                	bnez	a3,376 <get_random+0xe>
	}

  int random_8 = lfsr&NOISE_MASK;
	return random_8 % (num + 1);
     396:	00150593          	addi	a1,a0,1
     39a:	0ff7f513          	zext.b	a0,a5
     39e:	00f62023          	sw	a5,0(a2)
     3a2:	33bd                	jal	110 <__modsi3>
}
     3a4:	4082                	lw	ra,0(sp)
     3a6:	0111                	addi	sp,sp,4
     3a8:	8082                	ret

000003aa <ssd1306_drawstr_sz.constprop.0>:
}

/*
 * draw a string to the display buffer, scaled to size
 */
void ssd1306_drawstr_sz(uint8_t x, uint8_t y, char *str, uint8_t color, font_size_t font_size)
     3aa:	fdc10113          	addi	sp,sp,-36
     3ae:	ce22                	sw	s0,28(sp)
     3b0:	d006                	sw	ra,32(sp)
     3b2:	cc26                	sw	s1,24(sp)
     3b4:	842a                	mv	s0,a0
     3b6:	82ae                	mv	t0,a1
     3b8:	87b2                	mv	a5,a2
{
	uint8_t c;
	
	while((c=*str++))
     3ba:	0007c383          	lbu	t2,0(a5)
     3be:	0785                	addi	a5,a5,1
     3c0:	06038d63          	beqz	t2,43a <ssd1306_drawstr_sz.constprop.0+0x90>
     3c4:	4701                	li	a4,0
        d = fontdata[(chr << 3) + i];
     3c6:	00339613          	slli	a2,t2,0x3
     3ca:	6585                	lui	a1,0x1
     3cc:	963a                	add	a2,a2,a4
     3ce:	37458593          	addi	a1,a1,884 # 1374 <fontdata>
     3d2:	962e                	add	a2,a2,a1
     3d4:	00064303          	lbu	t1,0(a2)
        for (j = 0; j < 8; j++)
     3d8:	4481                	li	s1,0
            if (d & 0x80)
     3da:	01831593          	slli	a1,t1,0x18
     3de:	85e1                	srai	a1,a1,0x18
     3e0:	8636                	mv	a2,a3
     3e2:	0005c463          	bltz	a1,3ea <ssd1306_drawstr_sz.constprop.0+0x40>
     3e6:	0016c613          	xori	a2,a3,1
                    ssd1306_drawPixel(x + (j * font_scale) + k, y + (i * font_scale) + l, col);
     3ea:	00e285b3          	add	a1,t0,a4
     3ee:	00940533          	add	a0,s0,s1
     3f2:	0ff5f593          	zext.b	a1,a1
     3f6:	0ff57513          	zext.b	a0,a0
     3fa:	ca36                	sw	a3,20(sp)
     3fc:	c83e                	sw	a5,16(sp)
     3fe:	c61a                	sw	t1,12(sp)
     400:	c41e                	sw	t2,8(sp)
     402:	c23a                	sw	a4,4(sp)
     404:	c016                	sw	t0,0(sp)
     406:	3705                	jal	326 <ssd1306_drawPixel>
            d <<= 1;
     408:	4332                	lw	t1,12(sp)
        for (j = 0; j < 8; j++)
     40a:	0485                	addi	s1,s1,1
     40c:	04c2                	slli	s1,s1,0x10
            d <<= 1;
     40e:	0306                	slli	t1,t1,0x1
        for (j = 0; j < 8; j++)
     410:	80c1                	srli	s1,s1,0x10
     412:	4621                	li	a2,8
     414:	4282                	lw	t0,0(sp)
     416:	4712                	lw	a4,4(sp)
     418:	43a2                	lw	t2,8(sp)
     41a:	47c2                	lw	a5,16(sp)
     41c:	46d2                	lw	a3,20(sp)
            d <<= 1;
     41e:	0ff37313          	zext.b	t1,t1
        for (j = 0; j < 8; j++)
     422:	fac49ce3          	bne	s1,a2,3da <ssd1306_drawstr_sz.constprop.0+0x30>
    for (i = 0; i < 8; i++)
     426:	0705                	addi	a4,a4,1
     428:	f8971fe3          	bne	a4,s1,3c6 <ssd1306_drawstr_sz.constprop.0+0x1c>
	{
		ssd1306_drawchar_sz(x, y, c, color, font_size);
		x += 8 * font_size;
     42c:	9432                	add	s0,s0,a2
     42e:	0ff47413          	zext.b	s0,s0
		if(x>128 - 8 * font_size)
     432:	07800713          	li	a4,120
     436:	f88772e3          	bgeu	a4,s0,3ba <ssd1306_drawstr_sz.constprop.0+0x10>
			break;
	}
}
     43a:	5082                	lw	ra,32(sp)
     43c:	4472                	lw	s0,28(sp)
     43e:	44e2                	lw	s1,24(sp)
     440:	02410113          	addi	sp,sp,36
     444:	8082                	ret

00000446 <ssd1306_drawFastHLine.constprop.0>:
	if((x >= SSD1306_W) || (y >= SSD1306_H)) return;
     446:	01851793          	slli	a5,a0,0x18
     44a:	87e1                	srai	a5,a5,0x18
     44c:	0407cb63          	bltz	a5,4a2 <ssd1306_drawFastHLine.constprop.0+0x5c>
void ssd1306_drawFastHLine(uint8_t x, uint8_t y, uint8_t w, uint8_t color)
     450:	1141                	addi	sp,sp,-16
     452:	c226                	sw	s1,4(sp)
     454:	c606                	sw	ra,12(sp)
     456:	c422                	sw	s0,8(sp)
	if((x >= SSD1306_W) || (y >= SSD1306_H)) return;
     458:	03f00793          	li	a5,63
     45c:	84ae                	mv	s1,a1
     45e:	02b7e263          	bltu	a5,a1,482 <ssd1306_drawFastHLine.constprop.0+0x3c>
	if((x+w-1) >= SSD1306_W)  w = SSD1306_W-x;
     462:	00c507b3          	add	a5,a0,a2
     466:	08000713          	li	a4,128
     46a:	00f75763          	bge	a4,a5,478 <ssd1306_drawFastHLine.constprop.0+0x32>
     46e:	f8000613          	li	a2,-128
     472:	8e09                	sub	a2,a2,a0
     474:	0ff67613          	zext.b	a2,a2
     478:	962a                	add	a2,a2,a0
     47a:	0ff67413          	zext.b	s0,a2
	while (w--)
     47e:	00851763          	bne	a0,s0,48c <ssd1306_drawFastHLine.constprop.0+0x46>
}
     482:	40b2                	lw	ra,12(sp)
     484:	4422                	lw	s0,8(sp)
     486:	4492                	lw	s1,4(sp)
     488:	0141                	addi	sp,sp,16
     48a:	8082                	ret
        ssd1306_drawPixel(x++, y, color);
     48c:	00150793          	addi	a5,a0,1
     490:	0ff7f793          	zext.b	a5,a5
     494:	4605                	li	a2,1
     496:	85a6                	mv	a1,s1
     498:	c03e                	sw	a5,0(sp)
     49a:	3571                	jal	326 <ssd1306_drawPixel>
     49c:	4782                	lw	a5,0(sp)
     49e:	853e                	mv	a0,a5
     4a0:	bff9                	j	47e <ssd1306_drawFastHLine.constprop.0+0x38>
     4a2:	8082                	ret

000004a4 <ssd1306_drawFastVLine.constprop.0>:
	if((x >= SSD1306_W) || (y >= SSD1306_H)) return;
     4a4:	01851793          	slli	a5,a0,0x18
     4a8:	87e1                	srai	a5,a5,0x18
     4aa:	0407c963          	bltz	a5,4fc <ssd1306_drawFastVLine.constprop.0+0x58>
     4ae:	03f00793          	li	a5,63
     4b2:	04b7e563          	bltu	a5,a1,4fc <ssd1306_drawFastVLine.constprop.0+0x58>
void ssd1306_drawFastVLine(uint8_t x, uint8_t y, uint8_t h, uint8_t color)
     4b6:	1141                	addi	sp,sp,-16
     4b8:	c226                	sw	s1,4(sp)
     4ba:	c606                	sw	ra,12(sp)
     4bc:	c422                	sw	s0,8(sp)
	if((y+h-1) >= SSD1306_H) h = SSD1306_H-y;
     4be:	00c58733          	add	a4,a1,a2
     4c2:	04000793          	li	a5,64
     4c6:	84aa                	mv	s1,a0
     4c8:	00e7d563          	bge	a5,a4,4d2 <ssd1306_drawFastVLine.constprop.0+0x2e>
     4cc:	8f8d                	sub	a5,a5,a1
     4ce:	0ff7f613          	zext.b	a2,a5
     4d2:	962e                	add	a2,a2,a1
     4d4:	0ff67413          	zext.b	s0,a2
	while(h--)
     4d8:	00859763          	bne	a1,s0,4e6 <ssd1306_drawFastVLine.constprop.0+0x42>
}
     4dc:	40b2                	lw	ra,12(sp)
     4de:	4422                	lw	s0,8(sp)
     4e0:	4492                	lw	s1,4(sp)
     4e2:	0141                	addi	sp,sp,16
     4e4:	8082                	ret
        ssd1306_drawPixel(x, y++, color);
     4e6:	00158793          	addi	a5,a1,1
     4ea:	0ff7f793          	zext.b	a5,a5
     4ee:	4605                	li	a2,1
     4f0:	8526                	mv	a0,s1
     4f2:	c03e                	sw	a5,0(sp)
     4f4:	3d0d                	jal	326 <ssd1306_drawPixel>
     4f6:	4782                	lw	a5,0(sp)
     4f8:	85be                	mv	a1,a5
     4fa:	bff9                	j	4d8 <ssd1306_drawFastVLine.constprop.0+0x34>
     4fc:	8082                	ret

000004fe <ssd1306_drawRect.constprop.0>:
void ssd1306_drawRect(uint8_t x, uint8_t y, uint8_t w, uint8_t h, uint8_t color)
     4fe:	1131                	addi	sp,sp,-20
     500:	c426                	sw	s1,8(sp)
     502:	84b2                	mv	s1,a2
	ssd1306_drawFastVLine(x, y, h, color);
     504:	8636                	mv	a2,a3
void ssd1306_drawRect(uint8_t x, uint8_t y, uint8_t w, uint8_t h, uint8_t color)
     506:	c806                	sw	ra,16(sp)
     508:	c622                	sw	s0,12(sp)
     50a:	c236                	sw	a3,4(sp)
     50c:	842a                	mv	s0,a0
     50e:	c02e                	sw	a1,0(sp)
	ssd1306_drawFastVLine(x, y, h, color);
     510:	3f51                	jal	4a4 <ssd1306_drawFastVLine.constprop.0>
	ssd1306_drawFastVLine(x+w-1, y, h, color);
     512:	4612                	lw	a2,4(sp)
     514:	4582                	lw	a1,0(sp)
     516:	fff48513          	addi	a0,s1,-1
     51a:	9522                	add	a0,a0,s0
     51c:	0ff57513          	zext.b	a0,a0
     520:	3751                	jal	4a4 <ssd1306_drawFastVLine.constprop.0>
	ssd1306_drawFastHLine(x, y, w, color);
     522:	4582                	lw	a1,0(sp)
     524:	8626                	mv	a2,s1
     526:	8522                	mv	a0,s0
     528:	3f39                	jal	446 <ssd1306_drawFastHLine.constprop.0>
	ssd1306_drawFastHLine(x, y+h-1, w, color);
     52a:	4792                	lw	a5,4(sp)
     52c:	4702                	lw	a4,0(sp)
     52e:	8522                	mv	a0,s0
}
     530:	4432                	lw	s0,12(sp)
     532:	40c2                	lw	ra,16(sp)
	ssd1306_drawFastHLine(x, y+h-1, w, color);
     534:	17fd                	addi	a5,a5,-1
     536:	8626                	mv	a2,s1
}
     538:	44a2                	lw	s1,8(sp)
	ssd1306_drawFastHLine(x, y+h-1, w, color);
     53a:	00f705b3          	add	a1,a4,a5
     53e:	0ff5f593          	zext.b	a1,a1
}
     542:	0151                	addi	sp,sp,20
	ssd1306_drawFastHLine(x, y+h-1, w, color);
     544:	b709                	j	446 <ssd1306_drawFastHLine.constprop.0>

00000546 <ssd1306_drawImage.constprop.0>:
void ssd1306_drawImage(int x, int y, const unsigned char* input, uint8_t width, uint8_t height, uint8_t color_mode) {
     546:	fd810113          	addi	sp,sp,-40
     54a:	0036d793          	srli	a5,a3,0x3
     54e:	0f86f693          	andi	a3,a3,248
     552:	c63e                	sw	a5,12(sp)
     554:	00a687b3          	add	a5,a3,a0
     558:	d022                	sw	s0,32(sp)
     55a:	d206                	sw	ra,36(sp)
     55c:	ce26                	sw	s1,28(sp)
     55e:	c02a                	sw	a0,0(sp)
     560:	c82e                	sw	a1,16(sp)
     562:	ca32                	sw	a2,20(sp)
     564:	cc3a                	sw	a4,24(sp)
     566:	c43e                	sw	a5,8(sp)
	for (uint8_t line = 0; line < height; line++) {
     568:	4401                	li	s0,0
     56a:	47e2                	lw	a5,24(sp)
     56c:	00f46863          	bltu	s0,a5,57c <ssd1306_drawImage.constprop.0+0x36>
}
     570:	5092                	lw	ra,36(sp)
     572:	5402                	lw	s0,32(sp)
     574:	44f2                	lw	s1,28(sp)
     576:	02810113          	addi	sp,sp,40
     57a:	8082                	ret
		y_absolute = y + line;
     57c:	47c2                	lw	a5,16(sp)
     57e:	00f404b3          	add	s1,s0,a5
    if (y_absolute < 0) {
     582:	0004d663          	bgez	s1,58e <ssd1306_drawImage.constprop.0+0x48>
	for (uint8_t line = 0; line < height; line++) {
     586:	0405                	addi	s0,s0,1
     588:	0ff47413          	zext.b	s0,s0
     58c:	bff9                	j	56a <ssd1306_drawImage.constprop.0+0x24>
		if (y_absolute >= SSD1306_H || y_absolute < 0) {
     58e:	03f00793          	li	a5,63
     592:	fc97efe3          	bltu	a5,s1,570 <ssd1306_drawImage.constprop.0+0x2a>
			uint8_t input_byte = input[byte + line * bytes_to_draw];
     596:	45b2                	lw	a1,12(sp)
		uint8_t v_mask = 1 << (y_absolute & 7);
     598:	0074f793          	andi	a5,s1,7
     59c:	4705                	li	a4,1
     59e:	00f717b3          	sll	a5,a4,a5
			uint8_t input_byte = input[byte + line * bytes_to_draw];
     5a2:	8522                	mv	a0,s0
		uint8_t v_mask = 1 << (y_absolute & 7);
     5a4:	c23e                	sw	a5,4(sp)
			uint8_t input_byte = input[byte + line * bytes_to_draw];
     5a6:	3ced                	jal	a0 <__mulsi3>
     5a8:	47d2                	lw	a5,20(sp)
		for (uint8_t byte = 0; byte < bytes_to_draw; byte++) {
     5aa:	4622                	lw	a2,8(sp)
				buffer_addr = x_absolute + SSD1306_W * (y_absolute / 8);
     5ac:	848d                	srai	s1,s1,0x3
     5ae:	953e                	add	a0,a0,a5
     5b0:	049e                	slli	s1,s1,0x7
		for (uint8_t byte = 0; byte < bytes_to_draw; byte++) {
     5b2:	4782                	lw	a5,0(sp)
     5b4:	fcc789e3          	beq	a5,a2,586 <ssd1306_drawImage.constprop.0+0x40>
			uint8_t input_byte = input[byte + line * bytes_to_draw];
     5b8:	00054383          	lbu	t2,0(a0)
     5bc:	4701                	li	a4,0
			for (pixel = 0; pixel < 8; pixel++) {
     5be:	42a1                	li	t0,8
				if (x_absolute >= SSD1306_W) {
     5c0:	00e607b3          	add	a5,a2,a4
     5c4:	07f00693          	li	a3,127
     5c8:	04f6c363          	blt	a3,a5,60e <ssd1306_drawImage.constprop.0+0xc8>
				buffer_addr = x_absolute + SSD1306_W * (y_absolute / 8);
     5cc:	97a6                	add	a5,a5,s1
						ssd1306_buffer[buffer_addr] = (ssd1306_buffer[buffer_addr] & ~v_mask) | (input_pixel ? v_mask : 0);
     5ce:	200006b7          	lui	a3,0x20000
     5d2:	07c2                	slli	a5,a5,0x10
     5d4:	83c1                	srli	a5,a5,0x10
     5d6:	02068593          	addi	a1,a3,32 # 20000020 <ssd1306_buffer>
     5da:	95be                	add	a1,a1,a5
     5dc:	00410303          	lb	t1,4(sp)
     5e0:	0005c683          	lbu	a3,0(a1)
     5e4:	fff34793          	not	a5,t1
     5e8:	8efd                	and	a3,a3,a5
				uint8_t input_pixel = input_byte & (1 << pixel);
     5ea:	4785                	li	a5,1
     5ec:	00e797b3          	sll	a5,a5,a4
						ssd1306_buffer[buffer_addr] = (ssd1306_buffer[buffer_addr] & ~v_mask) | (input_pixel ? v_mask : 0);
     5f0:	00f3f7b3          	and	a5,t2,a5
     5f4:	00f037b3          	snez	a5,a5
     5f8:	40f007b3          	neg	a5,a5
     5fc:	00f37333          	and	t1,t1,a5
     600:	0066e6b3          	or	a3,a3,t1
     604:	00d58023          	sb	a3,0(a1)
			for (pixel = 0; pixel < 8; pixel++) {
     608:	0705                	addi	a4,a4,1
     60a:	fa571be3          	bne	a4,t0,5c0 <ssd1306_drawImage.constprop.0+0x7a>
     60e:	1661                	addi	a2,a2,-8
     610:	0505                	addi	a0,a0,1
     612:	b745                	j	5b2 <ssd1306_drawImage.constprop.0+0x6c>

00000614 <internal_handle_input.constprop.0>:
     614:	e00007b7          	lui	a5,0xe0000
     618:	0f47a783          	lw	a5,244(a5) # e00000f4 <__global_pointer$+0xbffff8f4>
     61c:	8082                	ret

0000061e <_write.constprop.0>:
     61e:	1121                	addi	sp,sp,-24
     620:	c822                	sw	s0,16(sp)
     622:	ca06                	sw	ra,20(sp)
     624:	c626                	sw	s1,12(sp)
     626:	c402                	sw	zero,8(sp)
     628:	842e                	mv	s0,a1
     62a:	eddd                	bnez	a1,6e8 <_write.constprop.0+0xca>
     62c:	e00007b7          	lui	a5,0xe0000
     630:	0f47a783          	lw	a5,244(a5) # e00000f4 <__global_pointer$+0xbffff8f4>
     634:	c789                	beqz	a5,63e <_write.constprop.0+0x20>
     636:	0807f793          	andi	a5,a5,128
     63a:	e391                	bnez	a5,63e <_write.constprop.0+0x20>
     63c:	3fe1                	jal	614 <internal_handle_input.constprop.0>
     63e:	40d2                	lw	ra,20(sp)
     640:	8522                	mv	a0,s0
     642:	4442                	lw	s0,16(sp)
     644:	44b2                	lw	s1,12(sp)
     646:	0161                	addi	sp,sp,24
     648:	8082                	ret
     64a:	409407b3          	sub	a5,s0,s1
     64e:	471d                	li	a4,7
     650:	00f75363          	bge	a4,a5,656 <_write.constprop.0+0x38>
     654:	87ba                	mv	a5,a4
     656:	00027737          	lui	a4,0x27
     65a:	e00006b7          	lui	a3,0xe0000
     65e:	10170713          	addi	a4,a4,257 # 27101 <main.c.ca7a85b7+0x2467c>
     662:	0f468693          	addi	a3,a3,244 # e00000f4 <__global_pointer$+0xbffff8f4>
     666:	4290                	lw	a2,0(a3)
     668:	08067593          	andi	a1,a2,128
     66c:	e1a5                	bnez	a1,6cc <_write.constprop.0+0xae>
     66e:	c611                	beqz	a2,67a <_write.constprop.0+0x5c>
     670:	c22a                	sw	a0,4(sp)
     672:	c03e                	sw	a5,0(sp)
     674:	3745                	jal	614 <internal_handle_input.constprop.0>
     676:	4512                	lw	a0,4(sp)
     678:	4782                	lw	a5,0(sp)
     67a:	0034                	addi	a3,sp,8
     67c:	470d                	li	a4,3
     67e:	85b6                	mv	a1,a3
     680:	04f74a63          	blt	a4,a5,6d4 <_write.constprop.0+0xb6>
     684:	46a2                	lw	a3,8(sp)
     686:	e0000737          	lui	a4,0xe0000
     68a:	460d                	li	a2,3
     68c:	0ed72c23          	sw	a3,248(a4) # e00000f8 <__global_pointer$+0xbffff8f8>
     690:	009506b3          	add	a3,a0,s1
     694:	4701                	li	a4,0
     696:	0006c283          	lbu	t0,0(a3)
     69a:	0705                	addi	a4,a4,1
     69c:	00e58333          	add	t1,a1,a4
     6a0:	00530023          	sb	t0,0(t1)
     6a4:	00e78563          	beq	a5,a4,6ae <_write.constprop.0+0x90>
     6a8:	0685                	addi	a3,a3,1
     6aa:	fec716e3          	bne	a4,a2,696 <_write.constprop.0+0x78>
     6ae:	00478713          	addi	a4,a5,4
     6b2:	f8076713          	ori	a4,a4,-128
     6b6:	00e10423          	sb	a4,8(sp)
     6ba:	46a2                	lw	a3,8(sp)
     6bc:	e0000737          	lui	a4,0xe0000
     6c0:	94be                	add	s1,s1,a5
     6c2:	0ed72a23          	sw	a3,244(a4) # e00000f4 <__global_pointer$+0xbffff8f4>
     6c6:	f884c2e3          	blt	s1,s0,64a <_write.constprop.0+0x2c>
     6ca:	bf95                	j	63e <_write.constprop.0+0x20>
     6cc:	177d                	addi	a4,a4,-1
     6ce:	ff41                	bnez	a4,666 <_write.constprop.0+0x48>
     6d0:	8426                	mv	s0,s1
     6d2:	b7b5                	j	63e <_write.constprop.0+0x20>
     6d4:	00e48633          	add	a2,s1,a4
     6d8:	962a                	add	a2,a2,a0
     6da:	00064603          	lbu	a2,0(a2)
     6de:	0705                	addi	a4,a4,1
     6e0:	0685                	addi	a3,a3,1
     6e2:	fec68fa3          	sb	a2,-1(a3)
     6e6:	bf69                	j	680 <_write.constprop.0+0x62>
     6e8:	4481                	li	s1,0
     6ea:	bff1                	j	6c6 <_write.constprop.0+0xa8>

000006ec <__puts_uart>:
     6ec:	1161                	addi	sp,sp,-8
     6ee:	c022                	sw	s0,0(sp)
     6f0:	c206                	sw	ra,4(sp)
     6f2:	842e                	mv	s0,a1
     6f4:	372d                	jal	61e <_write.constprop.0>
     6f6:	4092                	lw	ra,4(sp)
     6f8:	8522                	mv	a0,s0
     6fa:	4402                	lw	s0,0(sp)
     6fc:	0121                	addi	sp,sp,8
     6fe:	8082                	ret

00000700 <handle_reset>:
     700:	20000197          	auipc	gp,0x20000
     704:	10018193          	addi	gp,gp,256 # 20000800 <__global_pointer$>
     708:	00018113          	mv	sp,gp
     70c:	08000513          	li	a0,128
     710:	30051073          	csrw	mstatus,a0
     714:	468d                	li	a3,3
     716:	00000517          	auipc	a0,0x0
     71a:	8ea50513          	addi	a0,a0,-1814 # 0 <InterruptVector>
     71e:	8d55                	or	a0,a0,a3
     720:	30551073          	csrw	mtvec,a0
     724:	82018513          	addi	a0,gp,-2016 # 20000020 <ssd1306_buffer>
     728:	c2018593          	addi	a1,gp,-992 # 20000420 <_ebss>
     72c:	4601                	li	a2,0
     72e:	00b55663          	bge	a0,a1,73a <handle_reset+0x3a>
     732:	c110                	sw	a2,0(a0)
     734:	0511                	addi	a0,a0,4
     736:	feb54ee3          	blt	a0,a1,732 <handle_reset+0x32>
     73a:	00001517          	auipc	a0,0x1
     73e:	4f650513          	addi	a0,a0,1270 # 1c30 <_data_lma>
     742:	20000597          	auipc	a1,0x20000
     746:	8be58593          	addi	a1,a1,-1858 # 20000000 <lfsr>
     74a:	82018613          	addi	a2,gp,-2016 # 20000020 <ssd1306_buffer>
     74e:	00c58863          	beq	a1,a2,75e <handle_reset+0x5e>
     752:	4114                	lw	a3,0(a0)
     754:	c194                	sw	a3,0(a1)
     756:	0511                	addi	a0,a0,4
     758:	0591                	addi	a1,a1,4
     75a:	fec59ae3          	bne	a1,a2,74e <handle_reset+0x4e>
     75e:	e000f7b7          	lui	a5,0xe000f
     762:	4705                	li	a4,1
     764:	c398                	sw	a4,0(a5)
     766:	6785                	lui	a5,0x1
     768:	f3878793          	addi	a5,a5,-200 # f38 <main>
     76c:	34179073          	csrw	mepc,a5
     770:	30200073          	mret

00000774 <ADC1_IRQHandler>:
     774:	a001                	j	774 <ADC1_IRQHandler>

00000776 <NMI_Handler>:
     776:	40021737          	lui	a4,0x40021
     77a:	471c                	lw	a5,8(a4)
     77c:	008006b7          	lui	a3,0x800
     780:	8fd5                	or	a5,a5,a3
     782:	c71c                	sw	a5,8(a4)

00000784 <strlen>:
     784:	87aa                	mv	a5,a0
     786:	0007c703          	lbu	a4,0(a5)
     78a:	e701                	bnez	a4,792 <strlen+0xe>
     78c:	40a78533          	sub	a0,a5,a0
     790:	8082                	ret
     792:	0785                	addi	a5,a5,1
     794:	bfcd                	j	786 <strlen+0x2>

00000796 <mini_vpprintf>:
     796:	fa410113          	addi	sp,sp,-92
     79a:	caa2                	sw	s0,84(sp)
     79c:	c8a6                	sw	s1,80(sp)
     79e:	cc86                	sw	ra,88(sp)
     7a0:	c02a                	sw	a0,0(sp)
     7a2:	c22e                	sw	a1,4(sp)
     7a4:	8432                	mv	s0,a2
     7a6:	84b6                	mv	s1,a3
     7a8:	e509                	bnez	a0,7b2 <mini_vpprintf+0x1c>
     7aa:	13600793          	li	a5,310
     7ae:	c202                	sw	zero,4(sp)
     7b0:	c03e                	sw	a5,0(sp)
     7b2:	ca02                	sw	zero,20(sp)
     7b4:	00044783          	lbu	a5,0(s0)
     7b8:	00140713          	addi	a4,s0,1
     7bc:	00f10fa3          	sb	a5,31(sp)
     7c0:	eb81                	bnez	a5,7d0 <mini_vpprintf+0x3a>
     7c2:	40e6                	lw	ra,88(sp)
     7c4:	4456                	lw	s0,84(sp)
     7c6:	4552                	lw	a0,20(sp)
     7c8:	44c6                	lw	s1,80(sp)
     7ca:	05c10113          	addi	sp,sp,92
     7ce:	8082                	ret
     7d0:	c63a                	sw	a4,12(sp)
     7d2:	02500693          	li	a3,37
     7d6:	02d78063          	beq	a5,a3,7f6 <mini_vpprintf+0x60>
     7da:	4612                	lw	a2,4(sp)
     7dc:	4782                	lw	a5,0(sp)
     7de:	4585                	li	a1,1
     7e0:	01f10513          	addi	a0,sp,31
     7e4:	9782                	jalr	a5
     7e6:	4732                	lw	a4,12(sp)
     7e8:	c426                	sw	s1,8(sp)
     7ea:	843a                	mv	s0,a4
     7ec:	47d2                	lw	a5,20(sp)
     7ee:	44a2                	lw	s1,8(sp)
     7f0:	97aa                	add	a5,a5,a0
     7f2:	ca3e                	sw	a5,20(sp)
     7f4:	b7c1                	j	7b4 <mini_vpprintf+0x1e>
     7f6:	00144783          	lbu	a5,1(s0)
     7fa:	03000693          	li	a3,48
     7fe:	00240713          	addi	a4,s0,2
     802:	00f10fa3          	sb	a5,31(sp)
     806:	c63e                	sw	a5,12(sp)
     808:	08d79363          	bne	a5,a3,88e <mini_vpprintf+0xf8>
     80c:	843a                	mv	s0,a4
     80e:	4681                	li	a3,0
     810:	4701                	li	a4,0
     812:	45a5                	li	a1,9
     814:	a819                	j	82a <mini_vpprintf+0x94>
     816:	00271793          	slli	a5,a4,0x2
     81a:	97ba                	add	a5,a5,a4
     81c:	0786                	slli	a5,a5,0x1
     81e:	0405                	addi	s0,s0,1
     820:	00f60733          	add	a4,a2,a5
     824:	fff44783          	lbu	a5,-1(s0)
     828:	4685                	li	a3,1
     82a:	fd078613          	addi	a2,a5,-48
     82e:	0ff67513          	zext.b	a0,a2
     832:	fea5f2e3          	bgeu	a1,a0,816 <mini_vpprintf+0x80>
     836:	c299                	beqz	a3,83c <mini_vpprintf+0xa6>
     838:	00f10fa3          	sb	a5,31(sp)
     83c:	c83a                	sw	a4,16(sp)
     83e:	46e1                	li	a3,24
     840:	00e6d363          	bge	a3,a4,846 <mini_vpprintf+0xb0>
     844:	c836                	sw	a3,16(sp)
     846:	06c00613          	li	a2,108
     84a:	4681                	li	a3,0
     84c:	00c79863          	bne	a5,a2,85c <mini_vpprintf+0xc6>
     850:	00044783          	lbu	a5,0(s0)
     854:	4685                	li	a3,1
     856:	0405                	addi	s0,s0,1
     858:	00f10fa3          	sb	a5,31(sp)
     85c:	01f14603          	lbu	a2,31(sp)
     860:	06400793          	li	a5,100
     864:	06f60563          	beq	a2,a5,8ce <mini_vpprintf+0x138>
     868:	02c7e763          	bltu	a5,a2,896 <mini_vpprintf+0x100>
     86c:	05800793          	li	a5,88
     870:	0af60063          	beq	a2,a5,910 <mini_vpprintf+0x17a>
     874:	06300793          	li	a5,99
     878:	0af60d63          	beq	a2,a5,932 <mini_vpprintf+0x19c>
     87c:	d239                	beqz	a2,7c2 <mini_vpprintf+0x2c>
     87e:	4612                	lw	a2,4(sp)
     880:	4782                	lw	a5,0(sp)
     882:	4585                	li	a1,1
     884:	01f10513          	addi	a0,sp,31
     888:	9782                	jalr	a5
     88a:	c426                	sw	s1,8(sp)
     88c:	b785                	j	7ec <mini_vpprintf+0x56>
     88e:	02000693          	li	a3,32
     892:	c636                	sw	a3,12(sp)
     894:	bfa5                	j	80c <mini_vpprintf+0x76>
     896:	07500793          	li	a5,117
     89a:	02f60a63          	beq	a2,a5,8ce <mini_vpprintf+0x138>
     89e:	07800793          	li	a5,120
     8a2:	06f60763          	beq	a2,a5,910 <mini_vpprintf+0x17a>
     8a6:	07300793          	li	a5,115
     8aa:	fcf61ae3          	bne	a2,a5,87e <mini_vpprintf+0xe8>
     8ae:	00448793          	addi	a5,s1,4
     8b2:	4084                	lw	s1,0(s1)
     8b4:	cc3a                	sw	a4,24(sp)
     8b6:	c43e                	sw	a5,8(sp)
     8b8:	8526                	mv	a0,s1
     8ba:	35e9                	jal	784 <strlen>
     8bc:	4762                	lw	a4,24(sp)
     8be:	85aa                	mv	a1,a0
     8c0:	08e05663          	blez	a4,94c <mini_vpprintf+0x1b6>
     8c4:	46c2                	lw	a3,16(sp)
     8c6:	4632                	lw	a2,12(sp)
     8c8:	1838                	addi	a4,sp,56
     8ca:	8526                	mv	a0,s1
     8cc:	a01d                	j	8f2 <mini_vpprintf+0x15c>
     8ce:	00448793          	addi	a5,s1,4
     8d2:	c43e                	sw	a5,8(sp)
     8d4:	c695                	beqz	a3,900 <mini_vpprintf+0x16a>
     8d6:	f8b60613          	addi	a2,a2,-117
     8da:	1018                	addi	a4,sp,32
     8dc:	00163693          	seqz	a3,a2
     8e0:	4088                	lw	a0,0(s1)
     8e2:	4601                	li	a2,0
     8e4:	45a9                	li	a1,10
     8e6:	3235                	jal	212 <mini_itoa.part.0>
     8e8:	46c2                	lw	a3,16(sp)
     8ea:	4632                	lw	a2,12(sp)
     8ec:	1838                	addi	a4,sp,56
     8ee:	85aa                	mv	a1,a0
     8f0:	1008                	addi	a0,sp,32
     8f2:	3051                	jal	176 <mini_pad>
     8f4:	4612                	lw	a2,4(sp)
     8f6:	85aa                	mv	a1,a0
     8f8:	1828                	addi	a0,sp,56
     8fa:	4782                	lw	a5,0(sp)
     8fc:	9782                	jalr	a5
     8fe:	b5fd                	j	7ec <mini_vpprintf+0x56>
     900:	07500793          	li	a5,117
     904:	1018                	addi	a4,sp,32
     906:	4685                	li	a3,1
     908:	fcf60ce3          	beq	a2,a5,8e0 <mini_vpprintf+0x14a>
     90c:	4681                	li	a3,0
     90e:	bfc9                	j	8e0 <mini_vpprintf+0x14a>
     910:	4088                	lw	a0,0(s1)
     912:	fa860613          	addi	a2,a2,-88
     916:	00448793          	addi	a5,s1,4
     91a:	1018                	addi	a4,sp,32
     91c:	4685                	li	a3,1
     91e:	00163613          	seqz	a2,a2
     922:	45c1                	li	a1,16
     924:	c43e                	sw	a5,8(sp)
     926:	30f5                	jal	212 <mini_itoa.part.0>
     928:	46c2                	lw	a3,16(sp)
     92a:	4632                	lw	a2,12(sp)
     92c:	85aa                	mv	a1,a0
     92e:	1838                	addi	a4,sp,56
     930:	b7c1                	j	8f0 <mini_vpprintf+0x15a>
     932:	00448793          	addi	a5,s1,4
     936:	c43e                	sw	a5,8(sp)
     938:	409c                	lw	a5,0(s1)
     93a:	46c2                	lw	a3,16(sp)
     93c:	4632                	lw	a2,12(sp)
     93e:	00f10fa3          	sb	a5,31(sp)
     942:	1838                	addi	a4,sp,56
     944:	4585                	li	a1,1
     946:	01f10513          	addi	a0,sp,31
     94a:	b765                	j	8f2 <mini_vpprintf+0x15c>
     94c:	4612                	lw	a2,4(sp)
     94e:	8526                	mv	a0,s1
     950:	b76d                	j	8fa <mini_vpprintf+0x164>

00000952 <printf>:
     952:	1111                	addi	sp,sp,-28
     954:	c632                	sw	a2,12(sp)
     956:	862a                	mv	a2,a0
     958:	c42e                	sw	a1,8(sp)
     95a:	c836                	sw	a3,16(sp)
     95c:	4581                	li	a1,0
     95e:	0034                	addi	a3,sp,8
     960:	6ec00513          	li	a0,1772
     964:	c206                	sw	ra,4(sp)
     966:	ca3a                	sw	a4,20(sp)
     968:	cc3e                	sw	a5,24(sp)
     96a:	c036                	sw	a3,0(sp)
     96c:	352d                	jal	796 <mini_vpprintf>
     96e:	4092                	lw	ra,4(sp)
     970:	0171                	addi	sp,sp,28
     972:	8082                	ret

00000974 <ssd1306_i2c_error.isra.0>:
 * error handler
 */
uint8_t ssd1306_i2c_error(uint8_t err)
{
	// report error
	printf("ssd1306_i2c_error - timeout waiting for %s\n\r", errstr[err]);
     974:	6785                	lui	a5,0x1
     976:	050a                	slli	a0,a0,0x2
     978:	36078793          	addi	a5,a5,864 # 1360 <errstr>
     97c:	97aa                	add	a5,a5,a0
     97e:	438c                	lw	a1,0(a5)
     980:	6505                	lui	a0,0x1
uint8_t ssd1306_i2c_error(uint8_t err)
     982:	1171                	addi	sp,sp,-4
	printf("ssd1306_i2c_error - timeout waiting for %s\n\r", errstr[err]);
     984:	2d450513          	addi	a0,a0,724 # 12d4 <main+0x39c>
uint8_t ssd1306_i2c_error(uint8_t err)
     988:	c006                	sw	ra,0(sp)
	printf("ssd1306_i2c_error - timeout waiting for %s\n\r", errstr[err]);
     98a:	37e1                	jal	952 <printf>
	
	// reset & initialize I2C
	ssd1306_i2c_setup();

	return 1;
}
     98c:	4082                	lw	ra,0(sp)
     98e:	0111                	addi	sp,sp,4
	ssd1306_i2c_setup();
     990:	b289                	j	2d2 <ssd1306_i2c_setup>

00000992 <ssd1306_i2c_send.constprop.0.isra.0>:
uint8_t ssd1306_i2c_send(uint8_t addr, uint8_t *data, uint8_t sz)
{
	int32_t timeout;
	
	// wait for not busy
	timeout = TIMEOUT_MAX;
     992:	6761                	lui	a4,0x18
	while((I2C1->STAR2 & I2C_STAR2_BUSY) && (timeout--));
     994:	400057b7          	lui	a5,0x40005
	timeout = TIMEOUT_MAX;
     998:	6a070713          	addi	a4,a4,1696 # 186a0 <main.c.ca7a85b7+0x15c1b>
	while((I2C1->STAR2 & I2C_STAR2_BUSY) && (timeout--));
     99c:	40078793          	addi	a5,a5,1024 # 40005400 <__global_pointer$+0x20004c00>
     9a0:	567d                	li	a2,-1
     9a2:	0187d683          	lhu	a3,24(a5)
     9a6:	8a89                	andi	a3,a3,2
     9a8:	cedd                	beqz	a3,a66 <ssd1306_i2c_send.constprop.0.isra.0+0xd4>
     9aa:	177d                	addi	a4,a4,-1
     9ac:	fec71be3          	bne	a4,a2,9a2 <ssd1306_i2c_send.constprop.0.isra.0+0x10>
	if(timeout==-1)
		return ssd1306_i2c_error(0);
     9b0:	4501                	li	a0,0
     9b2:	a821                	j	9ca <ssd1306_i2c_send.constprop.0.isra.0+0x38>
     9b4:	67e1                	lui	a5,0x18
     9b6:	6a178793          	addi	a5,a5,1697 # 186a1 <main.c.ca7a85b7+0x15c1c>
	// send data one byte at a time
	while(sz--)
	{
		// wait for TX Empty
		timeout = TIMEOUT_MAX;
		while(!(I2C1->STAR1 & I2C_STAR1_TXE) && (timeout--));
     9ba:	01475683          	lhu	a3,20(a4)
     9be:	0806f693          	andi	a3,a3,128
     9c2:	e689                	bnez	a3,9cc <ssd1306_i2c_send.constprop.0.isra.0+0x3a>
     9c4:	17fd                	addi	a5,a5,-1
     9c6:	fbf5                	bnez	a5,9ba <ssd1306_i2c_send.constprop.0.isra.0+0x28>
		if(timeout==-1)
			return ssd1306_i2c_error(3);
     9c8:	450d                	li	a0,3
		return ssd1306_i2c_error(0);
     9ca:	b76d                	j	974 <ssd1306_i2c_error.isra.0>
		
		// send command
		I2C1->DATAR = *data++;
     9cc:	00054783          	lbu	a5,0(a0)
     9d0:	0505                	addi	a0,a0,1
     9d2:	00f71823          	sh	a5,16(a4)
	while(sz--)
     9d6:	fcb51fe3          	bne	a0,a1,9b4 <ssd1306_i2c_send.constprop.0.isra.0+0x22>
	}

	// wait for tx complete
	timeout = TIMEOUT_MAX;
     9da:	66e1                	lui	a3,0x18
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
     9dc:	40005737          	lui	a4,0x40005
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_BYTE_TRANSMITTED)) && (timeout--));
     9e0:	00070637          	lui	a2,0x70
	timeout = TIMEOUT_MAX;
     9e4:	6a068693          	addi	a3,a3,1696 # 186a0 <main.c.ca7a85b7+0x15c1b>
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
     9e8:	40070713          	addi	a4,a4,1024 # 40005400 <__global_pointer$+0x20004c00>
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_BYTE_TRANSMITTED)) && (timeout--));
     9ec:	08460613          	addi	a2,a2,132 # 70084 <main.c.ca7a85b7+0x6d5ff>
     9f0:	55fd                	li	a1,-1
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
     9f2:	01475503          	lhu	a0,20(a4)
     9f6:	01875783          	lhu	a5,24(a4)
     9fa:	07c2                	slli	a5,a5,0x10
     9fc:	8fc9                	or	a5,a5,a0
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_BYTE_TRANSMITTED)) && (timeout--));
     9fe:	8ff1                	and	a5,a5,a2
     a00:	00c78763          	beq	a5,a2,a0e <ssd1306_i2c_send.constprop.0.isra.0+0x7c>
     a04:	16fd                	addi	a3,a3,-1
     a06:	feb696e3          	bne	a3,a1,9f2 <ssd1306_i2c_send.constprop.0.isra.0+0x60>
	if(timeout==-1)
		return ssd1306_i2c_error(4);
     a0a:	4511                	li	a0,4
     a0c:	bf7d                	j	9ca <ssd1306_i2c_send.constprop.0.isra.0+0x38>

	// set STOP condition
	I2C1->CTLR1 |= I2C_CTLR1_STOP;
     a0e:	00075783          	lhu	a5,0(a4)
     a12:	2007e793          	ori	a5,a5,512
     a16:	00f71023          	sh	a5,0(a4)
	
	// we're happy
	return 0;
}
     a1a:	8082                	ret
		while(!(I2C1->STAR1 & I2C_STAR1_TXE) && (timeout--));
     a1c:	40005737          	lui	a4,0x40005
     a20:	95aa                	add	a1,a1,a0
     a22:	40070713          	addi	a4,a4,1024 # 40005400 <__global_pointer$+0x20004c00>
     a26:	bf45                	j	9d6 <ssd1306_i2c_send.constprop.0.isra.0+0x44>
	I2C1->DATAR = addr<<1;
     a28:	07800793          	li	a5,120
     a2c:	00f71823          	sh	a5,16(a4)
	timeout = TIMEOUT_MAX;
     a30:	6661                	lui	a2,0x18
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
     a32:	400056b7          	lui	a3,0x40005
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_TRANSMITTER_MODE_SELECTED)) && (timeout--));
     a36:	00070737          	lui	a4,0x70
	timeout = TIMEOUT_MAX;
     a3a:	6a060613          	addi	a2,a2,1696 # 186a0 <main.c.ca7a85b7+0x15c1b>
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
     a3e:	40068693          	addi	a3,a3,1024 # 40005400 <__global_pointer$+0x20004c00>
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_TRANSMITTER_MODE_SELECTED)) && (timeout--));
     a42:	08270713          	addi	a4,a4,130 # 70082 <main.c.ca7a85b7+0x6d5fd>
     a46:	537d                	li	t1,-1
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
     a48:	0146d283          	lhu	t0,20(a3)
     a4c:	0186d783          	lhu	a5,24(a3)
     a50:	07c2                	slli	a5,a5,0x10
     a52:	0057e7b3          	or	a5,a5,t0
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_TRANSMITTER_MODE_SELECTED)) && (timeout--));
     a56:	8ff9                	and	a5,a5,a4
     a58:	fce782e3          	beq	a5,a4,a1c <ssd1306_i2c_send.constprop.0.isra.0+0x8a>
     a5c:	167d                	addi	a2,a2,-1
     a5e:	fe6615e3          	bne	a2,t1,a48 <ssd1306_i2c_send.constprop.0.isra.0+0xb6>
		return ssd1306_i2c_error(2);
     a62:	4509                	li	a0,2
     a64:	b79d                	j	9ca <ssd1306_i2c_send.constprop.0.isra.0+0x38>
	I2C1->CTLR1 |= I2C_CTLR1_START;
     a66:	0007d703          	lhu	a4,0(a5)
	timeout = TIMEOUT_MAX;
     a6a:	66e1                	lui	a3,0x18
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_MODE_SELECT)) && (timeout--));
     a6c:	00030637          	lui	a2,0x30
	I2C1->CTLR1 |= I2C_CTLR1_START;
     a70:	10076713          	ori	a4,a4,256
     a74:	00e79023          	sh	a4,0(a5)
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
     a78:	40005737          	lui	a4,0x40005
	timeout = TIMEOUT_MAX;
     a7c:	6a068693          	addi	a3,a3,1696 # 186a0 <main.c.ca7a85b7+0x15c1b>
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
     a80:	40070713          	addi	a4,a4,1024 # 40005400 <__global_pointer$+0x20004c00>
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_MODE_SELECT)) && (timeout--));
     a84:	0605                	addi	a2,a2,1 # 30001 <main.c.ca7a85b7+0x2d57c>
     a86:	537d                	li	t1,-1
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
     a88:	01475283          	lhu	t0,20(a4)
     a8c:	01875783          	lhu	a5,24(a4)
     a90:	07c2                	slli	a5,a5,0x10
     a92:	0057e7b3          	or	a5,a5,t0
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_MODE_SELECT)) && (timeout--));
     a96:	8ff1                	and	a5,a5,a2
     a98:	f8c788e3          	beq	a5,a2,a28 <ssd1306_i2c_send.constprop.0.isra.0+0x96>
     a9c:	16fd                	addi	a3,a3,-1
     a9e:	fe6695e3          	bne	a3,t1,a88 <ssd1306_i2c_send.constprop.0.isra.0+0xf6>
		return ssd1306_i2c_error(1);
     aa2:	4505                	li	a0,1
     aa4:	b71d                	j	9ca <ssd1306_i2c_send.constprop.0.isra.0+0x38>

00000aa6 <ssd1306_cmd.isra.0>:
uint8_t ssd1306_cmd(uint8_t cmd)
     aa6:	fd810113          	addi	sp,sp,-40
	
	/* build command or data packets */
	if(cmd)
	{
		pkt[0] = 0;
		pkt[1] = *data;
     aaa:	00a100a3          	sb	a0,1(sp)
	else
	{
		pkt[0] = 0x40;
		memcpy(&pkt[1], data, sz);
	}
	return ssd1306_i2c_send(SSD1306_I2C_ADDR, pkt, sz+1);
     aae:	4589                	li	a1,2
     ab0:	850a                	mv	a0,sp
     ab2:	d206                	sw	ra,36(sp)
		pkt[0] = 0;
     ab4:	00010023          	sb	zero,0(sp)
	return ssd1306_i2c_send(SSD1306_I2C_ADDR, pkt, sz+1);
     ab8:	3de9                	jal	992 <ssd1306_i2c_send.constprop.0.isra.0>
}
     aba:	5092                	lw	ra,36(sp)
     abc:	02810113          	addi	sp,sp,40
     ac0:	8082                	ret

00000ac2 <memset>:
     ac2:	962a                	add	a2,a2,a0
     ac4:	87aa                	mv	a5,a0
     ac6:	00c79363          	bne	a5,a2,acc <memset+0xa>
     aca:	8082                	ret
     acc:	00b78023          	sb	a1,0(a5)
     ad0:	0785                	addi	a5,a5,1
     ad2:	bfd5                	j	ac6 <memset+0x4>

00000ad4 <ssd1306_setbuf.constprop.0>:
	memset(ssd1306_buffer, color ? 0xFF : 0x00, sizeof(ssd1306_buffer));
     ad4:	20000537          	lui	a0,0x20000
     ad8:	40000613          	li	a2,1024
     adc:	4581                	li	a1,0
     ade:	02050513          	addi	a0,a0,32 # 20000020 <ssd1306_buffer>
     ae2:	b7c5                	j	ac2 <memset>

00000ae4 <memcpy>:
     ae4:	4781                	li	a5,0
     ae6:	00f61363          	bne	a2,a5,aec <memcpy+0x8>
     aea:	8082                	ret
     aec:	00f58733          	add	a4,a1,a5
     af0:	00074683          	lbu	a3,0(a4)
     af4:	00f50733          	add	a4,a0,a5
     af8:	0785                	addi	a5,a5,1
     afa:	00d70023          	sb	a3,0(a4)
     afe:	b7e5                	j	ae6 <memcpy+0x2>

00000b00 <ssd1306_refresh>:
{
     b00:	7179                	addi	sp,sp,-48
	ssd1306_cmd(SSD1306_COLUMNADDR);
     b02:	02100513          	li	a0,33
{
     b06:	d606                	sw	ra,44(sp)
     b08:	d422                	sw	s0,40(sp)
     b0a:	d226                	sw	s1,36(sp)
	ssd1306_cmd(SSD1306_COLUMNADDR);
     b0c:	3f69                	jal	aa6 <ssd1306_cmd.isra.0>
	ssd1306_cmd(SSD1306_OFFSET);   // Column start address (0 = reset)
     b0e:	4501                	li	a0,0
     b10:	3f59                	jal	aa6 <ssd1306_cmd.isra.0>
	ssd1306_cmd(SSD1306_OFFSET+SSD1306_W-1); // Column end address (127 = reset)
     b12:	07f00513          	li	a0,127
     b16:	3f41                	jal	aa6 <ssd1306_cmd.isra.0>
	ssd1306_cmd(SSD1306_PAGEADDR);
     b18:	02200513          	li	a0,34
     b1c:	3769                	jal	aa6 <ssd1306_cmd.isra.0>
	ssd1306_cmd(0); // Page start address (0 = reset)
     b1e:	4501                	li	a0,0
     b20:	3759                	jal	aa6 <ssd1306_cmd.isra.0>
	ssd1306_cmd(7); // Page end address
     b22:	20000437          	lui	s0,0x20000
     b26:	451d                	li	a0,7
     b28:	02040413          	addi	s0,s0,32 # 20000020 <ssd1306_buffer>
     b2c:	3fad                	jal	aa6 <ssd1306_cmd.isra.0>
    for(i=0;i<sizeof(ssd1306_buffer);i+=SSD1306_PSZ)
     b2e:	40040493          	addi	s1,s0,1024
		pkt[0] = 0x40;
     b32:	04000793          	li	a5,64
		memcpy(&pkt[1], data, sz);
     b36:	85a2                	mv	a1,s0
     b38:	02000613          	li	a2,32
     b3c:	00110513          	addi	a0,sp,1
		pkt[0] = 0x40;
     b40:	00f10023          	sb	a5,0(sp)
		memcpy(&pkt[1], data, sz);
     b44:	3745                	jal	ae4 <memcpy>
	return ssd1306_i2c_send(SSD1306_I2C_ADDR, pkt, sz+1);
     b46:	02100593          	li	a1,33
     b4a:	850a                	mv	a0,sp
     b4c:	02040413          	addi	s0,s0,32
     b50:	3589                	jal	992 <ssd1306_i2c_send.constprop.0.isra.0>
     b52:	fe9410e3          	bne	s0,s1,b32 <ssd1306_refresh+0x32>
}
     b56:	50b2                	lw	ra,44(sp)
     b58:	5422                	lw	s0,40(sp)
     b5a:	5492                	lw	s1,36(sp)
     b5c:	6145                	addi	sp,sp,48
     b5e:	8082                	ret

00000b60 <opening>:

    GPIO_pinMode(BTN_PIN, GPIO_pinMode_I_pullUp, GPIO_Speed_10MHz);
}

void opening()
{
     b60:	d2010113          	addi	sp,sp,-736
     b64:	2c812c23          	sw	s0,728(sp)
     b68:	2c112e23          	sw	ra,732(sp)
     b6c:	2c912a23          	sw	s1,724(sp)
    bool button_state = false;
    int c = 0;

    for (int i = 0; i < 38; i+=1) {
     b70:	4401                	li	s0,0
      ssd1306_setbuf(0);
     b72:	378d                	jal	ad4 <ssd1306_setbuf.constprop.0>
			ssd1306_drawstr_sz(i,20, "MOPPING", 1, fontsize_8x8);
     b74:	6485                	lui	s1,0x1
     b76:	0ff47513          	zext.b	a0,s0
     b7a:	4685                	li	a3,1
     b7c:	30448613          	addi	a2,s1,772 # 1304 <main+0x3cc>
     b80:	45d1                	li	a1,20
     b82:	829ff0ef          	jal	3aa <ssd1306_drawstr_sz.constprop.0>
      ssd1306_refresh();
     b86:	3fad                	jal	b00 <ssd1306_refresh>
      Delay_Ms(10);
     b88:	653d                	lui	a0,0xf
     b8a:	a6050513          	addi	a0,a0,-1440 # ea60 <main.c.ca7a85b7+0xbfdb>
     b8e:	e72ff0ef          	jal	200 <DelaySysTick>
    for (int i = 0; i < 38; i+=1) {
     b92:	0405                	addi	s0,s0,1
     b94:	02600793          	li	a5,38
     b98:	fcf41de3          	bne	s0,a5,b72 <opening+0x12>
    int c = 0;
     b9c:	4401                	li	s0,0
    bool button_state = false;
     b9e:	c002                	sw	zero,0(sp)
    }
    
    while (1) {
      ssd1306_setbuf(0);
     ba0:	3f15                	jal	ad4 <ssd1306_setbuf.constprop.0>

			ssd1306_drawstr_sz(38,20, "MOPPING", 1, fontsize_8x8);
     ba2:	4685                	li	a3,1
     ba4:	30448613          	addi	a2,s1,772
     ba8:	45d1                	li	a1,20
     baa:	02600513          	li	a0,38
     bae:	ffcff0ef          	jal	3aa <ssd1306_drawstr_sz.constprop.0>

      if (c > 50) {
     bb2:	03200793          	li	a5,50
     bb6:	6605                	lui	a2,0x1
			  ssd1306_drawstr_sz(45,45, "start", 1, fontsize_8x8);
     bb8:	4685                	li	a3,1
      if (c > 50) {
     bba:	0087c363          	blt	a5,s0,bc0 <opening+0x60>
        // ssd1306_drawRect(50, 50, 40, 10, 0);
      } else {
			  ssd1306_drawstr_sz(45,45, "start", 0, fontsize_8x8);
     bbe:	4681                	li	a3,0
     bc0:	02d00593          	li	a1,45
     bc4:	30c60613          	addi	a2,a2,780 # 130c <main+0x3d4>
     bc8:	852e                	mv	a0,a1
     bca:	fe0ff0ef          	jal	3aa <ssd1306_drawstr_sz.constprop.0>
        // ssd1306_drawRect(50, 50, 40, 10, 1);
      }

      ssd1306_refresh();
     bce:	3f0d                	jal	b00 <ssd1306_refresh>

      uint8_t button_is_pressed = !GPIO_digitalRead(BTN_PIN);
     bd0:	400117b7          	lui	a5,0x40011
     bd4:	40078793          	addi	a5,a5,1024 # 40011400 <__global_pointer$+0x20010c00>
     bd8:	479c                	lw	a5,8(a5)
      
      // ボタンを押して離した後にゲームに移る
      if (button_state && !button_is_pressed){
     bda:	4702                	lw	a4,0(sp)
     bdc:	8b89                	andi	a5,a5,2
     bde:	c311                	beqz	a4,be2 <opening+0x82>
     be0:	eb99                	bnez	a5,bf6 <opening+0x96>
        break;
      }
      button_state = button_is_pressed;
     be2:	0017b793          	seqz	a5,a5
     be6:	c03e                	sw	a5,0(sp)
      
      c ++;      
     be8:	0405                	addi	s0,s0,1
      if (c > 100) {
     bea:	06500793          	li	a5,101
     bee:	faf419e3          	bne	s0,a5,ba0 <opening+0x40>
        c = 0;
     bf2:	4401                	li	s0,0
     bf4:	b775                	j	ba0 <opening+0x40>
    }
   
    int kuina_x = -130;
    int kuina_y = 0;
    int kuina_num = 20;
    character kuinas[20] = {
     bf6:	f7e00793          	li	a5,-130
     bfa:	f8800593          	li	a1,-120
     bfe:	f9200513          	li	a0,-110
     c02:	f9c00313          	li	t1,-100
     c06:	6689                	lui	a3,0x2
     c08:	6709                	lui	a4,0x2
     c0a:	bf070713          	addi	a4,a4,-1040 # 1bf0 <kuina_2>
     c0e:	c1068693          	addi	a3,a3,-1008 # 1c10 <kuina_1>
     c12:	4605                	li	a2,1
     c14:	43f9                	li	t2,30
     c16:	cc3e                	sw	a5,24(sp)
     c18:	de2e                	sw	a1,60(sp)
     c1a:	47c1                	li	a5,16
     c1c:	03200593          	li	a1,50
     c20:	d0aa                	sw	a0,96(sp)
     c22:	c31a                	sw	t1,132(sp)
     c24:	4529                	li	a0,10
     c26:	fa600313          	li	t1,-90
     c2a:	c83a                	sw	a4,16(sp)
     c2c:	da3a                	sw	a4,52(sp)
     c2e:	ccba                	sw	a4,88(sp)
     c30:	deba                	sw	a4,124(sp)
     c32:	d13a                	sw	a4,160(sp)
     c34:	d51a                	sw	t1,168(sp)
     c36:	c636                	sw	a3,12(sp)
     c38:	fb000313          	li	t1,-80
     c3c:	ca32                	sw	a2,20(sp)
     c3e:	ce02                	sw	zero,28(sp)
     c40:	d03e                	sw	a5,32(sp)
     c42:	d23e                	sw	a5,36(sp)
     c44:	d836                	sw	a3,48(sp)
     c46:	dc32                	sw	a2,56(sp)
     c48:	c0ae                	sw	a1,64(sp)
     c4a:	c2be                	sw	a5,68(sp)
     c4c:	c4be                	sw	a5,72(sp)
     c4e:	cab6                	sw	a3,84(sp)
     c50:	ceb2                	sw	a2,92(sp)
     c52:	d2aa                	sw	a0,100(sp)
     c54:	d4be                	sw	a5,104(sp)
     c56:	d6be                	sw	a5,108(sp)
     c58:	dcb6                	sw	a3,120(sp)
     c5a:	c132                	sw	a2,128(sp)
     c5c:	c51e                	sw	t2,136(sp)
     c5e:	c73e                	sw	a5,140(sp)
     c60:	c93e                	sw	a5,144(sp)
     c62:	cf36                	sw	a3,156(sp)
     c64:	d332                	sw	a2,164(sp)
     c66:	d702                	sw	zero,172(sp)
     c68:	c79a                	sw	t1,204(sp)
     c6a:	fba00313          	li	t1,-70
     c6e:	d99a                	sw	t1,240(sp)
     c70:	fc400313          	li	t1,-60
     c74:	42d1                	li	t0,20
     c76:	10612a23          	sw	t1,276(sp)
     c7a:	fce00493          	li	s1,-50
     c7e:	02800313          	li	t1,40
     c82:	c3ba                	sw	a4,196(sp)
     c84:	d5ba                	sw	a4,232(sp)
     c86:	10e12623          	sw	a4,268(sp)
     c8a:	12e12823          	sw	a4,304(sp)
     c8e:	12912c23          	sw	s1,312(sp)
     c92:	14e12a23          	sw	a4,340(sp)
     c96:	fd800493          	li	s1,-40
     c9a:	d93e                	sw	a5,176(sp)
     c9c:	db3e                	sw	a5,180(sp)
     c9e:	c1b6                	sw	a3,192(sp)
     ca0:	c5b2                	sw	a2,200(sp)
     ca2:	c9ae                	sw	a1,208(sp)
     ca4:	cbbe                	sw	a5,212(sp)
     ca6:	cdbe                	sw	a5,216(sp)
     ca8:	d3b6                	sw	a3,228(sp)
     caa:	d7b2                	sw	a2,236(sp)
     cac:	db96                	sw	t0,244(sp)
     cae:	ddbe                	sw	a5,248(sp)
     cb0:	dfbe                	sw	a5,252(sp)
     cb2:	10d12423          	sw	a3,264(sp)
     cb6:	10c12823          	sw	a2,272(sp)
     cba:	10612c23          	sw	t1,280(sp)
     cbe:	10f12e23          	sw	a5,284(sp)
     cc2:	12f12023          	sw	a5,288(sp)
     cc6:	12d12623          	sw	a3,300(sp)
     cca:	12c12a23          	sw	a2,308(sp)
     cce:	12a12e23          	sw	a0,316(sp)
     cd2:	14f12023          	sw	a5,320(sp)
     cd6:	14f12223          	sw	a5,324(sp)
     cda:	14d12823          	sw	a3,336(sp)
     cde:	14c12c23          	sw	a2,344(sp)
     ce2:	14912e23          	sw	s1,348(sp)
     ce6:	5489                	li	s1,-30
     ce8:	18912023          	sw	s1,384(sp)
     cec:	54b1                	li	s1,-20
     cee:	1a912223          	sw	s1,420(sp)
     cf2:	54d9                	li	s1,-10
     cf4:	16e12c23          	sw	a4,376(sp)
     cf8:	18e12e23          	sw	a4,412(sp)
     cfc:	1ce12023          	sw	a4,448(sp)
     d00:	1ee12223          	sw	a4,484(sp)
     d04:	16b12023          	sw	a1,352(sp)
     d08:	16f12223          	sw	a5,356(sp)
     d0c:	16f12423          	sw	a5,360(sp)
     d10:	16d12a23          	sw	a3,372(sp)
     d14:	16c12e23          	sw	a2,380(sp)
     d18:	18012223          	sw	zero,388(sp)
     d1c:	18f12423          	sw	a5,392(sp)
     d20:	18f12623          	sw	a5,396(sp)
     d24:	18d12c23          	sw	a3,408(sp)
     d28:	1ac12023          	sw	a2,416(sp)
     d2c:	1ab12423          	sw	a1,424(sp)
     d30:	1af12623          	sw	a5,428(sp)
     d34:	1af12823          	sw	a5,432(sp)
     d38:	1ad12e23          	sw	a3,444(sp)
     d3c:	1cc12223          	sw	a2,452(sp)
     d40:	1c912423          	sw	s1,456(sp)
     d44:	1ca12623          	sw	a0,460(sp)
     d48:	1cf12823          	sw	a5,464(sp)
     d4c:	1cf12a23          	sw	a5,468(sp)
     d50:	1ed12023          	sw	a3,480(sp)
     d54:	1ec12423          	sw	a2,488(sp)
     d58:	1e012623          	sw	zero,492(sp)
     d5c:	1e712823          	sw	t2,496(sp)
     d60:	1ef12a23          	sw	a5,500(sp)
     d64:	1ef12c23          	sw	a5,504(sp)
     d68:	20d12223          	sw	a3,516(sp)
     d6c:	20e12423          	sw	a4,520(sp)
     d70:	22e12623          	sw	a4,556(sp)
     d74:	24e12823          	sw	a4,592(sp)
     d78:	26e12a23          	sw	a4,628(sp)
     d7c:	28e12c23          	sw	a4,664(sp)
     d80:	20c12623          	sw	a2,524(sp)
     d84:	20a12823          	sw	a0,528(sp)
     d88:	20012a23          	sw	zero,532(sp)
     d8c:	20f12c23          	sw	a5,536(sp)
     d90:	20f12e23          	sw	a5,540(sp)
     d94:	22d12423          	sw	a3,552(sp)
     d98:	22c12823          	sw	a2,560(sp)
     d9c:	22512a23          	sw	t0,564(sp)
     da0:	22b12c23          	sw	a1,568(sp)
     da4:	22f12e23          	sw	a5,572(sp)
     da8:	24f12023          	sw	a5,576(sp)
     dac:	24d12623          	sw	a3,588(sp)
     db0:	24c12a23          	sw	a2,596(sp)
     db4:	24712c23          	sw	t2,600(sp)
     db8:	24512e23          	sw	t0,604(sp)
     dbc:	26f12023          	sw	a5,608(sp)
     dc0:	26f12223          	sw	a5,612(sp)
     dc4:	26d12823          	sw	a3,624(sp)
     dc8:	26c12c23          	sw	a2,632(sp)
     dcc:	26612e23          	sw	t1,636(sp)
     dd0:	28612023          	sw	t1,640(sp)
     dd4:	28f12223          	sw	a5,644(sp)
     dd8:	28f12423          	sw	a5,648(sp)
     ddc:	28d12a23          	sw	a3,660(sp)
     de0:	28c12e23          	sw	a2,668(sp)
     de4:	2ab12023          	sw	a1,672(sp)
     de8:	2aa12223          	sw	a0,676(sp)
     dec:	2af12423          	sw	a5,680(sp)
     df0:	2ae12e23          	sw	a4,700(sp)
     df4:	03c00713          	li	a4,60
     df8:	2af12623          	sw	a5,684(sp)
     dfc:	2ad12c23          	sw	a3,696(sp)
     e00:	2cc12023          	sw	a2,704(sp)
     e04:	2ce12223          	sw	a4,708(sp)
     e08:	2cb12423          	sw	a1,712(sp)
     e0c:	2cf12623          	sw	a5,716(sp)
     e10:	2cf12823          	sw	a5,720(sp)
      {100,kuina_1,kuina_1,kuina_2,1,kuina_x+180,kuina_y+10,16,16},
      {100,kuina_1,kuina_1,kuina_2,1,kuina_x+190,kuina_y+50,16,16}
    };

    while (1) {
      ssd1306_setbuf(0);
     e14:	31c1                	jal	ad4 <ssd1306_setbuf.constprop.0>
      
      if (kuinas[18].x < 64){
     e16:	2a012703          	lw	a4,672(sp)
     e1a:	03f00793          	li	a5,63
     e1e:	02e7c463          	blt	a5,a4,e46 <opening+0x2e6>
        ssd1306_drawstr_sz(38,20, "MOPPING", 1, fontsize_8x8);
     e22:	6605                	lui	a2,0x1
     e24:	4685                	li	a3,1
     e26:	30460613          	addi	a2,a2,772 # 1304 <main+0x3cc>
     e2a:	45d1                	li	a1,20
     e2c:	02600513          	li	a0,38
     e30:	d7aff0ef          	jal	3aa <ssd1306_drawstr_sz.constprop.0>
        ssd1306_drawstr_sz(45,45, "start", 1, fontsize_8x8); 
     e34:	6605                	lui	a2,0x1
     e36:	02d00593          	li	a1,45
     e3a:	4685                	li	a3,1
     e3c:	30c60613          	addi	a2,a2,780 # 130c <main+0x3d4>
     e40:	852e                	mv	a0,a1
     e42:	d68ff0ef          	jal	3aa <ssd1306_drawstr_sz.constprop.0>
      }

      for (int i = 0; i < kuina_num; i++) {
     e46:	0044                	addi	s1,sp,4
        if (kuinas[i].x > 0){
     e48:	48c8                	lw	a0,20(s1)
     e4a:	00a05f63          	blez	a0,e68 <opening+0x308>
          if (c < 10){
     e4e:	47a5                	li	a5,9
     e50:	0487c063          	blt	a5,s0,e90 <opening+0x330>
            kuinas[i].img = kuinas[i].img_1;
     e54:	4490                	lw	a2,8(s1)
          }
          else {
            kuinas[i].img = kuinas[i].img_2; 
          }
          ssd1306_drawImage(kuinas[i].x, kuinas[i].y, kuinas[i].img, kuinas[i].w, kuinas[i].h, 0);
     e56:	0204c703          	lbu	a4,32(s1)
     e5a:	01c4c683          	lbu	a3,28(s1)
     e5e:	4c8c                	lw	a1,24(s1)
     e60:	c02a                	sw	a0,0(sp)
     e62:	ee4ff0ef          	jal	546 <ssd1306_drawImage.constprop.0>
     e66:	4502                	lw	a0,0(sp)
        }
        kuinas[i].x += kuinas[i].speed;
     e68:	489c                	lw	a5,16(s1)
     e6a:	97aa                	add	a5,a5,a0
     e6c:	c8dc                	sw	a5,20(s1)
      for (int i = 0; i < kuina_num; i++) {
     e6e:	02448493          	addi	s1,s1,36
     e72:	0ddc                	addi	a5,sp,724
     e74:	fcf49ae3          	bne	s1,a5,e48 <opening+0x2e8>
      }

      ssd1306_refresh();
     e78:	3161                	jal	b00 <ssd1306_refresh>

     
      if (kuinas[0].x > 128) {
     e7a:	4762                	lw	a4,24(sp)
     e7c:	08000793          	li	a5,128
     e80:	04e7c363          	blt	a5,a4,ec6 <opening+0x366>
        break;
      }
      
      c ++;      
     e84:	0405                	addi	s0,s0,1
      if (c > 20) {
     e86:	47d1                	li	a5,20
     e88:	f887d6e3          	bge	a5,s0,e14 <opening+0x2b4>
        c = 0;
     e8c:	4401                	li	s0,0
     e8e:	b759                	j	e14 <opening+0x2b4>
            kuinas[i].img = kuinas[i].img_2; 
     e90:	44d0                	lw	a2,12(s1)
     e92:	b7d1                	j	e56 <opening+0x2f6>
        break;
      }

      c ++;      
      if (c > 20) {
        c = 0;
     e94:	4401                	li	s0,0
     e96:	0485                	addi	s1,s1,1
      ssd1306_setbuf(0);
     e98:	3935                	jal	ad4 <ssd1306_setbuf.constprop.0>
      if (c < 10){
     e9a:	47a5                	li	a5,9
     e9c:	0287c763          	blt	a5,s0,eca <opening+0x36a>
        mongoose.img = mongoose.img_1;
     ea0:	6609                	lui	a2,0x2
     ea2:	be060613          	addi	a2,a2,-1056 # 1be0 <mongoose_left_1>
      ssd1306_drawImage(mongoose.x, mongoose.y, mongoose.img, mongoose.w, mongoose.h, 0);
     ea6:	4721                	li	a4,8
     ea8:	46c1                	li	a3,16
     eaa:	45f9                	li	a1,30
     eac:	8526                	mv	a0,s1
     eae:	e98ff0ef          	jal	546 <ssd1306_drawImage.constprop.0>
      ssd1306_refresh();
     eb2:	31b9                	jal	b00 <ssd1306_refresh>
      if (mongoose.x > 128) {
     eb4:	08000793          	li	a5,128
     eb8:	00f48d63          	beq	s1,a5,ed2 <opening+0x372>
      c ++;      
     ebc:	0405                	addi	s0,s0,1
      if (c > 20) {
     ebe:	47d1                	li	a5,20
     ec0:	fc87cae3          	blt	a5,s0,e94 <opening+0x334>
     ec4:	bfc9                	j	e96 <opening+0x336>
     ec6:	4481                	li	s1,0
     ec8:	bfc1                	j	e98 <opening+0x338>
        mongoose.img = mongoose.img_2; 
     eca:	6609                	lui	a2,0x2
     ecc:	bd060613          	addi	a2,a2,-1072 # 1bd0 <mongoose_left_2>
     ed0:	bfd9                	j	ea6 <opening+0x346>
      } 
    }    
}
     ed2:	2dc12083          	lw	ra,732(sp)
     ed6:	2d812403          	lw	s0,728(sp)
     eda:	2d412483          	lw	s1,724(sp)
     ede:	2e010113          	addi	sp,sp,736
     ee2:	8082                	ret

00000ee4 <SystemInit>:
     ee4:	400227b7          	lui	a5,0x40022
     ee8:	4705                	li	a4,1
     eea:	c398                	sw	a4,0(a5)
     eec:	400217b7          	lui	a5,0x40021
     ef0:	01080737          	lui	a4,0x1080
     ef4:	0007a223          	sw	zero,4(a5) # 40021004 <__global_pointer$+0x20020804>
     ef8:	08170713          	addi	a4,a4,129 # 1080081 <main.c.ca7a85b7+0x107d5fc>
     efc:	c398                	sw	a4,0(a5)
     efe:	009f0737          	lui	a4,0x9f0
     f02:	c798                	sw	a4,8(a5)
     f04:	4398                	lw	a4,0(a5)
     f06:	00671693          	slli	a3,a4,0x6
     f0a:	fe06dde3          	bgez	a3,f04 <SystemInit+0x20>
     f0e:	43d8                	lw	a4,4(a5)
     f10:	400216b7          	lui	a3,0x40021
     f14:	9b71                	andi	a4,a4,-4
     f16:	00276713          	ori	a4,a4,2
     f1a:	c3d8                	sw	a4,4(a5)
     f1c:	4721                	li	a4,8
     f1e:	42dc                	lw	a5,4(a3)
     f20:	8bb1                	andi	a5,a5,12
     f22:	fee79ee3          	bne	a5,a4,f1e <SystemInit+0x3a>
     f26:	e00007b7          	lui	a5,0xe0000
     f2a:	0e07ac23          	sw	zero,248(a5) # e00000f8 <__global_pointer$+0xbffff8f8>
     f2e:	08000713          	li	a4,128
     f32:	0ee7aa23          	sw	a4,244(a5)
     f36:	8082                	ret

00000f38 <main>:
    ssd1306_setbuf(0);
  }
}

int main()
{
     f38:	7131                	addi	sp,sp,-192
     f3a:	df06                	sw	ra,188(sp)
     f3c:	dd22                	sw	s0,184(sp)
     f3e:	db26                	sw	s1,180(sp)
    GPIO_port_enable(GPIO_port_A);
     f40:	40021437          	lui	s0,0x40021
	// 48MHz internal clock
	SystemInit();
     f44:	3745                	jal	ee4 <SystemInit>
    GPIO_port_enable(GPIO_port_A);
     f46:	4c1c                	lw	a5,24(s0)
    GPIO_pinMode(BTN_PIN, GPIO_pinMode_I_pullUp, GPIO_Speed_10MHz);
     f48:	400114b7          	lui	s1,0x40011

  init_gpio();

	Delay_Ms( 200 );
     f4c:	00125537          	lui	a0,0x125
    GPIO_port_enable(GPIO_port_A);
     f50:	0047e793          	ori	a5,a5,4
     f54:	cc1c                	sw	a5,24(s0)
    GPIO_port_enable(GPIO_port_D);
     f56:	4c1c                	lw	a5,24(s0)
	Delay_Ms( 200 );
     f58:	f8050513          	addi	a0,a0,-128 # 124f80 <main.c.ca7a85b7+0x1224fb>
    GPIO_port_enable(GPIO_port_D);
     f5c:	0207e793          	ori	a5,a5,32
     f60:	cc1c                	sw	a5,24(s0)
    GPIO_port_enable(GPIO_port_C);
     f62:	4c1c                	lw	a5,24(s0)
     f64:	0107e793          	ori	a5,a5,16
     f68:	cc1c                	sw	a5,24(s0)
    GPIO_pinMode(BTN_PIN, GPIO_pinMode_I_pullUp, GPIO_Speed_10MHz);
     f6a:	40048793          	addi	a5,s1,1024 # 40011400 <__global_pointer$+0x20010c00>
     f6e:	4398                	lw	a4,0(a5)
     f70:	f0f77713          	andi	a4,a4,-241
     f74:	c398                	sw	a4,0(a5)
     f76:	4398                	lw	a4,0(a5)
     f78:	08076713          	ori	a4,a4,128
     f7c:	c398                	sw	a4,0(a5)
     f7e:	4709                	li	a4,2
     f80:	cb98                	sw	a4,16(a5)
	Delay_Ms( 200 );
     f82:	a7eff0ef          	jal	200 <DelaySysTick>
 * init I2C and GPIO
 */
uint8_t ssd1306_i2c_init(void)
{
	// Enable GPIOC and I2C
	RCC->APB2PCENR |= RCC_APB2Periph_GPIOC;
     f86:	4c1c                	lw	a5,24(s0)
	RCC->APB1PCENR |= RCC_APB1Periph_I2C1;
     f88:	00200737          	lui	a4,0x200
	RCC->APB2PCENR |= RCC_APB2Periph_GPIOC;
     f8c:	0107e793          	ori	a5,a5,16
     f90:	cc1c                	sw	a5,24(s0)
	RCC->APB1PCENR |= RCC_APB1Periph_I2C1;
     f92:	4c5c                	lw	a5,28(s0)
     f94:	8fd9                	or	a5,a5,a4
     f96:	cc5c                	sw	a5,28(s0)
	
	// PC1 is SDA, 10MHz Output, alt func, open-drain
	GPIOC->CFGLR &= ~(0xf<<(4*1));
     f98:	409c                	lw	a5,0(s1)
	GPIOC->CFGLR |= (GPIO_Speed_10MHz | GPIO_CNF_OUT_OD_AF)<<(4*1);
	
	// PC2 is SCL, 10MHz Output, alt func, open-drain
	GPIOC->CFGLR &= ~(0xf<<(4*2));
     f9a:	777d                	lui	a4,0xfffff
     f9c:	0ff70713          	addi	a4,a4,255 # fffff0ff <__global_pointer$+0xdfffe8ff>
	GPIOC->CFGLR &= ~(0xf<<(4*1));
     fa0:	f0f7f793          	andi	a5,a5,-241
     fa4:	c09c                	sw	a5,0(s1)
	GPIOC->CFGLR |= (GPIO_Speed_10MHz | GPIO_CNF_OUT_OD_AF)<<(4*1);
     fa6:	409c                	lw	a5,0(s1)
{
	// pulse reset
	ssd1306_rst();
	
	// initialize OLED
	uint8_t *cmd_list = (uint8_t *)ssd1306_init_array;
     fa8:	6409                	lui	s0,0x2
     faa:	b7440413          	addi	s0,s0,-1164 # 1b74 <ssd1306_init_array>
     fae:	0d07e793          	ori	a5,a5,208
     fb2:	c09c                	sw	a5,0(s1)
	GPIOC->CFGLR &= ~(0xf<<(4*2));
     fb4:	409c                	lw	a5,0(s1)
     fb6:	8ff9                	and	a5,a5,a4
     fb8:	c09c                	sw	a5,0(s1)
	GPIOC->CFGLR |= (GPIO_Speed_10MHz | GPIO_CNF_OUT_OD_AF)<<(4*2);
     fba:	409c                	lw	a5,0(s1)
     fbc:	6705                	lui	a4,0x1
     fbe:	d0070713          	addi	a4,a4,-768 # d00 <opening+0x1a0>
     fc2:	8fd9                	or	a5,a5,a4
     fc4:	c09c                	sw	a5,0(s1)
	GPIOC->CFGLR |= (GPIO_Speed_10MHz | GPIO_CNF_OUT_PP)<<(4*4);
	GPIOC->BSHR = (1<<(16+4));
#endif

	// load I2C regs
	ssd1306_i2c_setup();
     fc6:	b0cff0ef          	jal	2d2 <ssd1306_i2c_setup>
	while(*cmd_list != SSD1306_TERMINATE_CMDS)
     fca:	00044503          	lbu	a0,0(s0)
     fce:	0ff00793          	li	a5,255
     fd2:	0cf51263          	bne	a0,a5,1096 <main+0x15e>
		if(ssd1306_cmd(*cmd_list++))
			return 1;
	}
	
	// clear display
	ssd1306_setbuf(0);
     fd6:	3cfd                	jal	ad4 <ssd1306_setbuf.constprop.0>
	ssd1306_refresh();
     fd8:	3625                	jal	b00 <ssd1306_refresh>

	if (!ssd1306_i2c_init()) {
		ssd1306_init();

    opening();
     fda:	3659                	jal	b60 <opening>
    
    // clear display
    ssd1306_setbuf(0);
     fdc:	3ce5                	jal	ad4 <ssd1306_setbuf.constprop.0>
    ssd1306_refresh();
     fde:	360d                	jal	b00 <ssd1306_refresh>
  character enemy[3] = {
     fe0:	6585                	lui	a1,0x1
     fe2:	06c00613          	li	a2,108
     fe6:	26858593          	addi	a1,a1,616 # 1268 <main+0x330>
     fea:	00a8                	addi	a0,sp,72
     fec:	3ce5                	jal	ae4 <memcpy>
  int random_n = get_random(10);
     fee:	4529                	li	a0,10
     ff0:	b78ff0ef          	jal	368 <get_random>
  character kuina = {100,kuina_1,kuina_1,kuina_2,0,init_kuina_x,init_kuina_y,16,16};
     ff4:	02d00413          	li	s0,45
  int jump_progress = 0;
     ff8:	c002                	sw	zero,0(sp)
  bool jump_flag = false;
     ffa:	c202                	sw	zero,4(sp)
  bool button_state = false;
     ffc:	c802                	sw	zero,16(sp)
  bool flip_flag = false;
     ffe:	c602                	sw	zero,12(sp)
  int flip_c = 0;
    1000:	c402                	sw	zero,8(sp)
    uint8_t button_is_pressed = !GPIO_digitalRead(BTN_PIN); 
    1002:	400117b7          	lui	a5,0x40011
    1006:	40078793          	addi	a5,a5,1024 # 40011400 <__global_pointer$+0x20010c00>
    100a:	479c                	lw	a5,8(a5)
    if (!button_state && button_is_pressed && !jump_flag){
    100c:	4742                	lw	a4,16(sp)
    100e:	8b89                	andi	a5,a5,2
    1010:	e311                	bnez	a4,1014 <main+0xdc>
    1012:	c7c9                	beqz	a5,109c <main+0x164>
    button_state = button_is_pressed;
    1014:	0017b793          	seqz	a5,a5
    1018:	c83e                	sw	a5,16(sp)
    if (jump_flag && (max_jump * 2) < jump_progress){
    101a:	4792                	lw	a5,4(sp)
    101c:	c385                	beqz	a5,103c <main+0x104>
    101e:	4702                	lw	a4,0(sp)
    1020:	03c00793          	li	a5,60
    1024:	08e7c163          	blt	a5,a4,10a6 <main+0x16e>
    else if (jump_flag && max_jump >= jump_progress){
    1028:	4682                	lw	a3,0(sp)
      jump_progress += 1;
    102a:	00170793          	addi	a5,a4,1
    else if (jump_flag && max_jump >= jump_progress){
    102e:	4779                	li	a4,30
    1030:	06d74963          	blt	a4,a3,10a2 <main+0x16a>
      kuina.y -= 1;
    1034:	147d                	addi	s0,s0,-1
      jump_progress += 1;
    1036:	c03e                	sw	a5,0(sp)
      kuina.y += 1;
    1038:	4785                	li	a5,1
    103a:	c23e                	sw	a5,4(sp)
    flip_c ++;
    103c:	47a2                	lw	a5,8(sp)
    103e:	0785                	addi	a5,a5,1
    1040:	c43e                	sw	a5,8(sp)
    if (flip_c > 20) {
    1042:	4722                	lw	a4,8(sp)
    1044:	47d5                	li	a5,21
    1046:	00f71763          	bne	a4,a5,1054 <main+0x11c>
      flip_flag = !flip_flag;
    104a:	47b2                	lw	a5,12(sp)
      flip_c = 0;
    104c:	c402                	sw	zero,8(sp)
      flip_flag = !flip_flag;
    104e:	0017c793          	xori	a5,a5,1
    1052:	c63e                	sw	a5,12(sp)
    if (enemy[0].x < 0) {
    1054:	47f6                	lw	a5,92(sp)
    1056:	0a07dc63          	bgez	a5,110e <main+0x1d6>
      enemy[0] = enemy[1];
    105a:	02400613          	li	a2,36
    105e:	10ec                	addi	a1,sp,108
    1060:	00a8                	addi	a0,sp,72
    1062:	3449                	jal	ae4 <memcpy>
      enemy[1] = enemy[2];
    1064:	02400613          	li	a2,36
    1068:	090c                	addi	a1,sp,144
    106a:	10e8                	addi	a0,sp,108
    106c:	3ca5                	jal	ae4 <memcpy>
  int character_n = get_random(10);
    106e:	4529                	li	a0,10
    1070:	af8ff0ef          	jal	368 <get_random>
  if (character_n <= 5){
    1074:	4795                	li	a5,5
    1076:	02a7cd63          	blt	a5,a0,10b0 <main+0x178>
    enemy[2].img = grass_1;
    107a:	81818793          	addi	a5,gp,-2024 # 20000018 <grass_1>
    107e:	cb3e                	sw	a5,148(sp)
    enemy[2].img_1 = grass_1;
    1080:	cd3e                	sw	a5,152(sp)
    enemy[2].img_2 = grass_1;
    1082:	cf3e                	sw	a5,156(sp)
    enemy[2].speed = 1;
    1084:	4785                	li	a5,1
    1086:	d13e                	sw	a5,160(sp)
    enemy[2].y = 53;
    1088:	03500793          	li	a5,53
    108c:	d53e                	sw	a5,168(sp)
    enemy[2].id = 0;
    108e:	c902                	sw	zero,144(sp)
    enemy[2].w = 8;
    1090:	47a1                	li	a5,8
    enemy[2].w = 8;
    1092:	d73e                	sw	a5,172(sp)
    1094:	a0a5                	j	10fc <main+0x1c4>
		if(ssd1306_cmd(*cmd_list++))
    1096:	0405                	addi	s0,s0,1
    1098:	3439                	jal	aa6 <ssd1306_cmd.isra.0>
    109a:	bf05                	j	fca <main+0x92>
    button_state = button_is_pressed;
    109c:	4785                	li	a5,1
    109e:	c83e                	sw	a5,16(sp)
    10a0:	bfbd                	j	101e <main+0xe6>
      kuina.y += 1;
    10a2:	0405                	addi	s0,s0,1
    10a4:	bf49                	j	1036 <main+0xfe>
      kuina.y = init_kuina_y;
    10a6:	02d00413          	li	s0,45
      jump_progress = 0;
    10aa:	c002                	sw	zero,0(sp)
      jump_flag = false;
    10ac:	c202                	sw	zero,4(sp)
    10ae:	b779                	j	103c <main+0x104>
  else if (character_n <= 8){
    10b0:	47a1                	li	a5,8
    10b2:	02a7c063          	blt	a5,a0,10d2 <main+0x19a>
    enemy[2].img = pineapple_1;
    10b6:	6789                	lui	a5,0x2
    10b8:	bb078793          	addi	a5,a5,-1104 # 1bb0 <pineapple_1>
    enemy[2].id = 1;
    10bc:	4705                	li	a4,1
    enemy[2].img = pineapple_1;
    10be:	cb3e                	sw	a5,148(sp)
    enemy[2].img_1 = pineapple_1;
    10c0:	cd3e                	sw	a5,152(sp)
    enemy[2].img_2 = pineapple_1;
    10c2:	cf3e                	sw	a5,156(sp)
    enemy[2].y = 45;
    10c4:	02d00793          	li	a5,45
    10c8:	d53e                	sw	a5,168(sp)
    enemy[2].id = 1;
    10ca:	c93a                	sw	a4,144(sp)
    enemy[2].speed = 1;
    10cc:	d13a                	sw	a4,160(sp)
    enemy[2].w = 16;
    10ce:	47c1                	li	a5,16
    10d0:	b7c9                	j	1092 <main+0x15a>
  else if (character_n <= 9){
    10d2:	4725                	li	a4,9
    10d4:	12e51e63          	bne	a0,a4,1210 <main+0x2d8>
    enemy[2].id = 2;
    10d8:	4709                	li	a4,2
    10da:	c93a                	sw	a4,144(sp)
    enemy[2].img = mongoose_1;
    10dc:	6709                	lui	a4,0x2
    10de:	ba070713          	addi	a4,a4,-1120 # 1ba0 <mongoose_1>
    10e2:	cb3a                	sw	a4,148(sp)
    enemy[2].img_1 = mongoose_1;
    10e4:	cd3a                	sw	a4,152(sp)
    enemy[2].img_2 = mongoose_2;
    10e6:	6709                	lui	a4,0x2
    10e8:	b9070713          	addi	a4,a4,-1136 # 1b90 <mongoose_2>
    10ec:	cf3a                	sw	a4,156(sp)
    enemy[2].speed = 1;
    10ee:	4705                	li	a4,1
    10f0:	d13a                	sw	a4,160(sp)
    enemy[2].y = 53;
    10f2:	03500713          	li	a4,53
    10f6:	d53a                	sw	a4,168(sp)
    enemy[2].w = 16;
    10f8:	4741                	li	a4,16
    10fa:	d73a                	sw	a4,172(sp)
    enemy[2].h = 8;
    10fc:	d93e                	sw	a5,176(sp)
  int enemy_distance = get_random(30);
    10fe:	4579                	li	a0,30
    1100:	a68ff0ef          	jal	368 <get_random>
  enemy[2].x = enemy[1].x + distance_buffer + enemy_distance;
    1104:	478a                	lw	a5,128(sp)
    1106:	03278793          	addi	a5,a5,50
    110a:	97aa                	add	a5,a5,a0
    110c:	d33e                	sw	a5,164(sp)
    if (flip_flag){
    110e:	47b2                	lw	a5,12(sp)
    1110:	12078463          	beqz	a5,1238 <main+0x300>
      enemy[0].img = enemy[0].img_1;
    1114:	4746                	lw	a4,80(sp)
    1116:	185c                	addi	a5,sp,52
      enemy[2].img = enemy[2].img_1;
    1118:	53fc                	lw	a5,100(a5)
      enemy[0].img = enemy[0].img_1;
    111a:	c6ba                	sw	a4,76(sp)
      enemy[1].img = enemy[1].img_1;
    111c:	5756                	lw	a4,116(sp)
      kuina.img = kuina.img_1;
    111e:	6489                	lui	s1,0x2
    1120:	c1048493          	addi	s1,s1,-1008 # 1c10 <kuina_1>
      enemy[1].img = enemy[1].img_1;
    1124:	d8ba                	sw	a4,112(sp)
    ssd1306_drawImage(kuina.x, kuina.y, kuina.img, kuina.w, kuina.h, 0);
    1126:	4741                	li	a4,16
    1128:	86ba                	mv	a3,a4
    112a:	8626                	mv	a2,s1
    112c:	85a2                	mv	a1,s0
    112e:	453d                	li	a0,15
      enemy[2].img = enemy[2].img_1;
    1130:	cb3e                	sw	a5,148(sp)
    ssd1306_drawImage(kuina.x, kuina.y, kuina.img, kuina.w, kuina.h, 0);
    1132:	c14ff0ef          	jal	546 <ssd1306_drawImage.constprop.0>
    ssd1306_drawRect(kuina.x, kuina.y, kuina.w, kuina.h, 1);
    1136:	46c1                	li	a3,16
    1138:	8636                	mv	a2,a3
    113a:	0ff47593          	zext.b	a1,s0
    113e:	453d                	li	a0,15
    1140:	bbeff0ef          	jal	4fe <ssd1306_drawRect.constprop.0>
    ssd1306_drawImage(-8, 0, kuina.img, kuina.w, kuina.h, 0);
    1144:	4741                	li	a4,16
    1146:	86ba                	mv	a3,a4
    1148:	8626                	mv	a2,s1
    114a:	4581                	li	a1,0
    114c:	5561                	li	a0,-8
    114e:	bf8ff0ef          	jal	546 <ssd1306_drawImage.constprop.0>
    ssd1306_drawRect(0, 0, kuina.w, kuina.h, 1);
    1152:	46c1                	li	a3,16
    1154:	8636                	mv	a2,a3
    1156:	4581                	li	a1,0
    1158:	4501                	li	a0,0
    115a:	ba4ff0ef          	jal	4fe <ssd1306_drawRect.constprop.0>
    115e:	00a4                	addi	s1,sp,72
      ssd1306_drawImage(enemy[i].x, enemy[i].y, enemy[i].img, enemy[i].w, enemy[i].h, 0);
    1160:	0144a303          	lw	t1,20(s1)
    1164:	01c4c783          	lbu	a5,28(s1)
    1168:	0204a283          	lw	t0,32(s1)
    116c:	4c8c                	lw	a1,24(s1)
    116e:	40d0                	lw	a2,4(s1)
    1170:	0ff2f713          	zext.b	a4,t0
    1174:	86be                	mv	a3,a5
    1176:	851a                	mv	a0,t1
    1178:	ca3e                	sw	a5,20(sp)
    117a:	d216                	sw	t0,36(sp)
    117c:	d03a                	sw	a4,32(sp)
    117e:	ce2e                	sw	a1,28(sp)
    1180:	cc1a                	sw	t1,24(sp)
    1182:	bc4ff0ef          	jal	546 <ssd1306_drawImage.constprop.0>
      ssd1306_drawRect(enemy[i].x, enemy[i].y, enemy[i].w, enemy[i].h, 1);
    1186:	4362                	lw	t1,24(sp)
    1188:	5702                	lw	a4,32(sp)
    118a:	45f2                	lw	a1,28(sp)
    118c:	4652                	lw	a2,20(sp)
    118e:	86ba                	mv	a3,a4
    1190:	0ff37513          	zext.b	a0,t1
    1194:	0ff5f593          	zext.b	a1,a1
    1198:	ca1a                	sw	t1,20(sp)
    119a:	b64ff0ef          	jal	4fe <ssd1306_drawRect.constprop.0>
      enemy[i].x -= 1;
    119e:	4352                	lw	t1,20(sp)
    11a0:	fff30713          	addi	a4,t1,-1
    11a4:	c8d8                	sw	a4,20(s1)
      if (kuina.x < enemy[i].x && (kuina.x + kuina.w) > enemy[i].x && kuina.y > (init_kuina_y - enemy[i].h)) {
    11a6:	133d                	addi	t1,t1,-17
    11a8:	4739                	li	a4,14
    11aa:	0a676163          	bltu	a4,t1,124c <main+0x314>
    11ae:	5292                	lw	t0,36(sp)
    11b0:	02d00713          	li	a4,45
    11b4:	40570733          	sub	a4,a4,t0
    11b8:	08875a63          	bge	a4,s0,124c <main+0x314>
        if (enemy[i].id == 1 | enemy[i].id == 2){
    11bc:	4098                	lw	a4,0(s1)
    11be:	4685                	li	a3,1
    11c0:	177d                	addi	a4,a4,-1
    11c2:	08e6e563          	bltu	a3,a4,124c <main+0x314>
	  Delay_Ms(2000);
    11c6:	00b72537          	lui	a0,0xb72
    11ca:	b0050513          	addi	a0,a0,-1280 # b71b00 <main.c.ca7a85b7+0xb6f07b>
    11ce:	832ff0ef          	jal	200 <DelaySysTick>
    char score_txt[30] = "Score:"; 
    11d2:	726f67b7          	lui	a5,0x726f6
    11d6:	35378793          	addi	a5,a5,851 # 726f6353 <__global_pointer$+0x526f5b53>
    11da:	d43e                	sw	a5,40(sp)
    11dc:	6791                	lui	a5,0x4
    11de:	a6578793          	addi	a5,a5,-1435 # 3a65 <main.c.ca7a85b7+0xfe0>
    11e2:	4659                	li	a2,22
    11e4:	4581                	li	a1,0
    11e6:	1808                	addi	a0,sp,48
    11e8:	d63e                	sw	a5,44(sp)
    11ea:	8d9ff0ef          	jal	ac2 <memset>
    11ee:	103c                	addi	a5,sp,40
    while (*dest != '\0') {
    11f0:	0007c703          	lbu	a4,0(a5)
    11f4:	e335                	bnez	a4,1258 <main+0x320>
    11f6:	6705                	lui	a4,0x1
    11f8:	31470713          	addi	a4,a4,788 # 1314 <main+0x3dc>
    while (*src != '\0') {
    11fc:	00074683          	lbu	a3,0(a4)
    1200:	eeb1                	bnez	a3,125c <main+0x324>
    *dest = '\0';
    1202:	00078023          	sb	zero,0(a5)
    ssd1306_refresh();
    1206:	8fbff0ef          	jal	b00 <ssd1306_refresh>
    ssd1306_setbuf(0);
    120a:	8cbff0ef          	jal	ad4 <ssd1306_setbuf.constprop.0>
  while (1) {
    120e:	bbd5                	j	1002 <main+0xca>
  else if (character_n <= 10){
    1210:	4729                	li	a4,10
    1212:	eee516e3          	bne	a0,a4,10fe <main+0x1c6>
    enemy[2].id = 3;
    1216:	470d                	li	a4,3
    1218:	c93a                	sw	a4,144(sp)
    enemy[2].img = earthworm_1;
    121a:	81018713          	addi	a4,gp,-2032 # 20000010 <earthworm_1>
    121e:	cb3a                	sw	a4,148(sp)
    enemy[2].img_1 = earthworm_1;
    1220:	cd3a                	sw	a4,152(sp)
    enemy[2].img_2 = earthworm_2;
    1222:	20000737          	lui	a4,0x20000
    1226:	00870713          	addi	a4,a4,8 # 20000008 <earthworm_2>
    122a:	cf3a                	sw	a4,156(sp)
    enemy[2].speed = 1;
    122c:	4705                	li	a4,1
    122e:	d13a                	sw	a4,160(sp)
    enemy[2].y = 53;
    1230:	03500713          	li	a4,53
    1234:	d53a                	sw	a4,168(sp)
    1236:	bdb1                	j	1092 <main+0x15a>
      enemy[0].img = enemy[0].img_2;
    1238:	4756                	lw	a4,84(sp)
    123a:	185c                	addi	a5,sp,52
      kuina.img = kuina.img_2;
    123c:	6489                	lui	s1,0x2
      enemy[0].img = enemy[0].img_2;
    123e:	c6ba                	sw	a4,76(sp)
      enemy[1].img = enemy[1].img_2;
    1240:	5766                	lw	a4,120(sp)
      enemy[2].img = enemy[2].img_2;
    1242:	57bc                	lw	a5,104(a5)
      kuina.img = kuina.img_2;
    1244:	bf048493          	addi	s1,s1,-1040 # 1bf0 <kuina_2>
      enemy[1].img = enemy[1].img_2;
    1248:	d8ba                	sw	a4,112(sp)
    124a:	bdf1                	j	1126 <main+0x1ee>
    for (int i=0; i < 3; i++){
    124c:	02448493          	addi	s1,s1,36
    1250:	195c                	addi	a5,sp,180
    1252:	f09797e3          	bne	a5,s1,1160 <main+0x228>
    1256:	bfb5                	j	11d2 <main+0x29a>
        dest++;
    1258:	0785                	addi	a5,a5,1
    125a:	bf59                	j	11f0 <main+0x2b8>
        *dest = *src;
    125c:	00d78023          	sb	a3,0(a5)
        src++;
    1260:	0705                	addi	a4,a4,1
        dest++;
    1262:	0785                	addi	a5,a5,1
    1264:	bf61                	j	11fc <main+0x2c4>
    1266:	0000                	unimp
    1268:	0000                	unimp
    126a:	0000                	unimp
    126c:	0018                	.insn	2, 0x0018
    126e:	2000                	.insn	2, 0x2000
    1270:	0018                	.insn	2, 0x0018
    1272:	2000                	.insn	2, 0x2000
    1274:	0018                	.insn	2, 0x0018
    1276:	2000                	.insn	2, 0x2000
    1278:	0001                	nop
    127a:	0000                	unimp
    127c:	0082                	c.slli64	ra
    127e:	0000                	unimp
    1280:	0035                	c.nop	13
    1282:	0000                	unimp
    1284:	0008                	.insn	2, 0x0008
    1286:	0000                	unimp
    1288:	0008                	.insn	2, 0x0008
    128a:	0000                	unimp
    128c:	0000                	unimp
    128e:	0000                	unimp
    1290:	0018                	.insn	2, 0x0018
    1292:	2000                	.insn	2, 0x2000
    1294:	0018                	.insn	2, 0x0018
    1296:	2000                	.insn	2, 0x2000
    1298:	0018                	.insn	2, 0x0018
    129a:	2000                	.insn	2, 0x2000
    129c:	0001                	nop
    129e:	0000                	unimp
    12a0:	00a0                	addi	s0,sp,72
    12a2:	0000                	unimp
    12a4:	0035                	c.nop	13
    12a6:	0000                	unimp
    12a8:	0008                	.insn	2, 0x0008
    12aa:	0000                	unimp
    12ac:	0008                	.insn	2, 0x0008
    12ae:	0000                	unimp
    12b0:	0001                	nop
    12b2:	0000                	unimp
    12b4:	1bb0                	addi	a2,sp,504
    12b6:	0000                	unimp
    12b8:	1bb0                	addi	a2,sp,504
    12ba:	0000                	unimp
    12bc:	1bb0                	addi	a2,sp,504
    12be:	0000                	unimp
    12c0:	0001                	nop
    12c2:	0000                	unimp
    12c4:	00d2                	slli	ra,ra,0x14
    12c6:	0000                	unimp
    12c8:	002d                	c.nop	11
    12ca:	0000                	unimp
    12cc:	0010                	.insn	2, 0x0010
    12ce:	0000                	unimp
    12d0:	0010                	.insn	2, 0x0010
    12d2:	0000                	unimp
    12d4:	31647373          	.insn	4, 0x31647373
    12d8:	5f363033          	.insn	4, 0x5f363033
    12dc:	3269                	jal	c66 <opening+0x106>
    12de:	72655f63          	bge	a0,t1,1a1c <fontdata+0x6a8>
    12e2:	6f72                	.insn	2, 0x6f72
    12e4:	2072                	.insn	2, 0x2072
    12e6:	202d                	jal	1310 <main+0x3d8>
    12e8:	6974                	.insn	2, 0x6974
    12ea:	656d                	lui	a0,0x1b
    12ec:	2074756f          	jal	a0,48cf2 <main.c.ca7a85b7+0x4626d>
    12f0:	74696177          	.insn	4, 0x74696177
    12f4:	6e69                	lui	t3,0x1a
    12f6:	6f662067          	.insn	4, 0x6f662067
    12fa:	2072                	.insn	2, 0x2072
    12fc:	7325                	lui	t1,0xfffe9
    12fe:	0d0a                	slli	s10,s10,0x2
    1300:	0000                	unimp
    1302:	0000                	unimp
    1304:	4f4d                	li	t5,19
    1306:	5050                	lw	a2,36(s0)
    1308:	4e49                	li	t3,18
    130a:	74730047          	.insn	4, 0x74730047
    130e:	7261                	lui	tp,0xffff8
    1310:	0074                	addi	a3,sp,12
    1312:	0000                	unimp
    1314:	3031                	jal	b20 <ssd1306_refresh+0x20>
    1316:	0000                	unimp
    1318:	6f6e                	.insn	2, 0x6f6e
    131a:	2074                	.insn	2, 0x2074
    131c:	7562                	.insn	2, 0x7562
    131e:	00007973          	.insn	4, 0x7973
    1322:	0000                	unimp
    1324:	616d                	addi	sp,sp,240
    1326:	72657473          	.insn	4, 0x72657473
    132a:	6d20                	.insn	2, 0x6d20
    132c:	0065646f          	jal	s0,57332 <main.c.ca7a85b7+0x548ad>
    1330:	7274                	.insn	2, 0x7274
    1332:	6e61                	lui	t3,0x18
    1334:	74696d73          	.insn	4, 0x74696d73
    1338:	6d20                	.insn	2, 0x6d20
    133a:	0065646f          	jal	s0,57340 <main.c.ca7a85b7+0x548bb>
    133e:	0000                	unimp
    1340:	7874                	.insn	2, 0x7874
    1342:	6520                	.insn	2, 0x6520
    1344:	706d                	c.lui	zero,0xffffb
    1346:	7974                	.insn	2, 0x7974
    1348:	0000                	unimp
    134a:	0000                	unimp
    134c:	7274                	.insn	2, 0x7274
    134e:	6e61                	lui	t3,0x18
    1350:	74696d73          	.insn	4, 0x74696d73
    1354:	6320                	.insn	2, 0x6320
    1356:	6c706d6f          	jal	s10,821c <main.c.ca7a85b7+0x5797>
    135a:	7465                	lui	s0,0xffff9
    135c:	0065                	c.nop	25
	...

00001360 <errstr>:
    1360:	1318 0000 1324 0000 1330 0000 1340 0000     ....$...0...@...
    1370:	134c 0000                                   L...

00001374 <fontdata>:
	...
    137c:	817e 81a5 99bd 7e81 ff7e ffdb e7c3 7eff     ~......~~......~
    138c:	fe6c fefe 387c 0010 3810 fe7c 387c 0010     l...|8...8|.|8..
    139c:	7c38 fe38 d6fe 3810 3810 fe7c 7cfe 3810     8|8....8.8|..|.8
    13ac:	0000 3c18 183c 0000 ffff c3e7 e7c3 ffff     ...<<...........
    13bc:	3c00 4266 6642 003c c3ff bd99 99bd ffc3     .<fBBf<.........
    13cc:	070f 7d0f cccc 78cc 663c 6666 183c 187e     ...}...x<fff<.~.
    13dc:	333f 303f 7030 e0f0 637f 637f 6763 c0e6     ?3?00p...c.ccg..
    13ec:	db18 e73c 3ce7 18db e080 fef8 e0f8 0080     ..<..<..........
    13fc:	0e02 fe3e 0e3e 0002 3c18 187e 7e18 183c     ..>.>....<~..~<.
    140c:	6666 6666 0066 0066 db7f 7bdb 1b1b 001b     fffff.f....{....
    141c:	613e 663c 3c66 7c86 0000 0000 7e7e 007e     >a<ff<.|....~~~.
    142c:	3c18 187e 3c7e ff18 3c18 187e 1818 0018     .<~.~<...<~.....
    143c:	1818 1818 3c7e 0018 1800 fe0c 180c 0000     ....~<..........
    144c:	3000 fe60 3060 0000 0000 c0c0 fec0 0000     .0`.`0..........
    145c:	2400 ff66 2466 0000 1800 7e3c ffff 0000     .$f.f$....<~....
    146c:	ff00 7eff 183c 0000 0000 0000 0000 0000     ...~<...........
    147c:	3c18 183c 0018 0018 6666 0024 0000 0000     .<<.....ff$.....
    148c:	6c6c 6cfe 6cfe 006c 3e18 3c60 7c06 0018     ll.l.ll..>`<.|..
    149c:	c600 18cc 6630 00c6 6c38 7638 ccdc 0076     ....0f..8l8v..v.
    14ac:	1818 0030 0000 0000 180c 3030 1830 000c     ..0.......000...
    14bc:	1830 0c0c 180c 0030 6600 ff3c 663c 0000     0.....0..f<.<f..
    14cc:	1800 7e18 1818 0000 0000 0000 1800 3018     ...~...........0
    14dc:	0000 7e00 0000 0000 0000 0000 1800 0018     ...~............
    14ec:	0c06 3018 c060 0080 6c38 d6c6 6cc6 0038     ...0`...8l...l8.
    14fc:	3818 1818 1818 007e c67c 1c06 6630 00fe     .8....~.|...0f..
    150c:	c67c 3c06 c606 007c 3c1c cc6c 0cfe 001e     |..<..|..<l.....
    151c:	c0fe fcc0 c606 007c 6038 fcc0 c6c6 007c     ......|.8`....|.
    152c:	c6fe 180c 3030 0030 c67c 7cc6 c6c6 007c     ....000.|..|..|.
    153c:	c67c 7ec6 0c06 0078 1800 0018 1800 0018     |..~..x.........
    154c:	1800 0018 1800 3018 0c06 3018 0c18 0006     .......0...0....
    155c:	0000 007e 7e00 0000 3060 0c18 3018 0060     ..~..~..`0...0`.
    156c:	c67c 180c 0018 0018 c67c dede c0de 0078     |.......|.....x.
    157c:	6c38 fec6 c6c6 00c6 66fc 7c66 6666 00fc     8l.......ff|ff..
    158c:	663c c0c0 66c0 003c 6cf8 6666 6c66 00f8     <f...f<..lfffl..
    159c:	62fe 7868 6268 00fe 62fe 7868 6068 00f0     .bhxhb...bhxh`..
    15ac:	663c c0c0 66ce 003a c6c6 fec6 c6c6 00c6     <f...f:.........
    15bc:	183c 1818 1818 003c 0c1e 0c0c cccc 0078     <.....<.......x.
    15cc:	66e6 786c 666c 00e6 60f0 6060 6662 00fe     .flxlf...```bf..
    15dc:	eec6 fefe c6d6 00c6 e6c6 def6 c6ce 00c6     ................
    15ec:	c67c c6c6 c6c6 007c 66fc 7c66 6060 00f0     |.....|..ff|``..
    15fc:	c67c c6c6 cec6 0e7c 66fc 7c66 666c 00e6     |.....|..ff|lf..
    160c:	663c 1830 660c 003c 7e7e 185a 1818 003c     <f0..f<.~~Z...<.
    161c:	c6c6 c6c6 c6c6 007c c6c6 c6c6 6cc6 0038     ......|......l8.
    162c:	c6c6 d6c6 fed6 006c c6c6 386c c66c 00c6     ......l...l8l...
    163c:	6666 3c66 1818 003c c6fe 188c 6632 00fe     fff<..<.....2f..
    164c:	303c 3030 3030 003c 60c0 1830 060c 0002     <00000<..`0.....
    165c:	0c3c 0c0c 0c0c 003c 3810 c66c 0000 0000     <.....<..8l.....
    166c:	0000 0000 0000 ff00 1830 000c 0000 0000     ........0.......
    167c:	0000 0c78 cc7c 0076 60e0 667c 6666 00dc     ..x.|.v..`|fff..
    168c:	0000 c67c c6c0 007c 0c1c cc7c cccc 0076     ..|...|...|...v.
    169c:	0000 c67c c0fe 007c 663c f860 6060 00f0     ..|...|.<f`.``..
    16ac:	0000 cc76 7ccc f80c 60e0 766c 6666 00e6     ..v..|...`lvff..
    16bc:	0018 1838 1818 003c 0006 0606 6606 3c66     ..8...<......ff<
    16cc:	60e0 6c66 6c78 00e6 1838 1818 1818 003c     .`flxl..8.....<.
    16dc:	0000 feec d6d6 00d6 0000 66dc 6666 0066     ...........ffff.
    16ec:	0000 c67c c6c6 007c 0000 66dc 7c66 f060     ..|...|....ff|`.
    16fc:	0000 cc76 7ccc 1e0c 0000 76dc 6060 00f0     ..v..|.....v``..
    170c:	0000 c07e 067c 00fc 3030 30fc 3630 001c     ..~.|...00.006..
    171c:	0000 cccc cccc 0076 0000 c6c6 6cc6 0038     ......v......l8.
    172c:	0000 d6c6 fed6 006c 0000 6cc6 6c38 00c6     ......l....l8l..
    173c:	0000 c6c6 7ec6 fc06 0000 4c7e 3218 007e     .....~....~L.2~.
    174c:	180e 7018 1818 000e 1818 1818 1818 0018     ...p............
    175c:	1870 0e18 1818 0070 dc76 0000 0000 0000     p.....p.v.......
    176c:	1000 6c38 c6c6 00fe c67c c0c0 7cc6 780c     ..8l....|....|.x
    177c:	00cc cccc cccc 0076 180c c67c c0fe 007c     ......v...|...|.
    178c:	827c 0c78 cc7c 0076 00c6 0c78 cc7c 0076     |.x.|.v...x.|.v.
    179c:	1830 0c78 cc7c 0076 3030 0c78 cc7c 0076     0.x.|.v.00x.|.v.
    17ac:	0000 c07e 7ec0 380c 827c c67c c0fe 007c     ..~..~.8|.|...|.
    17bc:	00c6 c67c c0fe 007c 1830 c67c c0fe 007c     ..|...|.0.|...|.
    17cc:	0066 1838 1818 003c 827c 1838 1818 003c     f.8...<.|.8...<.
    17dc:	1830 3800 1818 003c 38c6 c66c c6fe 00c6     0..8..<..8l.....
    17ec:	6c38 c67c c6fe 00c6 3018 c0fe c0f8 00fe     8l|......0......
    17fc:	0000 187e d87e 007e 6c3e fecc cccc 00ce     ..~.~.~.>l......
    180c:	827c c67c c6c6 007c 00c6 c67c c6c6 007c     |.|...|...|...|.
    181c:	1830 c67c c6c6 007c 8478 cc00 cccc 0076     0.|...|.x.....v.
    182c:	3060 cccc cccc 0076 00c6 c6c6 7ec6 fc06     `0....v......~..
    183c:	38c6 c66c 6cc6 0038 00c6 c6c6 c6c6 007c     .8l..l8.......|.
    184c:	1818 c07e 7ec0 1818 6c38 f064 6660 00fc     ..~..~..8ld.`f..
    185c:	6666 7e3c 7e18 1818 ccf8 facc cfc6 c7c6     ff<~.~..........
    186c:	1b0e 3c18 d818 0070 3018 0c78 cc7c 0076     ...<..p..0x.|.v.
    187c:	180c 3800 1818 003c 180c c67c c6c6 007c     ...8..<...|...|.
    188c:	3018 cccc cccc 0076 dc76 dc00 6666 0066     .0....v.v...fff.
    189c:	dc76 e600 def6 00ce 6c3c 3e6c 7e00 0000     v.......<ll>.~..
    18ac:	6c38 386c 7c00 0000 0018 1818 6330 003e     8ll8.|......0c>.
    18bc:	0000 fe00 c0c0 0000 0000 fe00 0606 0000     ................
    18cc:	e663 7e6c 6633 0fcc e663 7a6c 6a36 06df     c.l~3f..c.lz6j..
    18dc:	0018 1818 3c3c 0018 3300 cc66 3366 0000     ....<<...3f.f3..
    18ec:	cc00 3366 cc66 0000 8822 8822 8822 8822     ..f3f...".".".".
    18fc:	aa55 aa55 aa55 aa55 dd77 dd77 dd77 dd77     U.U.U.U.w.w.w.w.
    190c:	1818 1818 1818 1818 1818 1818 18f8 1818     ................
    191c:	1818 18f8 18f8 1818 3636 3636 36f6 3636     ........6666.666
    192c:	0000 0000 36fe 3636 0000 18f8 18f8 1818     .....666........
    193c:	3636 06f6 36f6 3636 3636 3636 3636 3636     66...66666666666
    194c:	0000 06fe 36f6 3636 3636 06f6 00fe 0000     .....66666......
    195c:	3636 3636 00fe 0000 1818 18f8 00f8 0000     6666............
    196c:	0000 0000 18f8 1818 1818 1818 001f 0000     ................
    197c:	1818 1818 00ff 0000 0000 0000 18ff 1818     ................
    198c:	1818 1818 181f 1818 0000 0000 00ff 0000     ................
    199c:	1818 1818 18ff 1818 1818 181f 181f 1818     ................
    19ac:	3636 3636 3637 3636 3636 3037 003f 0000     666676666670?...
    19bc:	0000 303f 3637 3636 3636 00f7 00ff 0000     ..?0766666......
    19cc:	0000 00ff 36f7 3636 3636 3037 3637 3636     .....66666707666
    19dc:	0000 00ff 00ff 0000 3636 00f7 36f7 3636     ........66...666
    19ec:	1818 00ff 00ff 0000 3636 3636 00ff 0000     ........6666....
    19fc:	0000 00ff 18ff 1818 0000 0000 36ff 3636     .............666
    1a0c:	3636 3636 003f 0000 1818 181f 001f 0000     6666?...........
    1a1c:	0000 181f 181f 1818 0000 0000 363f 3636     ............?666
    1a2c:	3636 3636 36ff 3636 1818 18ff 18ff 1818     6666.666........
    1a3c:	1818 1818 00f8 0000 0000 0000 181f 1818     ................
    1a4c:	ffff ffff ffff ffff 0000 0000 ffff ffff     ................
    1a5c:	f0f0 f0f0 f0f0 f0f0 0f0f 0f0f 0f0f 0f0f     ................
    1a6c:	ffff ffff 0000 0000 0000 dc76 dcc8 0076     ..........v...v.
    1a7c:	cc78 d8cc c6cc 00cc c6fe c0c0 c0c0 00c0     x...............
    1a8c:	0000 6cfe 6c6c 006c c6fe 3060 c660 00fe     ...llll...`0`...
    1a9c:	0000 d87e d8d8 0070 0000 6666 6666 c07c     ..~...p...ffff|.
    1aac:	7600 18dc 1818 0018 187e 663c 3c66 7e18     .v......~.<ff<.~
    1abc:	6c38 fec6 6cc6 0038 6c38 c6c6 6c6c 00ee     8l...l8.8l..ll..
    1acc:	180e 3e0c 6666 003c 0000 db7e 7edb 0000     ...>ff<...~..~..
    1adc:	0c06 db7e 7edb c060 301e 7e60 3060 001e     ..~..~`..0`~`0..
    1aec:	7c00 c6c6 c6c6 00c6 fe00 fe00 fe00 0000     .|..............
    1afc:	1818 187e 0018 007e 1830 180c 0030 007e     ..~...~.0...0.~.
    1b0c:	180c 1830 000c 007e 1b0e 181b 1818 1818     ..0...~.........
    1b1c:	1818 1818 d818 70d8 1800 7e00 1800 0000     .......p...~....
    1b2c:	7600 00dc dc76 0000 6c38 386c 0000 0000     .v..v...8ll8....
    1b3c:	0000 1800 0018 0000 0000 1800 0000 0000     ................
    1b4c:	0c0f 0c0c 6cec 1c3c 366c 3636 0036 0000     .....l<.l6666...
    1b5c:	0c78 3018 007c 0000 0000 3c3c 3c3c 0000     x..0|.....<<<<..
	...

00001b74 <ssd1306_init_array>:
    1b74:	d5ae a880 d33f 4000 148d 0020 c8a1 12da     ....?..@.. .....
    1b84:	8f81 f1d9 40db a6a4 ffaf 0000               .....@......

00001b90 <mongoose_2>:
    1b90:	1800 1e00 ff1f ff7f fecf f007 3006 300e     .............0.0

00001ba0 <mongoose_1>:
    1ba0:	0800 8e0f ff1f fd7f ffee f08f 681e 4c13     .............h.L

00001bb0 <pineapple_1>:
    1bb0:	0008 600c 4862 b01b 600f c007 600d a00a     ...`bH...`...`..
    1bc0:	600d a00a 600d c7e7 1e79 f81f f00f c007     .`...`..y.......

00001bd0 <mongoose_left_2>:
    1bd0:	0018 0078 f8ff feff f37f e00f 600c 700c     ..x..........`.p

00001be0 <mongoose_left_1>:
    1be0:	0010 f071 f8ff febf 77ff f10f 7816 c832     ..q......w...x2.

00001bf0 <kuina_2>:
    1bf0:	c03f c03f c0f3 c0f3 fc3f fc3f ff33 ff33     ?.?.....?.?.3.3.
    1c00:	cf00 cf00 3c33 3c33 c00c c00c 3030 3030     ....3<3<....0000

00001c10 <kuina_1>:
    1c10:	c03f c03f c0f3 c0f3 fc3f fc3f ff33 ff33     ?.?.....?.?.3.3.
    1c20:	cf00 cf00 3c33 3c33 c00c c00c c00c c00c     ....3<3<........
