
main.elf:     file format elf32-littleriscv


Disassembly of section .init:

00000000 <InterruptVector>:
   0:	5300006f          	j	530 <handle_reset>
   4:	00000000          	.word	0x00000000
   8:	000005a6          	.word	0x000005a6
   c:	000005a4          	.word	0x000005a4
	...
  30:	000005a4          	.word	0x000005a4
  34:	00000000          	.word	0x00000000
  38:	000005a4          	.word	0x000005a4
  3c:	00000000          	.word	0x00000000
  40:	000005a4          	.word	0x000005a4
  44:	000005a4          	.word	0x000005a4
  48:	000005a4          	.word	0x000005a4
  4c:	000005a4          	.word	0x000005a4
  50:	000005a4          	.word	0x000005a4
  54:	000005a4          	.word	0x000005a4
  58:	000005a4          	.word	0x000005a4
  5c:	000005a4          	.word	0x000005a4
  60:	000005a4          	.word	0x000005a4
  64:	000005a4          	.word	0x000005a4
  68:	000005a4          	.word	0x000005a4
  6c:	000005a4          	.word	0x000005a4
  70:	000005a4          	.word	0x000005a4
  74:	000005a4          	.word	0x000005a4
  78:	000005a4          	.word	0x000005a4
  7c:	000005a4          	.word	0x000005a4
  80:	000005a4          	.word	0x000005a4
  84:	000005a4          	.word	0x000005a4
  88:	000005a4          	.word	0x000005a4
  8c:	000005a4          	.word	0x000005a4
  90:	000005a4          	.word	0x000005a4
  94:	000005a4          	.word	0x000005a4
  98:	000005a4          	.word	0x000005a4
  9c:	0000                	unimp
	...

Disassembly of section .text:

000000a0 <__mulsi3>:
  a0:	862a                	mv	a2,a0
  a2:	4501                	li	a0,0
  a4:	0015f693          	andi	a3,a1,1
  a8:	c291                	beqz	a3,ac <__mulsi3+0xc>
  aa:	9532                	add	a0,a0,a2
  ac:	8185                	srli	a1,a1,0x1
  ae:	0606                	slli	a2,a2,0x1
  b0:	f9f5                	bnez	a1,a4 <__mulsi3+0x4>
  b2:	8082                	ret
  b4:	0000                	unimp
	...

000000b8 <__divsi3>:
  b8:	02054e63          	bltz	a0,f4 <__umodsi3+0x8>
  bc:	0405c363          	bltz	a1,102 <__umodsi3+0x16>

000000c0 <__hidden___udivsi3>:
  c0:	862e                	mv	a2,a1
  c2:	85aa                	mv	a1,a0
  c4:	557d                	li	a0,-1
  c6:	c215                	beqz	a2,ea <__hidden___udivsi3+0x2a>
  c8:	4685                	li	a3,1
  ca:	00b67863          	bgeu	a2,a1,da <__hidden___udivsi3+0x1a>
  ce:	00c05663          	blez	a2,da <__hidden___udivsi3+0x1a>
  d2:	0606                	slli	a2,a2,0x1
  d4:	0686                	slli	a3,a3,0x1
  d6:	feb66ce3          	bltu	a2,a1,ce <__hidden___udivsi3+0xe>
  da:	4501                	li	a0,0
  dc:	00c5e463          	bltu	a1,a2,e4 <__hidden___udivsi3+0x24>
  e0:	8d91                	sub	a1,a1,a2
  e2:	8d55                	or	a0,a0,a3
  e4:	8285                	srli	a3,a3,0x1
  e6:	8205                	srli	a2,a2,0x1
  e8:	faf5                	bnez	a3,dc <__hidden___udivsi3+0x1c>
  ea:	8082                	ret

000000ec <__umodsi3>:
  ec:	8286                	mv	t0,ra
  ee:	3fc9                	jal	c0 <__hidden___udivsi3>
  f0:	852e                	mv	a0,a1
  f2:	8282                	jr	t0
  f4:	40a00533          	neg	a0,a0
  f8:	00b04763          	bgtz	a1,106 <__umodsi3+0x1a>
  fc:	40b005b3          	neg	a1,a1
 100:	b7c1                	j	c0 <__hidden___udivsi3>
 102:	40b005b3          	neg	a1,a1
 106:	8286                	mv	t0,ra
 108:	3f65                	jal	c0 <__hidden___udivsi3>
 10a:	40a00533          	neg	a0,a0
 10e:	8282                	jr	t0

00000110 <__modsi3>:
 110:	8286                	mv	t0,ra
 112:	0005c763          	bltz	a1,120 <__modsi3+0x10>
 116:	00054963          	bltz	a0,128 <__modsi3+0x18>
 11a:	375d                	jal	c0 <__hidden___udivsi3>
 11c:	852e                	mv	a0,a1
 11e:	8282                	jr	t0
 120:	40b005b3          	neg	a1,a1
 124:	fe055be3          	bgez	a0,11a <__modsi3+0xa>
 128:	40a00533          	neg	a0,a0
 12c:	3f51                	jal	c0 <__hidden___udivsi3>
 12e:	40b00533          	neg	a0,a1
 132:	8282                	jr	t0
	...

00000136 <_puts>:
 136:	832a                	mv	t1,a0
 138:	852e                	mv	a0,a1
 13a:	ce01                	beqz	a2,152 <_puts+0x1c>
 13c:	00062283          	lw	t0,0(a2)
 140:	4701                	li	a4,0
 142:	425c                	lw	a5,4(a2)
 144:	00a74863          	blt	a4,a0,154 <_puts+0x1e>
 148:	00078023          	sb	zero,0(a5)
 14c:	4248                	lw	a0,4(a2)
 14e:	40550533          	sub	a0,a0,t0
 152:	8082                	ret
 154:	460c                	lw	a1,8(a2)
 156:	4214                	lw	a3,0(a2)
 158:	15fd                	addi	a1,a1,-1
 15a:	96ae                	add	a3,a3,a1
 15c:	fed786e3          	beq	a5,a3,148 <_puts+0x12>
 160:	00178693          	addi	a3,a5,1
 164:	c254                	sw	a3,4(a2)
 166:	00e306b3          	add	a3,t1,a4
 16a:	0006c683          	lbu	a3,0(a3)
 16e:	0705                	addi	a4,a4,1
 170:	00d78023          	sb	a3,0(a5)
 174:	b7f9                	j	142 <_puts+0xc>

00000176 <mini_pad>:
 176:	c699                	beqz	a3,184 <mini_pad+0xe>
 178:	4301                	li	t1,0
 17a:	00b6d763          	bge	a3,a1,188 <mini_pad+0x12>
 17e:	85b6                	mv	a1,a3
 180:	4305                	li	t1,1
 182:	a019                	j	188 <mini_pad+0x12>
 184:	4301                	li	t1,0
 186:	86ae                	mv	a3,a1
 188:	8e8d                	sub	a3,a3,a1
 18a:	87ba                	mv	a5,a4
 18c:	00e683b3          	add	t2,a3,a4
 190:	40f382b3          	sub	t0,t2,a5
 194:	04504a63          	bgtz	t0,1e8 <mini_pad+0x72>
 198:	fff6c793          	not	a5,a3
 19c:	87fd                	srai	a5,a5,0x1f
 19e:	8efd                	and	a3,a3,a5
 1a0:	96ba                	add	a3,a3,a4
 1a2:	4781                	li	a5,0
 1a4:	40f58633          	sub	a2,a1,a5
 1a8:	00f682b3          	add	t0,a3,a5
 1ac:	04c04263          	bgtz	a2,1f0 <mini_pad+0x7a>
 1b0:	fff5c793          	not	a5,a1
 1b4:	87fd                	srai	a5,a5,0x1f
 1b6:	8dfd                	and	a1,a1,a5
 1b8:	95b6                	add	a1,a1,a3
 1ba:	40e58533          	sub	a0,a1,a4
 1be:	02030463          	beqz	t1,1e6 <mini_pad+0x70>
 1c2:	02b77263          	bgeu	a4,a1,1e6 <mini_pad+0x70>
 1c6:	02a00793          	li	a5,42
 1ca:	fef58fa3          	sb	a5,-1(a1)
 1ce:	fff58693          	addi	a3,a1,-1
 1d2:	00d77a63          	bgeu	a4,a3,1e6 <mini_pad+0x70>
 1d6:	fef58f23          	sb	a5,-2(a1)
 1da:	ffe58693          	addi	a3,a1,-2
 1de:	00d77463          	bgeu	a4,a3,1e6 <mini_pad+0x70>
 1e2:	fef58ea3          	sb	a5,-3(a1)
 1e6:	8082                	ret
 1e8:	0785                	addi	a5,a5,1
 1ea:	fec78fa3          	sb	a2,-1(a5)
 1ee:	b74d                	j	190 <mini_pad+0x1a>
 1f0:	00f50633          	add	a2,a0,a5
 1f4:	00064603          	lbu	a2,0(a2)
 1f8:	0785                	addi	a5,a5,1
 1fa:	00c28023          	sb	a2,0(t0)
 1fe:	b75d                	j	1a4 <mini_pad+0x2e>

00000200 <mini_itoa.part.0>:
 200:	1101                	addi	sp,sp,-32
 202:	ce06                	sw	ra,28(sp)
 204:	cc22                	sw	s0,24(sp)
 206:	ca26                	sw	s1,20(sp)
 208:	c002                	sw	zero,0(sp)
 20a:	832a                	mv	t1,a0
 20c:	00055763          	bgez	a0,21a <mini_itoa.part.0+0x1a>
 210:	e689                	bnez	a3,21a <mini_itoa.part.0+0x1a>
 212:	4785                	li	a5,1
 214:	40a00333          	neg	t1,a0
 218:	c03e                	sw	a5,0(sp)
 21a:	8a05                	andi	a2,a2,1
 21c:	06100413          	li	s0,97
 220:	c219                	beqz	a2,226 <mini_itoa.part.0+0x26>
 222:	04100413          	li	s0,65
 226:	84ba                	mv	s1,a4
 228:	1459                	addi	s0,s0,-10
 22a:	851a                	mv	a0,t1
 22c:	c83a                	sw	a4,16(sp)
 22e:	c21a                	sw	t1,4(sp)
 230:	c62e                	sw	a1,12(sp)
 232:	c41a                	sw	t1,8(sp)
 234:	3d65                	jal	ec <__umodsi3>
 236:	47a5                	li	a5,9
 238:	4322                	lw	t1,8(sp)
 23a:	45b2                	lw	a1,12(sp)
 23c:	4742                	lw	a4,16(sp)
 23e:	0ff57693          	zext.b	a3,a0
 242:	06a7e163          	bltu	a5,a0,2a4 <mini_itoa.part.0+0xa4>
 246:	03068693          	addi	a3,a3,48
 24a:	0ff6f693          	zext.b	a3,a3
 24e:	00148793          	addi	a5,s1,1
 252:	00d48023          	sb	a3,0(s1)
 256:	851a                	mv	a0,t1
 258:	c83a                	sw	a4,16(sp)
 25a:	c63e                	sw	a5,12(sp)
 25c:	c42e                	sw	a1,8(sp)
 25e:	358d                	jal	c0 <__hidden___udivsi3>
 260:	4692                	lw	a3,4(sp)
 262:	45a2                	lw	a1,8(sp)
 264:	47b2                	lw	a5,12(sp)
 266:	4742                	lw	a4,16(sp)
 268:	832a                	mv	t1,a0
 26a:	02b6fb63          	bgeu	a3,a1,2a0 <mini_itoa.part.0+0xa0>
 26e:	4682                	lw	a3,0(sp)
 270:	c699                	beqz	a3,27e <mini_itoa.part.0+0x7e>
 272:	02d00693          	li	a3,45
 276:	00d78023          	sb	a3,0(a5)
 27a:	00248793          	addi	a5,s1,2
 27e:	40e78533          	sub	a0,a5,a4
 282:	01f55693          	srli	a3,a0,0x1f
 286:	96aa                	add	a3,a3,a0
 288:	00078023          	sb	zero,0(a5)
 28c:	8685                	srai	a3,a3,0x1
 28e:	4601                	li	a2,0
 290:	17fd                	addi	a5,a5,-1
 292:	00d64b63          	blt	a2,a3,2a8 <mini_itoa.part.0+0xa8>
 296:	40f2                	lw	ra,28(sp)
 298:	4462                	lw	s0,24(sp)
 29a:	44d2                	lw	s1,20(sp)
 29c:	6105                	addi	sp,sp,32
 29e:	8082                	ret
 2a0:	84be                	mv	s1,a5
 2a2:	b761                	j	22a <mini_itoa.part.0+0x2a>
 2a4:	96a2                	add	a3,a3,s0
 2a6:	b755                	j	24a <mini_itoa.part.0+0x4a>
 2a8:	00c705b3          	add	a1,a4,a2
 2ac:	0007c283          	lbu	t0,0(a5)
 2b0:	0005c303          	lbu	t1,0(a1)
 2b4:	0605                	addi	a2,a2,1
 2b6:	00558023          	sb	t0,0(a1)
 2ba:	00678023          	sb	t1,0(a5)
 2be:	bfc9                	j	290 <mini_itoa.part.0+0x90>

000002c0 <ssd1306_i2c_setup>:
void ssd1306_i2c_setup(void)
{
	uint16_t tempreg;
	
	// Reset I2C1 to init all regs
	RCC->APB1PRSTR |= RCC_APB1Periph_I2C1;
 2c0:	400217b7          	lui	a5,0x40021
 2c4:	4b98                	lw	a4,16(a5)
 2c6:	002006b7          	lui	a3,0x200
 2ca:	8f55                	or	a4,a4,a3
 2cc:	cb98                	sw	a4,16(a5)
	RCC->APB1PRSTR &= ~RCC_APB1Periph_I2C1;
 2ce:	4b98                	lw	a4,16(a5)
 2d0:	ffe006b7          	lui	a3,0xffe00
 2d4:	16fd                	addi	a3,a3,-1 # ffdfffff <__global_pointer$+0xdfdff7ff>
 2d6:	8f75                	and	a4,a4,a3
 2d8:	cb98                	sw	a4,16(a5)
	
	// set freq
	tempreg = I2C1->CTLR2;
 2da:	400057b7          	lui	a5,0x40005
 2de:	4047d703          	lhu	a4,1028(a5) # 40005404 <__global_pointer$+0x20004c04>
	tempreg &= ~I2C_CTLR2_FREQ;
 2e2:	66c1                	lui	a3,0x10
 2e4:	fc068693          	addi	a3,a3,-64 # ffc0 <main.c.d00da230+0xdab4>
 2e8:	8f75                	and	a4,a4,a3
	tempreg |= (FUNCONF_SYSTEM_CORE_CLOCK/SSD1306_I2C_PRERATE)&I2C_CTLR2_FREQ;
 2ea:	01876713          	ori	a4,a4,24
	I2C1->CTLR2 = tempreg;
 2ee:	40e79223          	sh	a4,1028(a5)
	tempreg = (FUNCONF_SYSTEM_CORE_CLOCK/(25*SSD1306_I2C_CLKRATE))&I2C_CKCFGR_CCR;
	tempreg |= I2C_CKCFGR_DUTY;
#endif
	tempreg |= I2C_CKCFGR_FS;
#endif
	I2C1->CKCFGR = tempreg;
 2f2:	7771                	lui	a4,0xffffc
 2f4:	0705                	addi	a4,a4,1 # ffffc001 <__global_pointer$+0xdfffb801>
 2f6:	40e79e23          	sh	a4,1052(a5)
	// initialize the state
	ssd1306_i2c_irq_state = 0;
#endif
	
	// Enable I2C
	I2C1->CTLR1 |= I2C_CTLR1_PE;
 2fa:	4007d703          	lhu	a4,1024(a5)
 2fe:	00176713          	ori	a4,a4,1
 302:	40e79023          	sh	a4,1024(a5)

	// set ACK mode
	I2C1->CTLR1 |= I2C_CTLR1_ACK;
 306:	4007d703          	lhu	a4,1024(a5)
 30a:	40076713          	ori	a4,a4,1024
 30e:	40e79023          	sh	a4,1024(a5)
}
 312:	8082                	ret

00000314 <ssd1306_drawImage>:

/*
 * draw a an image from an array, directly into to the display buffer
 * the color modes allow for overwriting and even layering (sprites!)
 */
void ssd1306_drawImage(int x, int y, const unsigned char* input, uint8_t width, uint8_t height, uint8_t color_mode) {
 314:	fcc10113          	addi	sp,sp,-52
 318:	d03e                	sw	a5,32(sp)
	int x_absolute;
	int y_absolute;
	uint8_t pixel;
	uint8_t bytes_to_draw = width / 8;
 31a:	0036d793          	srli	a5,a3,0x3
 31e:	0f86f693          	andi	a3,a3,248
 322:	c63e                	sw	a5,12(sp)
	uint16_t buffer_addr;

	for (uint8_t line = 0; line < height; line++) {
 324:	00a687b3          	add	a5,a3,a0
void ssd1306_drawImage(int x, int y, const unsigned char* input, uint8_t width, uint8_t height, uint8_t color_mode) {
 328:	d622                	sw	s0,44(sp)
 32a:	d426                	sw	s1,40(sp)
 32c:	d806                	sw	ra,48(sp)
 32e:	c02a                	sw	a0,0(sp)
 330:	ca2e                	sw	a1,20(sp)
 332:	cc32                	sw	a2,24(sp)
 334:	ce3a                	sw	a4,28(sp)
 336:	c43e                	sw	a5,8(sp)
	for (uint8_t line = 0; line < height; line++) {
 338:	4401                	li	s0,0
			break;
		}

		// SSD1306 is in vertical mode, yet we want to draw horizontally, which necessitates assembling the output bytes from the input data
		// bitmask for current pixel in vertical (output) byte
		uint8_t v_mask = 1 << (y_absolute & 7);
 33a:	4485                	li	s1,1
		y_absolute = y + line;
 33c:	47d2                	lw	a5,20(sp)
 33e:	97a2                	add	a5,a5,s0
    if (y_absolute < 0) {
 340:	0007de63          	bgez	a5,35c <ssd1306_drawImage+0x48>
	for (uint8_t line = 0; line < height; line++) {
 344:	47f2                	lw	a5,28(sp)
 346:	0405                	addi	s0,s0,1
 348:	0ff47413          	zext.b	s0,s0
 34c:	fef468e3          	bltu	s0,a5,33c <ssd1306_drawImage+0x28>
		}
		#if SSD1306_LOG_IMAGE == 1
		printf("\n\r");
		#endif
	}
}
 350:	50c2                	lw	ra,48(sp)
 352:	5432                	lw	s0,44(sp)
 354:	54a2                	lw	s1,40(sp)
 356:	03410113          	addi	sp,sp,52
 35a:	8082                	ret
		if (y_absolute >= SSD1306_H || y_absolute < 0) {
 35c:	03f00713          	li	a4,63
 360:	fef768e3          	bltu	a4,a5,350 <ssd1306_drawImage+0x3c>
			uint8_t input_byte = input[byte + line * bytes_to_draw];
 364:	45b2                	lw	a1,12(sp)
		uint8_t v_mask = 1 << (y_absolute & 7);
 366:	0077f713          	andi	a4,a5,7
 36a:	c83e                	sw	a5,16(sp)
			uint8_t input_byte = input[byte + line * bytes_to_draw];
 36c:	8522                	mv	a0,s0
		uint8_t v_mask = 1 << (y_absolute & 7);
 36e:	00e497b3          	sll	a5,s1,a4
 372:	c23e                	sw	a5,4(sp)
			uint8_t input_byte = input[byte + line * bytes_to_draw];
 374:	3335                	jal	a0 <__mulsi3>
 376:	47e2                	lw	a5,24(sp)
 378:	4322                	lw	t1,8(sp)
 37a:	953e                	add	a0,a0,a5
				buffer_addr = x_absolute + SSD1306_W * (y_absolute / 8);
 37c:	47c2                	lw	a5,16(sp)
 37e:	878d                	srai	a5,a5,0x3
 380:	079e                	slli	a5,a5,0x7
 382:	d23e                	sw	a5,36(sp)
			uint8_t input_byte = input[byte + line * bytes_to_draw];
 384:	00054783          	lbu	a5,0(a0)
 388:	4581                	li	a1,0
 38a:	c83e                	sw	a5,16(sp)
				if (x_absolute >= SSD1306_W) {
 38c:	00b306b3          	add	a3,t1,a1
 390:	07f00793          	li	a5,127
 394:	00d7d863          	bge	a5,a3,3a4 <ssd1306_drawImage+0x90>
		for (uint8_t byte = 0; byte < bytes_to_draw; byte++) {
 398:	4782                	lw	a5,0(sp)
 39a:	1361                	addi	t1,t1,-8
 39c:	0505                	addi	a0,a0,1
 39e:	fe6793e3          	bne	a5,t1,384 <ssd1306_drawImage+0x70>
 3a2:	b74d                	j	344 <ssd1306_drawImage+0x30>
				uint8_t input_pixel = input_byte & (1 << pixel);
 3a4:	47c2                	lw	a5,16(sp)
 3a6:	00b49733          	sll	a4,s1,a1
						ssd1306_buffer[buffer_addr] = (ssd1306_buffer[buffer_addr] & ~v_mask) | (input_pixel ? v_mask : 0);
 3aa:	200002b7          	lui	t0,0x20000
				uint8_t input_pixel = input_byte & (1 << pixel);
 3ae:	8f7d                	and	a4,a4,a5
				buffer_addr = x_absolute + SSD1306_W * (y_absolute / 8);
 3b0:	5792                	lw	a5,36(sp)
						ssd1306_buffer[buffer_addr] = (ssd1306_buffer[buffer_addr] & ~v_mask) | (input_pixel ? v_mask : 0);
 3b2:	8396                	mv	t2,t0
 3b4:	02028293          	addi	t0,t0,32 # 20000020 <ssd1306_buffer>
				buffer_addr = x_absolute + SSD1306_W * (y_absolute / 8);
 3b8:	96be                	add	a3,a3,a5
						ssd1306_buffer[buffer_addr] = (ssd1306_buffer[buffer_addr] & ~v_mask) | (input_pixel ? v_mask : 0);
 3ba:	06c2                	slli	a3,a3,0x10
 3bc:	82c1                	srli	a3,a3,0x10
 3be:	00410603          	lb	a2,4(sp)
 3c2:	92b6                	add	t0,t0,a3
 3c4:	0002c283          	lbu	t0,0(t0)
 3c8:	fff64793          	not	a5,a2
 3cc:	0057f7b3          	and	a5,a5,t0
 3d0:	02038293          	addi	t0,t2,32
				switch (color_mode) {
 3d4:	5382                	lw	t2,32(sp)
						ssd1306_buffer[buffer_addr] = (ssd1306_buffer[buffer_addr] & ~v_mask) | (input_pixel ? v_mask : 0);
 3d6:	07e2                	slli	a5,a5,0x18
 3d8:	87e1                	srai	a5,a5,0x18
				switch (color_mode) {
 3da:	02938263          	beq	t2,s1,3fe <ssd1306_drawImage+0xea>
						ssd1306_buffer[buffer_addr] = (ssd1306_buffer[buffer_addr] & ~v_mask) | (input_pixel ? v_mask : 0);
 3de:	00e03733          	snez	a4,a4
						ssd1306_buffer[buffer_addr] = (ssd1306_buffer[buffer_addr] & ~v_mask) | (!input_pixel ? v_mask : 0);
 3e2:	40e00733          	neg	a4,a4
 3e6:	8e79                	and	a2,a2,a4
 3e8:	8fd1                	or	a5,a5,a2
 3ea:	0ff7f793          	zext.b	a5,a5
 3ee:	92b6                	add	t0,t0,a3
 3f0:	00f28023          	sb	a5,0(t0)
			for (pixel = 0; pixel < 8; pixel++) {
 3f4:	0585                	addi	a1,a1,1
 3f6:	47a1                	li	a5,8
 3f8:	f8f59ae3          	bne	a1,a5,38c <ssd1306_drawImage+0x78>
 3fc:	bf71                	j	398 <ssd1306_drawImage+0x84>
						ssd1306_buffer[buffer_addr] = (ssd1306_buffer[buffer_addr] & ~v_mask) | (!input_pixel ? v_mask : 0);
 3fe:	00173713          	seqz	a4,a4
 402:	b7c5                	j	3e2 <ssd1306_drawImage+0xce>

00000404 <get_random>:
int get_random(void)
{
	uint8_t bit;
	uint32_t new_data;
	
	for(bit=0;bit<NOISE_BITS;bit++)
 404:	200006b7          	lui	a3,0x20000
 408:	0006a503          	lw	a0,0(a3) # 20000000 <lfsr>
{
 40c:	1171                	addi	sp,sp,-4
 40e:	c006                	sw	ra,0(sp)
 410:	4721                	li	a4,8
	{
		new_data = ((lfsr>>NOISE_POLY_TAP0) ^
					(lfsr>>NOISE_POLY_TAP1) ^
 412:	01555613          	srli	a2,a0,0x15
		new_data = ((lfsr>>NOISE_POLY_TAP0) ^
 416:	01f55793          	srli	a5,a0,0x1f
 41a:	8fb1                	xor	a5,a5,a2
 41c:	8fa9                	xor	a5,a5,a0
					(lfsr>>NOISE_POLY_TAP2) ^
 41e:	00155613          	srli	a2,a0,0x1
		new_data = ((lfsr>>NOISE_POLY_TAP0) ^
 422:	8fb1                	xor	a5,a5,a2
	for(bit=0;bit<NOISE_BITS;bit++)
 424:	177d                	addi	a4,a4,-1
					(lfsr>>NOISE_POLY_TAP3));
		lfsr = (lfsr<<1) | (new_data&1);
 426:	8b85                	andi	a5,a5,1
 428:	0506                	slli	a0,a0,0x1
	for(bit=0;bit<NOISE_BITS;bit++)
 42a:	0ff77713          	zext.b	a4,a4
		lfsr = (lfsr<<1) | (new_data&1);
 42e:	8d5d                	or	a0,a0,a5
	for(bit=0;bit<NOISE_BITS;bit++)
 430:	f36d                	bnez	a4,412 <get_random+0xe>
 432:	00a6a023          	sw	a0,0(a3)
	}

  int random_8 = lfsr&NOISE_MASK;
	return random_8 % 11;
 436:	45ad                	li	a1,11
 438:	0ff57513          	zext.b	a0,a0
 43c:	39d1                	jal	110 <__modsi3>
}
 43e:	4082                	lw	ra,0(sp)
 440:	0111                	addi	sp,sp,4
 442:	8082                	ret

00000444 <internal_handle_input.constprop.0>:
 444:	e00007b7          	lui	a5,0xe0000
 448:	0f47a783          	lw	a5,244(a5) # e00000f4 <__global_pointer$+0xbffff8f4>
 44c:	8082                	ret

0000044e <_write.constprop.0>:
 44e:	1121                	addi	sp,sp,-24
 450:	c822                	sw	s0,16(sp)
 452:	ca06                	sw	ra,20(sp)
 454:	c626                	sw	s1,12(sp)
 456:	c402                	sw	zero,8(sp)
 458:	842e                	mv	s0,a1
 45a:	eddd                	bnez	a1,518 <_write.constprop.0+0xca>
 45c:	e00007b7          	lui	a5,0xe0000
 460:	0f47a783          	lw	a5,244(a5) # e00000f4 <__global_pointer$+0xbffff8f4>
 464:	c789                	beqz	a5,46e <_write.constprop.0+0x20>
 466:	0807f793          	andi	a5,a5,128
 46a:	e391                	bnez	a5,46e <_write.constprop.0+0x20>
 46c:	3fe1                	jal	444 <internal_handle_input.constprop.0>
 46e:	40d2                	lw	ra,20(sp)
 470:	8522                	mv	a0,s0
 472:	4442                	lw	s0,16(sp)
 474:	44b2                	lw	s1,12(sp)
 476:	0161                	addi	sp,sp,24
 478:	8082                	ret
 47a:	409407b3          	sub	a5,s0,s1
 47e:	471d                	li	a4,7
 480:	00f75363          	bge	a4,a5,486 <_write.constprop.0+0x38>
 484:	87ba                	mv	a5,a4
 486:	00027737          	lui	a4,0x27
 48a:	e00006b7          	lui	a3,0xe0000
 48e:	10170713          	addi	a4,a4,257 # 27101 <main.c.d00da230+0x24bf5>
 492:	0f468693          	addi	a3,a3,244 # e00000f4 <__global_pointer$+0xbffff8f4>
 496:	4290                	lw	a2,0(a3)
 498:	08067593          	andi	a1,a2,128
 49c:	e1a5                	bnez	a1,4fc <_write.constprop.0+0xae>
 49e:	c611                	beqz	a2,4aa <_write.constprop.0+0x5c>
 4a0:	c22a                	sw	a0,4(sp)
 4a2:	c03e                	sw	a5,0(sp)
 4a4:	3745                	jal	444 <internal_handle_input.constprop.0>
 4a6:	4512                	lw	a0,4(sp)
 4a8:	4782                	lw	a5,0(sp)
 4aa:	0034                	addi	a3,sp,8
 4ac:	470d                	li	a4,3
 4ae:	85b6                	mv	a1,a3
 4b0:	04f74a63          	blt	a4,a5,504 <_write.constprop.0+0xb6>
 4b4:	46a2                	lw	a3,8(sp)
 4b6:	e0000737          	lui	a4,0xe0000
 4ba:	460d                	li	a2,3
 4bc:	0ed72c23          	sw	a3,248(a4) # e00000f8 <__global_pointer$+0xbffff8f8>
 4c0:	009506b3          	add	a3,a0,s1
 4c4:	4701                	li	a4,0
 4c6:	0006c283          	lbu	t0,0(a3)
 4ca:	0705                	addi	a4,a4,1
 4cc:	00e58333          	add	t1,a1,a4
 4d0:	00530023          	sb	t0,0(t1)
 4d4:	00e78563          	beq	a5,a4,4de <_write.constprop.0+0x90>
 4d8:	0685                	addi	a3,a3,1
 4da:	fec716e3          	bne	a4,a2,4c6 <_write.constprop.0+0x78>
 4de:	00478713          	addi	a4,a5,4
 4e2:	f8076713          	ori	a4,a4,-128
 4e6:	00e10423          	sb	a4,8(sp)
 4ea:	46a2                	lw	a3,8(sp)
 4ec:	e0000737          	lui	a4,0xe0000
 4f0:	94be                	add	s1,s1,a5
 4f2:	0ed72a23          	sw	a3,244(a4) # e00000f4 <__global_pointer$+0xbffff8f4>
 4f6:	f884c2e3          	blt	s1,s0,47a <_write.constprop.0+0x2c>
 4fa:	bf95                	j	46e <_write.constprop.0+0x20>
 4fc:	177d                	addi	a4,a4,-1
 4fe:	ff41                	bnez	a4,496 <_write.constprop.0+0x48>
 500:	8426                	mv	s0,s1
 502:	b7b5                	j	46e <_write.constprop.0+0x20>
 504:	00e48633          	add	a2,s1,a4
 508:	962a                	add	a2,a2,a0
 50a:	00064603          	lbu	a2,0(a2)
 50e:	0705                	addi	a4,a4,1
 510:	0685                	addi	a3,a3,1
 512:	fec68fa3          	sb	a2,-1(a3)
 516:	bf69                	j	4b0 <_write.constprop.0+0x62>
 518:	4481                	li	s1,0
 51a:	bff1                	j	4f6 <_write.constprop.0+0xa8>

0000051c <__puts_uart>:
 51c:	1161                	addi	sp,sp,-8
 51e:	c022                	sw	s0,0(sp)
 520:	c206                	sw	ra,4(sp)
 522:	842e                	mv	s0,a1
 524:	372d                	jal	44e <_write.constprop.0>
 526:	4092                	lw	ra,4(sp)
 528:	8522                	mv	a0,s0
 52a:	4402                	lw	s0,0(sp)
 52c:	0121                	addi	sp,sp,8
 52e:	8082                	ret

00000530 <handle_reset>:
 530:	20000197          	auipc	gp,0x20000
 534:	2d018193          	addi	gp,gp,720 # 20000800 <__global_pointer$>
 538:	00018113          	mv	sp,gp
 53c:	08000513          	li	a0,128
 540:	30051073          	csrw	mstatus,a0
 544:	468d                	li	a3,3
 546:	00000517          	auipc	a0,0x0
 54a:	aba50513          	addi	a0,a0,-1350 # 0 <InterruptVector>
 54e:	8d55                	or	a0,a0,a3
 550:	30551073          	csrw	mtvec,a0
 554:	82018513          	addi	a0,gp,-2016 # 20000020 <ssd1306_buffer>
 558:	c2018593          	addi	a1,gp,-992 # 20000420 <_ebss>
 55c:	4601                	li	a2,0
 55e:	00b55663          	bge	a0,a1,56a <handle_reset+0x3a>
 562:	c110                	sw	a2,0(a0)
 564:	0511                	addi	a0,a0,4
 566:	feb54ee3          	blt	a0,a1,562 <handle_reset+0x32>
 56a:	00001517          	auipc	a0,0x1
 56e:	9f250513          	addi	a0,a0,-1550 # f5c <_data_lma>
 572:	20000597          	auipc	a1,0x20000
 576:	a8e58593          	addi	a1,a1,-1394 # 20000000 <lfsr>
 57a:	82018613          	addi	a2,gp,-2016 # 20000020 <ssd1306_buffer>
 57e:	00c58863          	beq	a1,a2,58e <handle_reset+0x5e>
 582:	4114                	lw	a3,0(a0)
 584:	c194                	sw	a3,0(a1)
 586:	0511                	addi	a0,a0,4
 588:	0591                	addi	a1,a1,4
 58a:	fec59ae3          	bne	a1,a2,57e <handle_reset+0x4e>
 58e:	e000f7b7          	lui	a5,0xe000f
 592:	4705                	li	a4,1
 594:	c398                	sw	a4,0(a5)
 596:	6785                	lui	a5,0x1
 598:	9e478793          	addi	a5,a5,-1564 # 9e4 <main>
 59c:	34179073          	csrw	mepc,a5
 5a0:	30200073          	mret

000005a4 <ADC1_IRQHandler>:
 5a4:	a001                	j	5a4 <ADC1_IRQHandler>

000005a6 <NMI_Handler>:
 5a6:	40021737          	lui	a4,0x40021
 5aa:	471c                	lw	a5,8(a4)
 5ac:	008006b7          	lui	a3,0x800
 5b0:	8fd5                	or	a5,a5,a3
 5b2:	c71c                	sw	a5,8(a4)

000005b4 <strlen>:
 5b4:	87aa                	mv	a5,a0
 5b6:	0007c703          	lbu	a4,0(a5)
 5ba:	e701                	bnez	a4,5c2 <strlen+0xe>
 5bc:	40a78533          	sub	a0,a5,a0
 5c0:	8082                	ret
 5c2:	0785                	addi	a5,a5,1
 5c4:	bfcd                	j	5b6 <strlen+0x2>

000005c6 <mini_vpprintf>:
 5c6:	fa410113          	addi	sp,sp,-92
 5ca:	caa2                	sw	s0,84(sp)
 5cc:	c8a6                	sw	s1,80(sp)
 5ce:	cc86                	sw	ra,88(sp)
 5d0:	c02a                	sw	a0,0(sp)
 5d2:	c22e                	sw	a1,4(sp)
 5d4:	8432                	mv	s0,a2
 5d6:	84b6                	mv	s1,a3
 5d8:	e509                	bnez	a0,5e2 <mini_vpprintf+0x1c>
 5da:	13600793          	li	a5,310
 5de:	c202                	sw	zero,4(sp)
 5e0:	c03e                	sw	a5,0(sp)
 5e2:	ca02                	sw	zero,20(sp)
 5e4:	00044783          	lbu	a5,0(s0)
 5e8:	00140713          	addi	a4,s0,1
 5ec:	00f10fa3          	sb	a5,31(sp)
 5f0:	eb81                	bnez	a5,600 <mini_vpprintf+0x3a>
 5f2:	40e6                	lw	ra,88(sp)
 5f4:	4456                	lw	s0,84(sp)
 5f6:	4552                	lw	a0,20(sp)
 5f8:	44c6                	lw	s1,80(sp)
 5fa:	05c10113          	addi	sp,sp,92
 5fe:	8082                	ret
 600:	c63a                	sw	a4,12(sp)
 602:	02500693          	li	a3,37
 606:	02d78063          	beq	a5,a3,626 <mini_vpprintf+0x60>
 60a:	4612                	lw	a2,4(sp)
 60c:	4782                	lw	a5,0(sp)
 60e:	4585                	li	a1,1
 610:	01f10513          	addi	a0,sp,31
 614:	9782                	jalr	a5
 616:	4732                	lw	a4,12(sp)
 618:	c426                	sw	s1,8(sp)
 61a:	843a                	mv	s0,a4
 61c:	47d2                	lw	a5,20(sp)
 61e:	44a2                	lw	s1,8(sp)
 620:	97aa                	add	a5,a5,a0
 622:	ca3e                	sw	a5,20(sp)
 624:	b7c1                	j	5e4 <mini_vpprintf+0x1e>
 626:	00144783          	lbu	a5,1(s0)
 62a:	03000693          	li	a3,48
 62e:	00240713          	addi	a4,s0,2
 632:	00f10fa3          	sb	a5,31(sp)
 636:	c63e                	sw	a5,12(sp)
 638:	08d79363          	bne	a5,a3,6be <mini_vpprintf+0xf8>
 63c:	843a                	mv	s0,a4
 63e:	4681                	li	a3,0
 640:	4701                	li	a4,0
 642:	45a5                	li	a1,9
 644:	a819                	j	65a <mini_vpprintf+0x94>
 646:	00271793          	slli	a5,a4,0x2
 64a:	97ba                	add	a5,a5,a4
 64c:	0786                	slli	a5,a5,0x1
 64e:	0405                	addi	s0,s0,1
 650:	00f60733          	add	a4,a2,a5
 654:	fff44783          	lbu	a5,-1(s0)
 658:	4685                	li	a3,1
 65a:	fd078613          	addi	a2,a5,-48
 65e:	0ff67513          	zext.b	a0,a2
 662:	fea5f2e3          	bgeu	a1,a0,646 <mini_vpprintf+0x80>
 666:	c299                	beqz	a3,66c <mini_vpprintf+0xa6>
 668:	00f10fa3          	sb	a5,31(sp)
 66c:	c83a                	sw	a4,16(sp)
 66e:	46e1                	li	a3,24
 670:	00e6d363          	bge	a3,a4,676 <mini_vpprintf+0xb0>
 674:	c836                	sw	a3,16(sp)
 676:	06c00613          	li	a2,108
 67a:	4681                	li	a3,0
 67c:	00c79863          	bne	a5,a2,68c <mini_vpprintf+0xc6>
 680:	00044783          	lbu	a5,0(s0)
 684:	4685                	li	a3,1
 686:	0405                	addi	s0,s0,1
 688:	00f10fa3          	sb	a5,31(sp)
 68c:	01f14603          	lbu	a2,31(sp)
 690:	06400793          	li	a5,100
 694:	06f60563          	beq	a2,a5,6fe <mini_vpprintf+0x138>
 698:	02c7e763          	bltu	a5,a2,6c6 <mini_vpprintf+0x100>
 69c:	05800793          	li	a5,88
 6a0:	0af60063          	beq	a2,a5,740 <mini_vpprintf+0x17a>
 6a4:	06300793          	li	a5,99
 6a8:	0af60d63          	beq	a2,a5,762 <mini_vpprintf+0x19c>
 6ac:	d239                	beqz	a2,5f2 <mini_vpprintf+0x2c>
 6ae:	4612                	lw	a2,4(sp)
 6b0:	4782                	lw	a5,0(sp)
 6b2:	4585                	li	a1,1
 6b4:	01f10513          	addi	a0,sp,31
 6b8:	9782                	jalr	a5
 6ba:	c426                	sw	s1,8(sp)
 6bc:	b785                	j	61c <mini_vpprintf+0x56>
 6be:	02000693          	li	a3,32
 6c2:	c636                	sw	a3,12(sp)
 6c4:	bfa5                	j	63c <mini_vpprintf+0x76>
 6c6:	07500793          	li	a5,117
 6ca:	02f60a63          	beq	a2,a5,6fe <mini_vpprintf+0x138>
 6ce:	07800793          	li	a5,120
 6d2:	06f60763          	beq	a2,a5,740 <mini_vpprintf+0x17a>
 6d6:	07300793          	li	a5,115
 6da:	fcf61ae3          	bne	a2,a5,6ae <mini_vpprintf+0xe8>
 6de:	00448793          	addi	a5,s1,4
 6e2:	4084                	lw	s1,0(s1)
 6e4:	cc3a                	sw	a4,24(sp)
 6e6:	c43e                	sw	a5,8(sp)
 6e8:	8526                	mv	a0,s1
 6ea:	35e9                	jal	5b4 <strlen>
 6ec:	4762                	lw	a4,24(sp)
 6ee:	85aa                	mv	a1,a0
 6f0:	08e05663          	blez	a4,77c <mini_vpprintf+0x1b6>
 6f4:	46c2                	lw	a3,16(sp)
 6f6:	4632                	lw	a2,12(sp)
 6f8:	1838                	addi	a4,sp,56
 6fa:	8526                	mv	a0,s1
 6fc:	a01d                	j	722 <mini_vpprintf+0x15c>
 6fe:	00448793          	addi	a5,s1,4
 702:	c43e                	sw	a5,8(sp)
 704:	c695                	beqz	a3,730 <mini_vpprintf+0x16a>
 706:	f8b60613          	addi	a2,a2,-117
 70a:	1018                	addi	a4,sp,32
 70c:	00163693          	seqz	a3,a2
 710:	4088                	lw	a0,0(s1)
 712:	4601                	li	a2,0
 714:	45a9                	li	a1,10
 716:	34ed                	jal	200 <mini_itoa.part.0>
 718:	46c2                	lw	a3,16(sp)
 71a:	4632                	lw	a2,12(sp)
 71c:	1838                	addi	a4,sp,56
 71e:	85aa                	mv	a1,a0
 720:	1008                	addi	a0,sp,32
 722:	3c91                	jal	176 <mini_pad>
 724:	4612                	lw	a2,4(sp)
 726:	85aa                	mv	a1,a0
 728:	1828                	addi	a0,sp,56
 72a:	4782                	lw	a5,0(sp)
 72c:	9782                	jalr	a5
 72e:	b5fd                	j	61c <mini_vpprintf+0x56>
 730:	07500793          	li	a5,117
 734:	1018                	addi	a4,sp,32
 736:	4685                	li	a3,1
 738:	fcf60ce3          	beq	a2,a5,710 <mini_vpprintf+0x14a>
 73c:	4681                	li	a3,0
 73e:	bfc9                	j	710 <mini_vpprintf+0x14a>
 740:	4088                	lw	a0,0(s1)
 742:	fa860613          	addi	a2,a2,-88
 746:	00448793          	addi	a5,s1,4
 74a:	1018                	addi	a4,sp,32
 74c:	4685                	li	a3,1
 74e:	00163613          	seqz	a2,a2
 752:	45c1                	li	a1,16
 754:	c43e                	sw	a5,8(sp)
 756:	346d                	jal	200 <mini_itoa.part.0>
 758:	46c2                	lw	a3,16(sp)
 75a:	4632                	lw	a2,12(sp)
 75c:	85aa                	mv	a1,a0
 75e:	1838                	addi	a4,sp,56
 760:	b7c1                	j	720 <mini_vpprintf+0x15a>
 762:	00448793          	addi	a5,s1,4
 766:	c43e                	sw	a5,8(sp)
 768:	409c                	lw	a5,0(s1)
 76a:	46c2                	lw	a3,16(sp)
 76c:	4632                	lw	a2,12(sp)
 76e:	00f10fa3          	sb	a5,31(sp)
 772:	1838                	addi	a4,sp,56
 774:	4585                	li	a1,1
 776:	01f10513          	addi	a0,sp,31
 77a:	b765                	j	722 <mini_vpprintf+0x15c>
 77c:	4612                	lw	a2,4(sp)
 77e:	8526                	mv	a0,s1
 780:	b76d                	j	72a <mini_vpprintf+0x164>

00000782 <printf>:
 782:	1111                	addi	sp,sp,-28
 784:	c632                	sw	a2,12(sp)
 786:	862a                	mv	a2,a0
 788:	c42e                	sw	a1,8(sp)
 78a:	c836                	sw	a3,16(sp)
 78c:	4581                	li	a1,0
 78e:	0034                	addi	a3,sp,8
 790:	51c00513          	li	a0,1308
 794:	c206                	sw	ra,4(sp)
 796:	ca3a                	sw	a4,20(sp)
 798:	cc3e                	sw	a5,24(sp)
 79a:	c036                	sw	a3,0(sp)
 79c:	352d                	jal	5c6 <mini_vpprintf>
 79e:	4092                	lw	ra,4(sp)
 7a0:	0171                	addi	sp,sp,28
 7a2:	8082                	ret

000007a4 <ssd1306_i2c_error.isra.0>:
 * error handler
 */
uint8_t ssd1306_i2c_error(uint8_t err)
{
	// report error
	printf("ssd1306_i2c_error - timeout waiting for %s\n\r", errstr[err]);
 7a4:	6785                	lui	a5,0x1
 7a6:	050a                	slli	a0,a0,0x2
 7a8:	da478793          	addi	a5,a5,-604 # da4 <errstr>
 7ac:	97aa                	add	a5,a5,a0
 7ae:	438c                	lw	a1,0(a5)
 7b0:	6505                	lui	a0,0x1
uint8_t ssd1306_i2c_error(uint8_t err)
 7b2:	1171                	addi	sp,sp,-4
	printf("ssd1306_i2c_error - timeout waiting for %s\n\r", errstr[err]);
 7b4:	d2c50513          	addi	a0,a0,-724 # d2c <main+0x348>
uint8_t ssd1306_i2c_error(uint8_t err)
 7b8:	c006                	sw	ra,0(sp)
	printf("ssd1306_i2c_error - timeout waiting for %s\n\r", errstr[err]);
 7ba:	37e1                	jal	782 <printf>
	
	// reset & initialize I2C
	ssd1306_i2c_setup();

	return 1;
}
 7bc:	4082                	lw	ra,0(sp)
 7be:	0111                	addi	sp,sp,4
	ssd1306_i2c_setup();
 7c0:	b601                	j	2c0 <ssd1306_i2c_setup>

000007c2 <ssd1306_i2c_send.constprop.0.isra.0>:
uint8_t ssd1306_i2c_send(uint8_t addr, uint8_t *data, uint8_t sz)
{
	int32_t timeout;
	
	// wait for not busy
	timeout = TIMEOUT_MAX;
 7c2:	6761                	lui	a4,0x18
	while((I2C1->STAR2 & I2C_STAR2_BUSY) && (timeout--));
 7c4:	400057b7          	lui	a5,0x40005
	timeout = TIMEOUT_MAX;
 7c8:	6a070713          	addi	a4,a4,1696 # 186a0 <main.c.d00da230+0x16194>
	while((I2C1->STAR2 & I2C_STAR2_BUSY) && (timeout--));
 7cc:	40078793          	addi	a5,a5,1024 # 40005400 <__global_pointer$+0x20004c00>
 7d0:	567d                	li	a2,-1
 7d2:	0187d683          	lhu	a3,24(a5)
 7d6:	8a89                	andi	a3,a3,2
 7d8:	cedd                	beqz	a3,896 <ssd1306_i2c_send.constprop.0.isra.0+0xd4>
 7da:	177d                	addi	a4,a4,-1
 7dc:	fec71be3          	bne	a4,a2,7d2 <ssd1306_i2c_send.constprop.0.isra.0+0x10>
	if(timeout==-1)
		return ssd1306_i2c_error(0);
 7e0:	4501                	li	a0,0
 7e2:	a821                	j	7fa <ssd1306_i2c_send.constprop.0.isra.0+0x38>
 7e4:	67e1                	lui	a5,0x18
 7e6:	6a178793          	addi	a5,a5,1697 # 186a1 <main.c.d00da230+0x16195>
	// send data one byte at a time
	while(sz--)
	{
		// wait for TX Empty
		timeout = TIMEOUT_MAX;
		while(!(I2C1->STAR1 & I2C_STAR1_TXE) && (timeout--));
 7ea:	01475683          	lhu	a3,20(a4)
 7ee:	0806f693          	andi	a3,a3,128
 7f2:	e689                	bnez	a3,7fc <ssd1306_i2c_send.constprop.0.isra.0+0x3a>
 7f4:	17fd                	addi	a5,a5,-1
 7f6:	fbf5                	bnez	a5,7ea <ssd1306_i2c_send.constprop.0.isra.0+0x28>
		if(timeout==-1)
			return ssd1306_i2c_error(3);
 7f8:	450d                	li	a0,3
		return ssd1306_i2c_error(0);
 7fa:	b76d                	j	7a4 <ssd1306_i2c_error.isra.0>
		
		// send command
		I2C1->DATAR = *data++;
 7fc:	00054783          	lbu	a5,0(a0)
 800:	0505                	addi	a0,a0,1
 802:	00f71823          	sh	a5,16(a4)
	while(sz--)
 806:	fcb51fe3          	bne	a0,a1,7e4 <ssd1306_i2c_send.constprop.0.isra.0+0x22>
	}

	// wait for tx complete
	timeout = TIMEOUT_MAX;
 80a:	66e1                	lui	a3,0x18
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
 80c:	40005737          	lui	a4,0x40005
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_BYTE_TRANSMITTED)) && (timeout--));
 810:	00070637          	lui	a2,0x70
	timeout = TIMEOUT_MAX;
 814:	6a068693          	addi	a3,a3,1696 # 186a0 <main.c.d00da230+0x16194>
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
 818:	40070713          	addi	a4,a4,1024 # 40005400 <__global_pointer$+0x20004c00>
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_BYTE_TRANSMITTED)) && (timeout--));
 81c:	08460613          	addi	a2,a2,132 # 70084 <main.c.d00da230+0x6db78>
 820:	55fd                	li	a1,-1
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
 822:	01475503          	lhu	a0,20(a4)
 826:	01875783          	lhu	a5,24(a4)
 82a:	07c2                	slli	a5,a5,0x10
 82c:	8fc9                	or	a5,a5,a0
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_BYTE_TRANSMITTED)) && (timeout--));
 82e:	8ff1                	and	a5,a5,a2
 830:	00c78763          	beq	a5,a2,83e <ssd1306_i2c_send.constprop.0.isra.0+0x7c>
 834:	16fd                	addi	a3,a3,-1
 836:	feb696e3          	bne	a3,a1,822 <ssd1306_i2c_send.constprop.0.isra.0+0x60>
	if(timeout==-1)
		return ssd1306_i2c_error(4);
 83a:	4511                	li	a0,4
 83c:	bf7d                	j	7fa <ssd1306_i2c_send.constprop.0.isra.0+0x38>

	// set STOP condition
	I2C1->CTLR1 |= I2C_CTLR1_STOP;
 83e:	00075783          	lhu	a5,0(a4)
 842:	2007e793          	ori	a5,a5,512
 846:	00f71023          	sh	a5,0(a4)
	
	// we're happy
	return 0;
}
 84a:	8082                	ret
		while(!(I2C1->STAR1 & I2C_STAR1_TXE) && (timeout--));
 84c:	40005737          	lui	a4,0x40005
 850:	95aa                	add	a1,a1,a0
 852:	40070713          	addi	a4,a4,1024 # 40005400 <__global_pointer$+0x20004c00>
 856:	bf45                	j	806 <ssd1306_i2c_send.constprop.0.isra.0+0x44>
	I2C1->DATAR = addr<<1;
 858:	07800793          	li	a5,120
 85c:	00f71823          	sh	a5,16(a4)
	timeout = TIMEOUT_MAX;
 860:	6661                	lui	a2,0x18
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
 862:	400056b7          	lui	a3,0x40005
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_TRANSMITTER_MODE_SELECTED)) && (timeout--));
 866:	00070737          	lui	a4,0x70
	timeout = TIMEOUT_MAX;
 86a:	6a060613          	addi	a2,a2,1696 # 186a0 <main.c.d00da230+0x16194>
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
 86e:	40068693          	addi	a3,a3,1024 # 40005400 <__global_pointer$+0x20004c00>
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_TRANSMITTER_MODE_SELECTED)) && (timeout--));
 872:	08270713          	addi	a4,a4,130 # 70082 <main.c.d00da230+0x6db76>
 876:	537d                	li	t1,-1
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
 878:	0146d283          	lhu	t0,20(a3)
 87c:	0186d783          	lhu	a5,24(a3)
 880:	07c2                	slli	a5,a5,0x10
 882:	0057e7b3          	or	a5,a5,t0
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_TRANSMITTER_MODE_SELECTED)) && (timeout--));
 886:	8ff9                	and	a5,a5,a4
 888:	fce782e3          	beq	a5,a4,84c <ssd1306_i2c_send.constprop.0.isra.0+0x8a>
 88c:	167d                	addi	a2,a2,-1
 88e:	fe6615e3          	bne	a2,t1,878 <ssd1306_i2c_send.constprop.0.isra.0+0xb6>
		return ssd1306_i2c_error(2);
 892:	4509                	li	a0,2
 894:	b79d                	j	7fa <ssd1306_i2c_send.constprop.0.isra.0+0x38>
	I2C1->CTLR1 |= I2C_CTLR1_START;
 896:	0007d703          	lhu	a4,0(a5)
	timeout = TIMEOUT_MAX;
 89a:	66e1                	lui	a3,0x18
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_MODE_SELECT)) && (timeout--));
 89c:	00030637          	lui	a2,0x30
	I2C1->CTLR1 |= I2C_CTLR1_START;
 8a0:	10076713          	ori	a4,a4,256
 8a4:	00e79023          	sh	a4,0(a5)
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
 8a8:	40005737          	lui	a4,0x40005
	timeout = TIMEOUT_MAX;
 8ac:	6a068693          	addi	a3,a3,1696 # 186a0 <main.c.d00da230+0x16194>
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
 8b0:	40070713          	addi	a4,a4,1024 # 40005400 <__global_pointer$+0x20004c00>
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_MODE_SELECT)) && (timeout--));
 8b4:	0605                	addi	a2,a2,1 # 30001 <main.c.d00da230+0x2daf5>
 8b6:	537d                	li	t1,-1
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
 8b8:	01475283          	lhu	t0,20(a4)
 8bc:	01875783          	lhu	a5,24(a4)
 8c0:	07c2                	slli	a5,a5,0x10
 8c2:	0057e7b3          	or	a5,a5,t0
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_MODE_SELECT)) && (timeout--));
 8c6:	8ff1                	and	a5,a5,a2
 8c8:	f8c788e3          	beq	a5,a2,858 <ssd1306_i2c_send.constprop.0.isra.0+0x96>
 8cc:	16fd                	addi	a3,a3,-1
 8ce:	fe6695e3          	bne	a3,t1,8b8 <ssd1306_i2c_send.constprop.0.isra.0+0xf6>
		return ssd1306_i2c_error(1);
 8d2:	4505                	li	a0,1
 8d4:	b71d                	j	7fa <ssd1306_i2c_send.constprop.0.isra.0+0x38>

000008d6 <ssd1306_cmd.isra.0>:
uint8_t ssd1306_cmd(uint8_t cmd)
 8d6:	fd810113          	addi	sp,sp,-40
	
	/* build command or data packets */
	if(cmd)
	{
		pkt[0] = 0;
		pkt[1] = *data;
 8da:	00a100a3          	sb	a0,1(sp)
	else
	{
		pkt[0] = 0x40;
		memcpy(&pkt[1], data, sz);
	}
	return ssd1306_i2c_send(SSD1306_I2C_ADDR, pkt, sz+1);
 8de:	4589                	li	a1,2
 8e0:	850a                	mv	a0,sp
 8e2:	d206                	sw	ra,36(sp)
		pkt[0] = 0;
 8e4:	00010023          	sb	zero,0(sp)
	return ssd1306_i2c_send(SSD1306_I2C_ADDR, pkt, sz+1);
 8e8:	3de9                	jal	7c2 <ssd1306_i2c_send.constprop.0.isra.0>
}
 8ea:	5092                	lw	ra,36(sp)
 8ec:	02810113          	addi	sp,sp,40
 8f0:	8082                	ret

000008f2 <memset>:
 8f2:	962a                	add	a2,a2,a0
 8f4:	87aa                	mv	a5,a0
 8f6:	00c79363          	bne	a5,a2,8fc <memset+0xa>
 8fa:	8082                	ret
 8fc:	00b78023          	sb	a1,0(a5)
 900:	0785                	addi	a5,a5,1
 902:	bfd5                	j	8f6 <memset+0x4>

00000904 <ssd1306_setbuf.constprop.0>:
	memset(ssd1306_buffer, color ? 0xFF : 0x00, sizeof(ssd1306_buffer));
 904:	20000537          	lui	a0,0x20000
 908:	40000613          	li	a2,1024
 90c:	4581                	li	a1,0
 90e:	02050513          	addi	a0,a0,32 # 20000020 <ssd1306_buffer>
 912:	b7c5                	j	8f2 <memset>

00000914 <memcpy>:
 914:	4781                	li	a5,0
 916:	00f61363          	bne	a2,a5,91c <memcpy+0x8>
 91a:	8082                	ret
 91c:	00f58733          	add	a4,a1,a5
 920:	00074683          	lbu	a3,0(a4)
 924:	00f50733          	add	a4,a0,a5
 928:	0785                	addi	a5,a5,1
 92a:	00d70023          	sb	a3,0(a4)
 92e:	b7e5                	j	916 <memcpy+0x2>

00000930 <ssd1306_refresh>:
{
 930:	7179                	addi	sp,sp,-48
	ssd1306_cmd(SSD1306_COLUMNADDR);
 932:	02100513          	li	a0,33
{
 936:	d606                	sw	ra,44(sp)
 938:	d422                	sw	s0,40(sp)
 93a:	d226                	sw	s1,36(sp)
	ssd1306_cmd(SSD1306_COLUMNADDR);
 93c:	3f69                	jal	8d6 <ssd1306_cmd.isra.0>
	ssd1306_cmd(SSD1306_OFFSET);   // Column start address (0 = reset)
 93e:	4501                	li	a0,0
 940:	3f59                	jal	8d6 <ssd1306_cmd.isra.0>
	ssd1306_cmd(SSD1306_OFFSET+SSD1306_W-1); // Column end address (127 = reset)
 942:	07f00513          	li	a0,127
 946:	3f41                	jal	8d6 <ssd1306_cmd.isra.0>
	ssd1306_cmd(SSD1306_PAGEADDR);
 948:	02200513          	li	a0,34
 94c:	3769                	jal	8d6 <ssd1306_cmd.isra.0>
	ssd1306_cmd(0); // Page start address (0 = reset)
 94e:	4501                	li	a0,0
 950:	3759                	jal	8d6 <ssd1306_cmd.isra.0>
	ssd1306_cmd(7); // Page end address
 952:	20000437          	lui	s0,0x20000
 956:	451d                	li	a0,7
 958:	02040413          	addi	s0,s0,32 # 20000020 <ssd1306_buffer>
 95c:	3fad                	jal	8d6 <ssd1306_cmd.isra.0>
    for(i=0;i<sizeof(ssd1306_buffer);i+=SSD1306_PSZ)
 95e:	40040493          	addi	s1,s0,1024
		pkt[0] = 0x40;
 962:	04000793          	li	a5,64
		memcpy(&pkt[1], data, sz);
 966:	85a2                	mv	a1,s0
 968:	02000613          	li	a2,32
 96c:	00110513          	addi	a0,sp,1
		pkt[0] = 0x40;
 970:	00f10023          	sb	a5,0(sp)
		memcpy(&pkt[1], data, sz);
 974:	3745                	jal	914 <memcpy>
	return ssd1306_i2c_send(SSD1306_I2C_ADDR, pkt, sz+1);
 976:	02100593          	li	a1,33
 97a:	850a                	mv	a0,sp
 97c:	02040413          	addi	s0,s0,32
 980:	3589                	jal	7c2 <ssd1306_i2c_send.constprop.0.isra.0>
 982:	fe9410e3          	bne	s0,s1,962 <ssd1306_refresh+0x32>
}
 986:	50b2                	lw	ra,44(sp)
 988:	5422                	lw	s0,40(sp)
 98a:	5492                	lw	s1,36(sp)
 98c:	6145                	addi	sp,sp,48
 98e:	8082                	ret

00000990 <SystemInit>:
 990:	400227b7          	lui	a5,0x40022
 994:	4705                	li	a4,1
 996:	c398                	sw	a4,0(a5)
 998:	400217b7          	lui	a5,0x40021
 99c:	01080737          	lui	a4,0x1080
 9a0:	0007a223          	sw	zero,4(a5) # 40021004 <__global_pointer$+0x20020804>
 9a4:	08170713          	addi	a4,a4,129 # 1080081 <main.c.d00da230+0x107db75>
 9a8:	c398                	sw	a4,0(a5)
 9aa:	009f0737          	lui	a4,0x9f0
 9ae:	c798                	sw	a4,8(a5)
 9b0:	4398                	lw	a4,0(a5)
 9b2:	00671693          	slli	a3,a4,0x6
 9b6:	fe06dde3          	bgez	a3,9b0 <SystemInit+0x20>
 9ba:	43d8                	lw	a4,4(a5)
 9bc:	400216b7          	lui	a3,0x40021
 9c0:	9b71                	andi	a4,a4,-4
 9c2:	00276713          	ori	a4,a4,2
 9c6:	c3d8                	sw	a4,4(a5)
 9c8:	4721                	li	a4,8
 9ca:	42dc                	lw	a5,4(a3)
 9cc:	8bb1                	andi	a5,a5,12
 9ce:	fee79ee3          	bne	a5,a4,9ca <SystemInit+0x3a>
 9d2:	e00007b7          	lui	a5,0xe0000
 9d6:	0e07ac23          	sw	zero,248(a5) # e00000f8 <__global_pointer$+0xbffff8f8>
 9da:	08000713          	li	a4,128
 9de:	0ee7aa23          	sw	a4,244(a5)
 9e2:	8082                	ret

000009e4 <main>:
    ssd1306_setbuf(0);
  }
}

int main()
{
 9e4:	7179                	addi	sp,sp,-48
 9e6:	d606                	sw	ra,44(sp)
 9e8:	d422                	sw	s0,40(sp)
 9ea:	d226                	sw	s1,36(sp)
	// 48MHz internal clock
	SystemInit();
 9ec:	3755                	jal	990 <SystemInit>
    GPIO_port_enable(GPIO_port_A);
 9ee:	400217b7          	lui	a5,0x40021
 9f2:	4f98                	lw	a4,24(a5)
#endif

void DelaySysTick( uint32_t n )
{
#ifdef CH32V003
	uint32_t targend = SysTick->CNT + n;
 9f4:	e000f6b7          	lui	a3,0xe000f
 9f8:	00476713          	ori	a4,a4,4
 9fc:	cf98                	sw	a4,24(a5)
    GPIO_port_enable(GPIO_port_D);
 9fe:	4f98                	lw	a4,24(a5)
 a00:	02076713          	ori	a4,a4,32
 a04:	cf98                	sw	a4,24(a5)
    GPIO_port_enable(GPIO_port_C);
 a06:	4f98                	lw	a4,24(a5)
 a08:	01076713          	ori	a4,a4,16
 a0c:	cf98                	sw	a4,24(a5)
    GPIO_pinMode(BTN_PIN, GPIO_pinMode_I_pullUp, GPIO_Speed_10MHz);
 a0e:	400117b7          	lui	a5,0x40011
 a12:	40078793          	addi	a5,a5,1024 # 40011400 <__global_pointer$+0x20010c00>
 a16:	4398                	lw	a4,0(a5)
 a18:	f0f77713          	andi	a4,a4,-241
 a1c:	c398                	sw	a4,0(a5)
 a1e:	4398                	lw	a4,0(a5)
 a20:	08076713          	ori	a4,a4,128
 a24:	c398                	sw	a4,0(a5)
 a26:	4709                	li	a4,2
 a28:	cb98                	sw	a4,16(a5)
 a2a:	4698                	lw	a4,8(a3)
 a2c:	001257b7          	lui	a5,0x125
 a30:	f8078793          	addi	a5,a5,-128 # 124f80 <main.c.d00da230+0x122a74>
 a34:	973e                	add	a4,a4,a5
	while( ((int32_t)( SysTick->CNT - targend )) < 0 );
 a36:	469c                	lw	a5,8(a3)
 a38:	8f99                	sub	a5,a5,a4
 a3a:	fe07cee3          	bltz	a5,a36 <main+0x52>
 * init I2C and GPIO
 */
uint8_t ssd1306_i2c_init(void)
{
	// Enable GPIOC and I2C
	RCC->APB2PCENR |= RCC_APB2Periph_GPIOC;
 a3e:	400217b7          	lui	a5,0x40021
 a42:	4f98                	lw	a4,24(a5)
	RCC->APB1PCENR |= RCC_APB1Periph_I2C1;
 a44:	002006b7          	lui	a3,0x200
{
	// pulse reset
	ssd1306_rst();
	
	// initialize OLED
	uint8_t *cmd_list = (uint8_t *)ssd1306_init_array;
 a48:	6405                	lui	s0,0x1
	RCC->APB2PCENR |= RCC_APB2Periph_GPIOC;
 a4a:	01076713          	ori	a4,a4,16
 a4e:	cf98                	sw	a4,24(a5)
	RCC->APB1PCENR |= RCC_APB1Periph_I2C1;
 a50:	4fd8                	lw	a4,28(a5)
 a52:	db840413          	addi	s0,s0,-584 # db8 <ssd1306_init_array>
 a56:	8f55                	or	a4,a4,a3
 a58:	cfd8                	sw	a4,28(a5)
	
	// PC1 is SDA, 10MHz Output, alt func, open-drain
	GPIOC->CFGLR &= ~(0xf<<(4*1));
 a5a:	400117b7          	lui	a5,0x40011
 a5e:	4398                	lw	a4,0(a5)
	GPIOC->CFGLR |= (GPIO_Speed_10MHz | GPIO_CNF_OUT_OD_AF)<<(4*1);
	
	// PC2 is SCL, 10MHz Output, alt func, open-drain
	GPIOC->CFGLR &= ~(0xf<<(4*2));
 a60:	76fd                	lui	a3,0xfffff
 a62:	0ff68693          	addi	a3,a3,255 # fffff0ff <__global_pointer$+0xdfffe8ff>
	GPIOC->CFGLR &= ~(0xf<<(4*1));
 a66:	f0f77713          	andi	a4,a4,-241
 a6a:	c398                	sw	a4,0(a5)
	GPIOC->CFGLR |= (GPIO_Speed_10MHz | GPIO_CNF_OUT_OD_AF)<<(4*1);
 a6c:	4398                	lw	a4,0(a5)
 a6e:	0d076713          	ori	a4,a4,208
 a72:	c398                	sw	a4,0(a5)
	GPIOC->CFGLR &= ~(0xf<<(4*2));
 a74:	4398                	lw	a4,0(a5)
 a76:	8f75                	and	a4,a4,a3
 a78:	c398                	sw	a4,0(a5)
	GPIOC->CFGLR |= (GPIO_Speed_10MHz | GPIO_CNF_OUT_OD_AF)<<(4*2);
 a7a:	4398                	lw	a4,0(a5)
 a7c:	6685                	lui	a3,0x1
 a7e:	d0068693          	addi	a3,a3,-768 # d00 <main+0x31c>
 a82:	8f55                	or	a4,a4,a3
 a84:	c398                	sw	a4,0(a5)
	GPIOC->CFGLR |= (GPIO_Speed_10MHz | GPIO_CNF_OUT_PP)<<(4*4);
	GPIOC->BSHR = (1<<(16+4));
#endif

	// load I2C regs
	ssd1306_i2c_setup();
 a86:	83bff0ef          	jal	2c0 <ssd1306_i2c_setup>
	while(*cmd_list != SSD1306_TERMINATE_CMDS)
 a8a:	00044503          	lbu	a0,0(s0)
 a8e:	0ff00793          	li	a5,255
 a92:	0af51263          	bne	a0,a5,b36 <main+0x152>
		if(ssd1306_cmd(*cmd_list++))
			return 1;
	}
	
	// clear display
	ssd1306_setbuf(0);
 a96:	35bd                	jal	904 <ssd1306_setbuf.constprop.0>
    for (int i = 0; i < 30; i+=2) {
 a98:	4401                	li	s0,0
	ssd1306_refresh();
 a9a:	3d59                	jal	930 <ssd1306_refresh>
      ssd1306_setbuf(0);
 a9c:	35a5                	jal	904 <ssd1306_setbuf.constprop.0>
      ssd1306_drawImage(i, 0, title, 24, 64, 0);
 a9e:	6485                	lui	s1,0x1
 aa0:	4781                	li	a5,0
 aa2:	04000713          	li	a4,64
 aa6:	46e1                	li	a3,24
 aa8:	e1c48613          	addi	a2,s1,-484 # e1c <title>
 aac:	4581                	li	a1,0
 aae:	8522                	mv	a0,s0
 ab0:	865ff0ef          	jal	314 <ssd1306_drawImage>
      ssd1306_refresh();
 ab4:	3db5                	jal	930 <ssd1306_refresh>
	uint32_t targend = SysTick->CNT + n;
 ab6:	e000f6b7          	lui	a3,0xe000f
 aba:	4698                	lw	a4,8(a3)
 abc:	000927b7          	lui	a5,0x92
 ac0:	7c078793          	addi	a5,a5,1984 # 927c0 <main.c.d00da230+0x902b4>
 ac4:	973e                	add	a4,a4,a5
	while( ((int32_t)( SysTick->CNT - targend )) < 0 );
 ac6:	469c                	lw	a5,8(a3)
 ac8:	8f99                	sub	a5,a5,a4
 aca:	fe07cee3          	bltz	a5,ac6 <main+0xe2>
    for (int i = 0; i < 30; i+=2) {
 ace:	0409                	addi	s0,s0,2
 ad0:	47f9                	li	a5,30
 ad2:	fcf415e3          	bne	s0,a5,a9c <main+0xb8>
    int c = 0;
 ad6:	4401                	li	s0,0
    bool button_state = false;
 ad8:	c602                	sw	zero,12(sp)
      ssd1306_setbuf(0);
 ada:	352d                	jal	904 <ssd1306_setbuf.constprop.0>
      ssd1306_drawImage(30, 0, title, 24, 64, 0);
 adc:	4781                	li	a5,0
 ade:	e1c48613          	addi	a2,s1,-484
 ae2:	04000713          	li	a4,64
 ae6:	46e1                	li	a3,24
 ae8:	4581                	li	a1,0
 aea:	4579                	li	a0,30
 aec:	829ff0ef          	jal	314 <ssd1306_drawImage>
      if (c > 50) {
 af0:	03200793          	li	a5,50
 af4:	6605                	lui	a2,0x1
 af6:	0487d363          	bge	a5,s0,b3c <main+0x158>
        ssd1306_drawImage(80, 20, start, 24, 24, 0);
 afa:	4781                	li	a5,0
        ssd1306_drawImage(80, 20, start, 24, 24, 1);
 afc:	4761                	li	a4,24
 afe:	86ba                	mv	a3,a4
 b00:	dd460613          	addi	a2,a2,-556 # dd4 <start>
 b04:	45d1                	li	a1,20
 b06:	05000513          	li	a0,80
 b0a:	80bff0ef          	jal	314 <ssd1306_drawImage>
      ssd1306_refresh();
 b0e:	350d                	jal	930 <ssd1306_refresh>
      uint8_t button_is_pressed = !GPIO_digitalRead(BTN_PIN);
 b10:	400117b7          	lui	a5,0x40011
 b14:	40078793          	addi	a5,a5,1024 # 40011400 <__global_pointer$+0x20010c00>
 b18:	479c                	lw	a5,8(a5)
      if (button_state && !button_is_pressed){
 b1a:	4732                	lw	a4,12(sp)
 b1c:	8b89                	andi	a5,a5,2
 b1e:	c311                	beqz	a4,b22 <main+0x13e>
 b20:	e385                	bnez	a5,b40 <main+0x15c>
      button_state = button_is_pressed;
 b22:	0017b793          	seqz	a5,a5
 b26:	c63e                	sw	a5,12(sp)
      c ++;      
 b28:	0405                	addi	s0,s0,1
      if (c > 100) {
 b2a:	06500793          	li	a5,101
 b2e:	faf416e3          	bne	s0,a5,ada <main+0xf6>
        c = 0;
 b32:	4401                	li	s0,0
 b34:	b75d                	j	ada <main+0xf6>
		if(ssd1306_cmd(*cmd_list++))
 b36:	0405                	addi	s0,s0,1
 b38:	3b79                	jal	8d6 <ssd1306_cmd.isra.0>
 b3a:	bf81                	j	a8a <main+0xa6>
        ssd1306_drawImage(80, 20, start, 24, 24, 1);
 b3c:	4785                	li	a5,1
 b3e:	bf7d                	j	afc <main+0x118>
		ssd1306_init();

    opening();
    
    // clear display
    ssd1306_setbuf(0);
 b40:	33d1                	jal	904 <ssd1306_setbuf.constprop.0>
    ssd1306_refresh();
 b42:	33fd                	jal	930 <ssd1306_refresh>
  int random_n = get_random();
 b44:	8c1ff0ef          	jal	404 <get_random>
  int character_x = 130;
 b48:	08200793          	li	a5,130
 b4c:	c03e                	sw	a5,0(sp)
  int kuina_y = init_kuina_y;
 b4e:	02d00793          	li	a5,45
  int random_n = get_random();
 b52:	c82a                	sw	a0,16(sp)
  int character_num = 0;
 b54:	4481                	li	s1,0
  bool danger_flag = false;
 b56:	4701                	li	a4,0
  int jump_progress = 0;
 b58:	c402                	sw	zero,8(sp)
  bool jump_flag = false;
 b5a:	ca02                	sw	zero,20(sp)
  bool button_state = false;
 b5c:	ce02                	sw	zero,28(sp)
  bool flip_flag = false;
 b5e:	4401                	li	s0,0
  int flip_c = 0;
 b60:	cc02                	sw	zero,24(sp)
  int kuina_y = init_kuina_y;
 b62:	c23e                	sw	a5,4(sp)
    uint8_t button_is_pressed = !GPIO_digitalRead(BTN_PIN); 
 b64:	400117b7          	lui	a5,0x40011
 b68:	40078793          	addi	a5,a5,1024 # 40011400 <__global_pointer$+0x20010c00>
 b6c:	479c                	lw	a5,8(a5)
    if (!button_state && button_is_pressed && !jump_flag){
 b6e:	46f2                	lw	a3,28(sp)
 b70:	8b89                	andi	a5,a5,2
 b72:	e291                	bnez	a3,b76 <main+0x192>
 b74:	c7d5                	beqz	a5,c20 <main+0x23c>
    button_state = button_is_pressed;
 b76:	0017b793          	seqz	a5,a5
 b7a:	ce3e                	sw	a5,28(sp)
    if (jump_flag && (max_jump * 2) < jump_progress){
 b7c:	47d2                	lw	a5,20(sp)
 b7e:	c395                	beqz	a5,ba2 <main+0x1be>
 b80:	46a2                	lw	a3,8(sp)
 b82:	03200793          	li	a5,50
 b86:	0ad7c363          	blt	a5,a3,c2c <main+0x248>
    else if (jump_flag && max_jump >= jump_progress){
 b8a:	4622                	lw	a2,8(sp)
      jump_progress += 1;
 b8c:	00168793          	addi	a5,a3,1 # e000f001 <__global_pointer$+0xc000e801>
    else if (jump_flag && max_jump >= jump_progress){
 b90:	46e5                	li	a3,25
 b92:	08c6ca63          	blt	a3,a2,c26 <main+0x242>
      kuina_y -= 1;
 b96:	4692                	lw	a3,4(sp)
 b98:	16fd                	addi	a3,a3,-1
      jump_progress += 1;
 b9a:	c43e                	sw	a5,8(sp)
      kuina_y += 1;
 b9c:	47b2                	lw	a5,12(sp)
 b9e:	c236                	sw	a3,4(sp)
 ba0:	ca3e                	sw	a5,20(sp)
    flip_c ++;
 ba2:	47e2                	lw	a5,24(sp)
 ba4:	0785                	addi	a5,a5,1
 ba6:	cc3e                	sw	a5,24(sp)
    if (flip_c > 20) {
 ba8:	46e2                	lw	a3,24(sp)
 baa:	47d5                	li	a5,21
 bac:	00f69563          	bne	a3,a5,bb6 <main+0x1d2>
      flip_flag = !flip_flag;
 bb0:	00144413          	xori	s0,s0,1
      flip_c = 0;
 bb4:	cc02                	sw	zero,24(sp)
    if (!danger_flag){
 bb6:	e701                	bnez	a4,bbe <main+0x1da>
      random_n = get_random();
 bb8:	84dff0ef          	jal	404 <get_random>
 bbc:	c82a                	sw	a0,16(sp)
      if (random_n <= 5){
 bbe:	4742                	lw	a4,16(sp)
 bc0:	4795                	li	a5,5
 bc2:	16e7d263          	bge	a5,a4,d26 <main+0x342>
      else if (random_n <= 8){
 bc6:	47a1                	li	a5,8
 bc8:	12e7dc63          	bge	a5,a4,d00 <main+0x31c>
      else if (random_n <= 9){
 bcc:	47a5                	li	a5,9
 bce:	12f70b63          	beq	a4,a5,d04 <main+0x320>
      else if (random_n <= 10){
 bd2:	47a9                	li	a5,10
 bd4:	12f70a63          	beq	a4,a5,d08 <main+0x324>
    if (flip_flag){
 bd8:	cc45                	beqz	s0,c90 <main+0x2ac>
      if (character_num == 0){
 bda:	ecb9                	bnez	s1,c38 <main+0x254>
        ssd1306_drawImage(character_x, character_y, grass_1, 8, 8, 0);
 bdc:	4502                	lw	a0,0(sp)
 bde:	4721                	li	a4,8
 be0:	4781                	li	a5,0
 be2:	86ba                	mv	a3,a4
 be4:	81818613          	addi	a2,gp,-2024 # 20000018 <grass_1>
 be8:	03500593          	li	a1,53
 bec:	f28ff0ef          	jal	314 <ssd1306_drawImage>
 bf0:	4481                	li	s1,0
      ssd1306_drawImage(kuina_x, kuina_y, kuina_1, 16, 16, 0);
 bf2:	4741                	li	a4,16
 bf4:	6605                	lui	a2,0x1
 bf6:	4781                	li	a5,0
 bf8:	86ba                	mv	a3,a4
 bfa:	f0c60613          	addi	a2,a2,-244 # f0c <kuina_1>
      ssd1306_drawImage(kuina_x, kuina_y, kuina_2, 16, 16, 0);
 bfe:	4592                	lw	a1,4(sp)
 c00:	453d                	li	a0,15
 c02:	f12ff0ef          	jal	314 <ssd1306_drawImage>
    character_x -= 1;
 c06:	4782                	lw	a5,0(sp)
 c08:	17fd                	addi	a5,a5,-1
 c0a:	c03e                	sw	a5,0(sp)
    if (character_x < 0){
 c0c:	4702                	lw	a4,0(sp)
 c0e:	57fd                	li	a5,-1
 c10:	0ef70363          	beq	a4,a5,cf6 <main+0x312>
 c14:	4732                	lw	a4,12(sp)
 c16:	d03a                	sw	a4,32(sp)
    ssd1306_refresh();
 c18:	3b21                	jal	930 <ssd1306_refresh>
    ssd1306_setbuf(0);
 c1a:	31ed                	jal	904 <ssd1306_setbuf.constprop.0>
  while (1) {
 c1c:	5702                	lw	a4,32(sp)
 c1e:	b799                	j	b64 <main+0x180>
    button_state = button_is_pressed;
 c20:	47b2                	lw	a5,12(sp)
 c22:	ce3e                	sw	a5,28(sp)
 c24:	bfb1                	j	b80 <main+0x19c>
      kuina_y += 1;
 c26:	4692                	lw	a3,4(sp)
 c28:	0685                	addi	a3,a3,1
 c2a:	bf85                	j	b9a <main+0x1b6>
      kuina_y = init_kuina_y;
 c2c:	02d00793          	li	a5,45
      jump_progress = 0;
 c30:	c402                	sw	zero,8(sp)
      jump_flag = false;
 c32:	ca02                	sw	zero,20(sp)
      kuina_y = init_kuina_y;
 c34:	c23e                	sw	a5,4(sp)
 c36:	b7b5                	j	ba2 <main+0x1be>
      else if (character_num == 1){
 c38:	4785                	li	a5,1
 c3a:	00f49f63          	bne	s1,a5,c58 <main+0x274>
        ssd1306_drawImage(character_x, character_y, pineapple_1, 16, 16, 0);
 c3e:	4502                	lw	a0,0(sp)
 c40:	4741                	li	a4,16
 c42:	6605                	lui	a2,0x1
 c44:	4781                	li	a5,0
 c46:	86ba                	mv	a3,a4
 c48:	f3c60613          	addi	a2,a2,-196 # f3c <pineapple_1>
 c4c:	03500593          	li	a1,53
 c50:	ec4ff0ef          	jal	314 <ssd1306_drawImage>
 c54:	4485                	li	s1,1
 c56:	bf71                	j	bf2 <main+0x20e>
      else if (character_num == 2){
 c58:	4789                	li	a5,2
 c5a:	00f49f63          	bne	s1,a5,c78 <main+0x294>
        ssd1306_drawImage(character_x, character_y, mongoose_1, 16, 8, 0);
 c5e:	4502                	lw	a0,0(sp)
 c60:	6605                	lui	a2,0x1
 c62:	4781                	li	a5,0
 c64:	4721                	li	a4,8
 c66:	46c1                	li	a3,16
 c68:	f2c60613          	addi	a2,a2,-212 # f2c <mongoose_1>
 c6c:	03500593          	li	a1,53
 c70:	ea4ff0ef          	jal	314 <ssd1306_drawImage>
 c74:	4489                	li	s1,2
 c76:	bfb5                	j	bf2 <main+0x20e>
        ssd1306_drawImage(character_x, character_y, earthworm_1, 8, 8, 0);
 c78:	4502                	lw	a0,0(sp)
 c7a:	4721                	li	a4,8
 c7c:	4781                	li	a5,0
 c7e:	86ba                	mv	a3,a4
 c80:	81018613          	addi	a2,gp,-2032 # 20000010 <earthworm_1>
 c84:	03500593          	li	a1,53
 c88:	e8cff0ef          	jal	314 <ssd1306_drawImage>
 c8c:	448d                	li	s1,3
 c8e:	b795                	j	bf2 <main+0x20e>
      if (character_num == 0){
 c90:	e09d                	bnez	s1,cb6 <main+0x2d2>
        ssd1306_drawImage(character_x, character_y, grass_1, 8, 8, 0);
 c92:	4502                	lw	a0,0(sp)
 c94:	4721                	li	a4,8
 c96:	4781                	li	a5,0
 c98:	86ba                	mv	a3,a4
 c9a:	81818613          	addi	a2,gp,-2024 # 20000018 <grass_1>
 c9e:	03500593          	li	a1,53
 ca2:	e72ff0ef          	jal	314 <ssd1306_drawImage>
 ca6:	4481                	li	s1,0
      ssd1306_drawImage(kuina_x, kuina_y, kuina_2, 16, 16, 0);
 ca8:	4741                	li	a4,16
 caa:	6605                	lui	a2,0x1
 cac:	4781                	li	a5,0
 cae:	86ba                	mv	a3,a4
 cb0:	edc60613          	addi	a2,a2,-292 # edc <kuina_2>
 cb4:	b7a9                	j	bfe <main+0x21a>
      else if (character_num == 1){
 cb6:	4785                	li	a5,1
 cb8:	00f49f63          	bne	s1,a5,cd6 <main+0x2f2>
        ssd1306_drawImage(character_x, character_y, pineapple_1, 16, 16, 0);
 cbc:	4502                	lw	a0,0(sp)
 cbe:	4741                	li	a4,16
 cc0:	6605                	lui	a2,0x1
 cc2:	4781                	li	a5,0
 cc4:	86ba                	mv	a3,a4
 cc6:	f3c60613          	addi	a2,a2,-196 # f3c <pineapple_1>
 cca:	03500593          	li	a1,53
 cce:	e46ff0ef          	jal	314 <ssd1306_drawImage>
 cd2:	4485                	li	s1,1
 cd4:	bfd1                	j	ca8 <main+0x2c4>
      else if (character_num == 2){
 cd6:	4789                	li	a5,2
 cd8:	02f49963          	bne	s1,a5,d0a <main+0x326>
        ssd1306_drawImage(character_x, character_y, mongoose_2, 16, 8, 0);
 cdc:	4502                	lw	a0,0(sp)
 cde:	6605                	lui	a2,0x1
 ce0:	4781                	li	a5,0
 ce2:	4721                	li	a4,8
 ce4:	46c1                	li	a3,16
 ce6:	efc60613          	addi	a2,a2,-260 # efc <mongoose_2>
 cea:	03500593          	li	a1,53
 cee:	e26ff0ef          	jal	314 <ssd1306_drawImage>
 cf2:	4489                	li	s1,2
 cf4:	bf55                	j	ca8 <main+0x2c4>
      character_x = 130;
 cf6:	08200793          	li	a5,130
      danger_flag = false;
 cfa:	4701                	li	a4,0
      character_x = 130;
 cfc:	c03e                	sw	a5,0(sp)
 cfe:	bf21                	j	c16 <main+0x232>
    if (flip_flag){
 d00:	fc1d                	bnez	s0,c3e <main+0x25a>
 d02:	bf6d                	j	cbc <main+0x2d8>
 d04:	fc29                	bnez	s0,c5e <main+0x27a>
 d06:	bfd9                	j	cdc <main+0x2f8>
 d08:	f825                	bnez	s0,c78 <main+0x294>
        ssd1306_drawImage(character_x, character_y, earthworm_2, 8, 8, 0);
 d0a:	4502                	lw	a0,0(sp)
 d0c:	4721                	li	a4,8
 d0e:	20000637          	lui	a2,0x20000
 d12:	4781                	li	a5,0
 d14:	86ba                	mv	a3,a4
 d16:	00860613          	addi	a2,a2,8 # 20000008 <earthworm_2>
 d1a:	03500593          	li	a1,53
 d1e:	df6ff0ef          	jal	314 <ssd1306_drawImage>
 d22:	448d                	li	s1,3
 d24:	b751                	j	ca8 <main+0x2c4>
    if (flip_flag){
 d26:	ea041be3          	bnez	s0,bdc <main+0x1f8>
 d2a:	b7a5                	j	c92 <main+0x2ae>
 d2c:	31647373          	.insn	4, 0x31647373
 d30:	5f363033          	.insn	4, 0x5f363033
 d34:	3269                	jal	6be <mini_vpprintf+0xf8>
 d36:	72655f63          	bge	a0,t1,1474 <_data_lma+0x518>
 d3a:	6f72                	.insn	2, 0x6f72
 d3c:	2072                	.insn	2, 0x2072
 d3e:	202d                	jal	d68 <main+0x384>
 d40:	6974                	.insn	2, 0x6974
 d42:	656d                	lui	a0,0x1b
 d44:	2074756f          	jal	a0,4874a <main.c.d00da230+0x4623e>
 d48:	74696177          	.insn	4, 0x74696177
 d4c:	6e69                	lui	t3,0x1a
 d4e:	6f662067          	.insn	4, 0x6f662067
 d52:	2072                	.insn	2, 0x2072
 d54:	7325                	lui	t1,0xfffe9
 d56:	0d0a                	slli	s10,s10,0x2
 d58:	0000                	unimp
 d5a:	0000                	unimp
 d5c:	6f6e                	.insn	2, 0x6f6e
 d5e:	2074                	.insn	2, 0x2074
 d60:	7562                	.insn	2, 0x7562
 d62:	00007973          	.insn	4, 0x7973
 d66:	0000                	unimp
 d68:	616d                	addi	sp,sp,240
 d6a:	72657473          	.insn	4, 0x72657473
 d6e:	6d20                	.insn	2, 0x6d20
 d70:	0065646f          	jal	s0,56d76 <main.c.d00da230+0x5486a>
 d74:	7274                	.insn	2, 0x7274
 d76:	6e61                	lui	t3,0x18
 d78:	74696d73          	.insn	4, 0x74696d73
 d7c:	6d20                	.insn	2, 0x6d20
 d7e:	0065646f          	jal	s0,56d84 <main.c.d00da230+0x54878>
 d82:	0000                	unimp
 d84:	7874                	.insn	2, 0x7874
 d86:	6520                	.insn	2, 0x6520
 d88:	706d                	c.lui	zero,0xffffb
 d8a:	7974                	.insn	2, 0x7974
 d8c:	0000                	unimp
 d8e:	0000                	unimp
 d90:	7274                	.insn	2, 0x7274
 d92:	6e61                	lui	t3,0x18
 d94:	74696d73          	.insn	4, 0x74696d73
 d98:	6320                	.insn	2, 0x6320
 d9a:	6c706d6f          	jal	s10,7c60 <main.c.d00da230+0x5754>
 d9e:	7465                	lui	s0,0xffff9
 da0:	0065                	c.nop	25
	...

00000da4 <errstr>:
 da4:	0d5c 0000 0d68 0000 0d74 0000 0d84 0000     \...h...t.......
 db4:	0d90 0000                                   ....

00000db8 <ssd1306_init_array>:
 db8:	d5ae a880 d33f 4000 148d 0020 c8a1 12da     ....?..@.. .....
 dc8:	8f81 f1d9 40db a6a4 ffaf 0000               .....@......

00000dd4 <start>:
 dd4:	0000 0000 0004 7c00 0000 0004 0000 0000     .......|........
 de4:	0068 1400 0000 0014 7800 0000 0000 7800     h........x.....x
 df4:	0000 0014 1400 0000 0078 0000 0000 0004     ........x.......
 e04:	7c00 0000 0004 0000 0000 0024 5400 0000     .|........$..T..
 e14:	0054 4800 0000 0000                         T..H....

00000e1c <title>:
	...
 e24:	0000 00f8 0401 0200 00fa 0603 0200 0002     ................
 e34:	0202 0300 00fe 0202 0300 00fe 0000 0000     ................
 e44:	0000 fe03 0200 0002 fe03 0000 0000 0000     ................
 e54:	0000 00f8 0401 0200 00fa 0603 0200 0002     ................
 e64:	0202 0200 0002 0401 0000 00f8 0000 0000     ................
 e74:	0006 1800 0000 0020 c000 0300 00b0 dc00     ...... .........
 e84:	0000 0026 1a00 0000 0006 0000 0000 00f8     ..&.............
 e94:	0401 0200 00fa 0603 0200 0002 0202 0200     ................
 ea4:	0002 0401 0000 00f8 0000 0300 00fe 0202     ................
 eb4:	0300 00fe 0400 0000 0018 6000 0100 00a0     ...........`....
 ec4:	5000 0000 002c 1600 0300 00fe 0000 0000     .P..,...........
	...

00000edc <kuina_2>:
 edc:	c03f c03f c0f3 c0f3 fc3f fc3f ff33 ff33     ?.?.....?.?.3.3.
 eec:	cf00 cf00 3c33 3c33 c00c c00c 3030 3030     ....3<3<....0000

00000efc <mongoose_2>:
 efc:	1800 1e00 ff1f ff7f fecf f007 3006 300e     .............0.0

00000f0c <kuina_1>:
 f0c:	c03f c03f c0f3 c0f3 fc3f fc3f ff33 ff33     ?.?.....?.?.3.3.
 f1c:	cf00 cf00 3c33 3c33 c00c c00c c00c c00c     ....3<3<........

00000f2c <mongoose_1>:
 f2c:	0800 8e0f ff1f fd7f ffee f08f 681e 4c13     .............h.L

00000f3c <pineapple_1>:
 f3c:	0008 600c 4862 b01b 600f c007 600d a00a     ...`bH...`...`..
 f4c:	600d a00a 600d c7e7 1e79 f81f f00f c007     .`...`..y.......
