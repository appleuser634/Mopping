
main.elf:     file format elf32-littleriscv


Disassembly of section .init:

00000000 <InterruptVector>:
   0:	7120006f          	j	712 <handle_reset>
   4:	00000000          	.word	0x00000000
   8:	00000790          	.word	0x00000790
   c:	0000078e          	.word	0x0000078e
	...
  30:	0000078e          	.word	0x0000078e
  34:	00000000          	.word	0x00000000
  38:	0000078e          	.word	0x0000078e
  3c:	00000000          	.word	0x00000000
  40:	0000078e          	.word	0x0000078e
  44:	0000078e          	.word	0x0000078e
  48:	0000078e          	.word	0x0000078e
  4c:	0000078e          	.word	0x0000078e
  50:	0000078e          	.word	0x0000078e
  54:	0000078e          	.word	0x0000078e
  58:	0000078e          	.word	0x0000078e
  5c:	0000078e          	.word	0x0000078e
  60:	0000078e          	.word	0x0000078e
  64:	0000078e          	.word	0x0000078e
  68:	0000078e          	.word	0x0000078e
  6c:	0000078e          	.word	0x0000078e
  70:	0000078e          	.word	0x0000078e
  74:	0000078e          	.word	0x0000078e
  78:	0000078e          	.word	0x0000078e
  7c:	0000078e          	.word	0x0000078e
  80:	0000078e          	.word	0x0000078e
  84:	0000078e          	.word	0x0000078e
  88:	0000078e          	.word	0x0000078e
  8c:	0000078e          	.word	0x0000078e
  90:	0000078e          	.word	0x0000078e
  94:	0000078e          	.word	0x0000078e
  98:	0000078e          	.word	0x0000078e
  9c:	0000                	.insn	2, 0x
	...

Disassembly of section .text:

000000a0 <__divsi3>:
      a0:	02054e63          	bltz	a0,dc <__umodsi3+0x8>
      a4:	0405c363          	bltz	a1,ea <__umodsi3+0x16>

000000a8 <__hidden___udivsi3>:
      a8:	862e                	mv	a2,a1
      aa:	85aa                	mv	a1,a0
      ac:	557d                	li	a0,-1
      ae:	c215                	beqz	a2,d2 <__hidden___udivsi3+0x2a>
      b0:	4685                	li	a3,1
      b2:	00b67863          	bgeu	a2,a1,c2 <__hidden___udivsi3+0x1a>
      b6:	00c05663          	blez	a2,c2 <__hidden___udivsi3+0x1a>
      ba:	0606                	sll	a2,a2,0x1
      bc:	0686                	sll	a3,a3,0x1
      be:	feb66ce3          	bltu	a2,a1,b6 <__hidden___udivsi3+0xe>
      c2:	4501                	li	a0,0
      c4:	00c5e463          	bltu	a1,a2,cc <__hidden___udivsi3+0x24>
      c8:	8d91                	sub	a1,a1,a2
      ca:	8d55                	or	a0,a0,a3
      cc:	8285                	srl	a3,a3,0x1
      ce:	8205                	srl	a2,a2,0x1
      d0:	faf5                	bnez	a3,c4 <__hidden___udivsi3+0x1c>
      d2:	8082                	ret

000000d4 <__umodsi3>:
      d4:	8286                	mv	t0,ra
      d6:	3fc9                	jal	a8 <__hidden___udivsi3>
      d8:	852e                	mv	a0,a1
      da:	8282                	jr	t0
      dc:	40a00533          	neg	a0,a0
      e0:	00b04763          	bgtz	a1,ee <__umodsi3+0x1a>
      e4:	40b005b3          	neg	a1,a1
      e8:	b7c1                	j	a8 <__hidden___udivsi3>
      ea:	40b005b3          	neg	a1,a1
      ee:	8286                	mv	t0,ra
      f0:	3f65                	jal	a8 <__hidden___udivsi3>
      f2:	40a00533          	neg	a0,a0
      f6:	8282                	jr	t0

000000f8 <__modsi3>:
      f8:	8286                	mv	t0,ra
      fa:	0005c763          	bltz	a1,108 <__modsi3+0x10>
      fe:	00054963          	bltz	a0,110 <__modsi3+0x18>
     102:	375d                	jal	a8 <__hidden___udivsi3>
     104:	852e                	mv	a0,a1
     106:	8282                	jr	t0
     108:	40b005b3          	neg	a1,a1
     10c:	fe055be3          	bgez	a0,102 <__modsi3+0xa>
     110:	40a00533          	neg	a0,a0
     114:	3f51                	jal	a8 <__hidden___udivsi3>
     116:	40b00533          	neg	a0,a1
     11a:	8282                	jr	t0
	...

0000011e <mini_pad>:
     11e:	1131                	add	sp,sp,-20
     120:	c426                	sw	s1,8(sp)
     122:	c806                	sw	ra,16(sp)
     124:	c622                	sw	s0,12(sp)
     126:	84ae                	mv	s1,a1
     128:	87aa                	mv	a5,a0
     12a:	85b2                	mv	a1,a2
     12c:	c699                	beqz	a3,13a <mini_pad+0x1c>
     12e:	4301                	li	t1,0
     130:	0096d763          	bge	a3,s1,13e <mini_pad+0x20>
     134:	84b6                	mv	s1,a3
     136:	4305                	li	t1,1
     138:	a019                	j	13e <mini_pad+0x20>
     13a:	4301                	li	t1,0
     13c:	86a6                	mv	a3,s1
     13e:	40968433          	sub	s0,a3,s1
     142:	00045363          	bgez	s0,148 <mini_pad+0x2a>
     146:	4401                	li	s0,0
     148:	8622                	mv	a2,s0
     14a:	853a                	mv	a0,a4
     14c:	c23e                	sw	a5,4(sp)
     14e:	c01a                	sw	t1,0(sp)
     150:	05b000ef          	jal	9aa <memset>
     154:	4302                	lw	t1,0(sp)
     156:	4792                	lw	a5,4(sp)
     158:	872a                	mv	a4,a0
     15a:	008506b3          	add	a3,a0,s0
     15e:	4601                	li	a2,0
     160:	40c485b3          	sub	a1,s1,a2
     164:	04b04263          	bgtz	a1,1a8 <mini_pad+0x8a>
     168:	0004d363          	bgez	s1,16e <mini_pad+0x50>
     16c:	4481                	li	s1,0
     16e:	009685b3          	add	a1,a3,s1
     172:	40e58533          	sub	a0,a1,a4
     176:	02030463          	beqz	t1,19e <mini_pad+0x80>
     17a:	02b77263          	bgeu	a4,a1,19e <mini_pad+0x80>
     17e:	02a00793          	li	a5,42
     182:	fef58fa3          	sb	a5,-1(a1)
     186:	fff58693          	add	a3,a1,-1
     18a:	00d77a63          	bgeu	a4,a3,19e <mini_pad+0x80>
     18e:	fef58f23          	sb	a5,-2(a1)
     192:	ffe58693          	add	a3,a1,-2
     196:	00d77463          	bgeu	a4,a3,19e <mini_pad+0x80>
     19a:	fef58ea3          	sb	a5,-3(a1)
     19e:	40c2                	lw	ra,16(sp)
     1a0:	4432                	lw	s0,12(sp)
     1a2:	44a2                	lw	s1,8(sp)
     1a4:	0151                	add	sp,sp,20
     1a6:	8082                	ret
     1a8:	00c785b3          	add	a1,a5,a2
     1ac:	0005c503          	lbu	a0,0(a1)
     1b0:	00c685b3          	add	a1,a3,a2
     1b4:	0605                	add	a2,a2,1
     1b6:	00a58023          	sb	a0,0(a1)
     1ba:	b75d                	j	160 <mini_pad+0x42>

000001bc <DelaySysTick>:
     1bc:	e000f7b7          	lui	a5,0xe000f
     1c0:	479c                	lw	a5,8(a5)
     1c2:	e000f737          	lui	a4,0xe000f
     1c6:	953e                	add	a0,a0,a5
     1c8:	471c                	lw	a5,8(a4)
     1ca:	8f89                	sub	a5,a5,a0
     1cc:	fe07cee3          	bltz	a5,1c8 <DelaySysTick+0xc>
     1d0:	8082                	ret

000001d2 <mini_itoa.part.0>:
     1d2:	1101                	add	sp,sp,-32
     1d4:	ce06                	sw	ra,28(sp)
     1d6:	cc22                	sw	s0,24(sp)
     1d8:	ca26                	sw	s1,20(sp)
     1da:	c002                	sw	zero,0(sp)
     1dc:	832a                	mv	t1,a0
     1de:	00055763          	bgez	a0,1ec <mini_itoa.part.0+0x1a>
     1e2:	e689                	bnez	a3,1ec <mini_itoa.part.0+0x1a>
     1e4:	4785                	li	a5,1
     1e6:	40a00333          	neg	t1,a0
     1ea:	c03e                	sw	a5,0(sp)
     1ec:	8a05                	and	a2,a2,1
     1ee:	06100413          	li	s0,97
     1f2:	c219                	beqz	a2,1f8 <mini_itoa.part.0+0x26>
     1f4:	04100413          	li	s0,65
     1f8:	84ba                	mv	s1,a4
     1fa:	1459                	add	s0,s0,-10
     1fc:	851a                	mv	a0,t1
     1fe:	c83a                	sw	a4,16(sp)
     200:	c21a                	sw	t1,4(sp)
     202:	c62e                	sw	a1,12(sp)
     204:	c41a                	sw	t1,8(sp)
     206:	35f9                	jal	d4 <__umodsi3>
     208:	47a5                	li	a5,9
     20a:	4322                	lw	t1,8(sp)
     20c:	45b2                	lw	a1,12(sp)
     20e:	4742                	lw	a4,16(sp)
     210:	0ff57693          	zext.b	a3,a0
     214:	06a7e163          	bltu	a5,a0,276 <mini_itoa.part.0+0xa4>
     218:	03068693          	add	a3,a3,48
     21c:	0ff6f693          	zext.b	a3,a3
     220:	00148793          	add	a5,s1,1
     224:	00d48023          	sb	a3,0(s1)
     228:	851a                	mv	a0,t1
     22a:	c83a                	sw	a4,16(sp)
     22c:	c63e                	sw	a5,12(sp)
     22e:	c42e                	sw	a1,8(sp)
     230:	3da5                	jal	a8 <__hidden___udivsi3>
     232:	4692                	lw	a3,4(sp)
     234:	45a2                	lw	a1,8(sp)
     236:	47b2                	lw	a5,12(sp)
     238:	4742                	lw	a4,16(sp)
     23a:	832a                	mv	t1,a0
     23c:	02b6fb63          	bgeu	a3,a1,272 <mini_itoa.part.0+0xa0>
     240:	4682                	lw	a3,0(sp)
     242:	c699                	beqz	a3,250 <mini_itoa.part.0+0x7e>
     244:	02d00693          	li	a3,45
     248:	00d78023          	sb	a3,0(a5) # e000f000 <__global_pointer$+0xc000e800>
     24c:	00248793          	add	a5,s1,2
     250:	40e78533          	sub	a0,a5,a4
     254:	01f55693          	srl	a3,a0,0x1f
     258:	96aa                	add	a3,a3,a0
     25a:	00078023          	sb	zero,0(a5)
     25e:	8685                	sra	a3,a3,0x1
     260:	4601                	li	a2,0
     262:	17fd                	add	a5,a5,-1
     264:	00d64b63          	blt	a2,a3,27a <mini_itoa.part.0+0xa8>
     268:	40f2                	lw	ra,28(sp)
     26a:	4462                	lw	s0,24(sp)
     26c:	44d2                	lw	s1,20(sp)
     26e:	6105                	add	sp,sp,32
     270:	8082                	ret
     272:	84be                	mv	s1,a5
     274:	b761                	j	1fc <mini_itoa.part.0+0x2a>
     276:	96a2                	add	a3,a3,s0
     278:	b755                	j	21c <mini_itoa.part.0+0x4a>
     27a:	00c705b3          	add	a1,a4,a2
     27e:	0007c283          	lbu	t0,0(a5)
     282:	0005c303          	lbu	t1,0(a1)
     286:	0605                	add	a2,a2,1
     288:	00558023          	sb	t0,0(a1)
     28c:	00678023          	sb	t1,0(a5)
     290:	bfc9                	j	262 <mini_itoa.part.0+0x90>

00000292 <ssd1306_i2c_setup>:
void ssd1306_i2c_setup(void)
{
	uint16_t tempreg;
	
	// Reset I2C1 to init all regs
	RCC->APB1PRSTR |= RCC_APB1Periph_I2C1;
     292:	400217b7          	lui	a5,0x40021
     296:	4b98                	lw	a4,16(a5)
     298:	002006b7          	lui	a3,0x200
     29c:	8f55                	or	a4,a4,a3
     29e:	cb98                	sw	a4,16(a5)
	RCC->APB1PRSTR &= ~RCC_APB1Periph_I2C1;
     2a0:	4b98                	lw	a4,16(a5)
     2a2:	ffe006b7          	lui	a3,0xffe00
     2a6:	16fd                	add	a3,a3,-1 # ffdfffff <__global_pointer$+0xdfdff7ff>
     2a8:	8f75                	and	a4,a4,a3
     2aa:	cb98                	sw	a4,16(a5)
	
	// set freq
	tempreg = I2C1->CTLR2;
     2ac:	400057b7          	lui	a5,0x40005
     2b0:	4047d703          	lhu	a4,1028(a5) # 40005404 <__global_pointer$+0x20004c04>
	tempreg &= ~I2C_CTLR2_FREQ;
     2b4:	66c1                	lui	a3,0x10
     2b6:	fc068693          	add	a3,a3,-64 # ffc0 <main.c.de940cdd+0xd5ec>
     2ba:	8f75                	and	a4,a4,a3
	tempreg |= (FUNCONF_SYSTEM_CORE_CLOCK/SSD1306_I2C_PRERATE)&I2C_CTLR2_FREQ;
     2bc:	01876713          	or	a4,a4,24
	I2C1->CTLR2 = tempreg;
     2c0:	40e79223          	sh	a4,1028(a5)
	tempreg = (FUNCONF_SYSTEM_CORE_CLOCK/(25*SSD1306_I2C_CLKRATE))&I2C_CKCFGR_CCR;
	tempreg |= I2C_CKCFGR_DUTY;
#endif
	tempreg |= I2C_CKCFGR_FS;
#endif
	I2C1->CKCFGR = tempreg;
     2c4:	7771                	lui	a4,0xffffc
     2c6:	0705                	add	a4,a4,1 # ffffc001 <__global_pointer$+0xdfffb801>
     2c8:	40e79e23          	sh	a4,1052(a5)
	// initialize the state
	ssd1306_i2c_irq_state = 0;
#endif
	
	// Enable I2C
	I2C1->CTLR1 |= I2C_CTLR1_PE;
     2cc:	4007d703          	lhu	a4,1024(a5)
     2d0:	00176713          	or	a4,a4,1
     2d4:	40e79023          	sh	a4,1024(a5)

	// set ACK mode
	I2C1->CTLR1 |= I2C_CTLR1_ACK;
     2d8:	4007d703          	lhu	a4,1024(a5)
     2dc:	40076713          	or	a4,a4,1024
     2e0:	40e79023          	sh	a4,1024(a5)
}
     2e4:	8082                	ret

000002e6 <ssd1306_drawPixel>:
void ssd1306_drawPixel(uint8_t x, uint8_t y, uint8_t color)
{
	uint16_t addr;
	
	/* clip */
	if(x >= SSD1306_W)
     2e6:	01851793          	sll	a5,a0,0x18
     2ea:	87e1                	sra	a5,a5,0x18
     2ec:	0207c863          	bltz	a5,31c <ssd1306_drawPixel+0x36>
		return;
	if(y >= SSD1306_H)
     2f0:	47fd                	li	a5,31
     2f2:	02b7e563          	bltu	a5,a1,31c <ssd1306_drawPixel+0x36>
		return;
	
	/* compute buffer address */
	addr = x + SSD1306_W*(y/8);
     2f6:	0035d793          	srl	a5,a1,0x3
     2fa:	079e                	sll	a5,a5,0x7
	
	/* set/clear bit in buffer */
	if(color)
		ssd1306_buffer[addr] |= (1<<(y&7));
     2fc:	953e                	add	a0,a0,a5
     2fe:	200007b7          	lui	a5,0x20000
     302:	00078793          	mv	a5,a5
     306:	97aa                	add	a5,a5,a0
     308:	899d                	and	a1,a1,7
     30a:	4685                	li	a3,1
     30c:	0007c703          	lbu	a4,0(a5) # 20000000 <ssd1306_buffer>
     310:	00b695b3          	sll	a1,a3,a1
	if(color)
     314:	c609                	beqz	a2,31e <ssd1306_drawPixel+0x38>
		ssd1306_buffer[addr] |= (1<<(y&7));
     316:	8f4d                	or	a4,a4,a1
	else
		ssd1306_buffer[addr] &= ~(1<<(y&7));
     318:	00e78023          	sb	a4,0(a5)
}
     31c:	8082                	ret
		ssd1306_buffer[addr] &= ~(1<<(y&7));
     31e:	fff5c593          	not	a1,a1
     322:	8f6d                	and	a4,a4,a1
     324:	bfd5                	j	318 <ssd1306_drawPixel+0x32>

00000326 <ssd1306_drawFastHLine>:
 *  fast horiz line
 */
void ssd1306_drawFastHLine(uint8_t x, uint8_t y, uint8_t w, uint8_t color)
{
	// clipping
	if((x >= SSD1306_W) || (y >= SSD1306_H)) return;
     326:	01851713          	sll	a4,a0,0x18
     32a:	8761                	sra	a4,a4,0x18
     32c:	04074b63          	bltz	a4,382 <ssd1306_drawFastHLine+0x5c>
     330:	477d                	li	a4,31
     332:	04b76863          	bltu	a4,a1,382 <ssd1306_drawFastHLine+0x5c>
{
     336:	1131                	add	sp,sp,-20
     338:	87b2                	mv	a5,a2
     33a:	c806                	sw	ra,16(sp)
     33c:	8636                	mv	a2,a3
     33e:	c622                	sw	s0,12(sp)
     340:	c426                	sw	s1,8(sp)
	if((x+w-1) >= SSD1306_W)  w = SSD1306_W-x;
     342:	00f50733          	add	a4,a0,a5
     346:	08000693          	li	a3,128
     34a:	00e6d763          	bge	a3,a4,358 <ssd1306_drawFastHLine+0x32>
     34e:	f8000793          	li	a5,-128
     352:	8f89                	sub	a5,a5,a0
     354:	0ff7f793          	zext.b	a5,a5
     358:	97aa                	add	a5,a5,a0
     35a:	0ff7f413          	zext.b	s0,a5

	while (w--)
     35e:	00a41763          	bne	s0,a0,36c <ssd1306_drawFastHLine+0x46>
	{
        ssd1306_drawPixel(x++, y, color);
	}
}
     362:	40c2                	lw	ra,16(sp)
     364:	4432                	lw	s0,12(sp)
     366:	44a2                	lw	s1,8(sp)
     368:	0151                	add	sp,sp,20
     36a:	8082                	ret
        ssd1306_drawPixel(x++, y, color);
     36c:	00150793          	add	a5,a0,1
     370:	0ff7f493          	zext.b	s1,a5
     374:	c232                	sw	a2,4(sp)
     376:	c02e                	sw	a1,0(sp)
     378:	37bd                	jal	2e6 <ssd1306_drawPixel>
     37a:	4612                	lw	a2,4(sp)
     37c:	4582                	lw	a1,0(sp)
     37e:	8526                	mv	a0,s1
     380:	bff9                	j	35e <ssd1306_drawFastHLine+0x38>
     382:	8082                	ret

00000384 <ssd1306_drawstr_sz.constprop.0>:
{
    uint16_t i, j, col;
    uint8_t d;

    // Determine the font scale factor based on the font_size parameter
    uint8_t font_scale = (uint8_t)font_size;
     384:	0ff67713          	zext.b	a4,a2
	uint8_t c;
	
	while((c=*str++))
	{
		ssd1306_drawchar_sz(x, y, c, color, font_size);
		x += 8 * font_size;
     388:	00371793          	sll	a5,a4,0x3
void ssd1306_drawstr_sz(uint8_t x, uint8_t y, char *str, uint8_t color, font_size_t font_size)
     38c:	fbc10113          	add	sp,sp,-68
		x += 8 * font_size;
     390:	0ff7f793          	zext.b	a5,a5
     394:	c63e                	sw	a5,12(sp)
		if(x>128 - 8 * font_size)
     396:	47c1                	li	a5,16
     398:	8f91                	sub	a5,a5,a2
     39a:	078e                	sll	a5,a5,0x3
void ssd1306_drawstr_sz(uint8_t x, uint8_t y, char *str, uint8_t color, font_size_t font_size)
     39c:	de22                	sw	s0,60(sp)
     39e:	c086                	sw	ra,64(sp)
     3a0:	dc26                	sw	s1,56(sp)
     3a2:	ca2a                	sw	a0,20(sp)
     3a4:	c22e                	sw	a1,4(sp)
		if(x>128 - 8 * font_size)
     3a6:	c83e                	sw	a5,16(sp)
     3a8:	4401                	li	s0,0
	while((c=*str++))
     3aa:	4792                	lw	a5,4(sp)
     3ac:	0785                	add	a5,a5,1
     3ae:	c23e                	sw	a5,4(sp)
     3b0:	fff7c783          	lbu	a5,-1(a5)
     3b4:	c43e                	sw	a5,8(sp)
     3b6:	c3cd                	beqz	a5,458 <ssd1306_drawstr_sz.constprop.0+0xd4>
     3b8:	47d2                	lw	a5,20(sp)
     3ba:	4381                	li	t2,0
     3bc:	c03e                	sw	a5,0(sp)
        d = fontdata[(chr << 3) + i];
     3be:	47a2                	lw	a5,8(sp)
     3c0:	6685                	lui	a3,0x1
     3c2:	22068693          	add	a3,a3,544 # 1220 <fontdata>
     3c6:	078e                	sll	a5,a5,0x3
     3c8:	979e                	add	a5,a5,t2
     3ca:	97b6                	add	a5,a5,a3
     3cc:	0007c283          	lbu	t0,0(a5)
     3d0:	8322                	mv	t1,s0
     3d2:	46a1                	li	a3,8
            if (d & 0x80)
     3d4:	0072d613          	srl	a2,t0,0x7
            for (uint8_t k = 0; k < font_scale; k++) {
     3d8:	4781                	li	a5,0
                    ssd1306_drawPixel(x + (j * font_scale) + k, y + (i * font_scale) + l, col);
     3da:	00f30533          	add	a0,t1,a5
     3de:	0ff57513          	zext.b	a0,a0
                for (uint8_t l = 0; l < font_scale; l++) {
     3e2:	4481                	li	s1,0
     3e4:	d23e                	sw	a5,36(sp)
                    ssd1306_drawPixel(x + (j * font_scale) + k, y + (i * font_scale) + l, col);
     3e6:	4782                	lw	a5,0(sp)
     3e8:	da36                	sw	a3,52(sp)
     3ea:	d81a                	sw	t1,48(sp)
     3ec:	009785b3          	add	a1,a5,s1
     3f0:	0ff5f593          	zext.b	a1,a1
     3f4:	d61e                	sw	t2,44(sp)
     3f6:	d416                	sw	t0,40(sp)
     3f8:	d03a                	sw	a4,32(sp)
     3fa:	ce32                	sw	a2,28(sp)
     3fc:	cc2a                	sw	a0,24(sp)
     3fe:	35e5                	jal	2e6 <ssd1306_drawPixel>
                for (uint8_t l = 0; l < font_scale; l++) {
     400:	5702                	lw	a4,32(sp)
     402:	0485                	add	s1,s1,1
     404:	0ff4f493          	zext.b	s1,s1
     408:	4562                	lw	a0,24(sp)
     40a:	4672                	lw	a2,28(sp)
     40c:	5792                	lw	a5,36(sp)
     40e:	52a2                	lw	t0,40(sp)
     410:	53b2                	lw	t2,44(sp)
     412:	5342                	lw	t1,48(sp)
     414:	56d2                	lw	a3,52(sp)
     416:	fce4e7e3          	bltu	s1,a4,3e4 <ssd1306_drawstr_sz.constprop.0+0x60>
            for (uint8_t k = 0; k < font_scale; k++) {
     41a:	0785                	add	a5,a5,1
     41c:	0ff7f793          	zext.b	a5,a5
     420:	fae7ede3          	bltu	a5,a4,3da <ssd1306_drawstr_sz.constprop.0+0x56>
        for (j = 0; j < 8; j++)
     424:	16fd                	add	a3,a3,-1
     426:	06c2                	sll	a3,a3,0x10
            d <<= 1;
     428:	0286                	sll	t0,t0,0x1
        for (j = 0; j < 8; j++)
     42a:	933a                	add	t1,t1,a4
     42c:	82c1                	srl	a3,a3,0x10
            d <<= 1;
     42e:	0ff2f293          	zext.b	t0,t0
        for (j = 0; j < 8; j++)
     432:	0ff37313          	zext.b	t1,t1
     436:	fed9                	bnez	a3,3d4 <ssd1306_drawstr_sz.constprop.0+0x50>
    for (i = 0; i < 8; i++)
     438:	4782                	lw	a5,0(sp)
     43a:	0385                	add	t2,t2,1
     43c:	97ba                	add	a5,a5,a4
     43e:	0ff7f793          	zext.b	a5,a5
     442:	c03e                	sw	a5,0(sp)
     444:	47a1                	li	a5,8
     446:	f6f39ce3          	bne	t2,a5,3be <ssd1306_drawstr_sz.constprop.0+0x3a>
		x += 8 * font_size;
     44a:	47b2                	lw	a5,12(sp)
     44c:	943e                	add	s0,s0,a5
		if(x>128 - 8 * font_size)
     44e:	47c2                	lw	a5,16(sp)
		x += 8 * font_size;
     450:	0ff47413          	zext.b	s0,s0
		if(x>128 - 8 * font_size)
     454:	f487fbe3          	bgeu	a5,s0,3aa <ssd1306_drawstr_sz.constprop.0+0x26>
			break;
	}
}
     458:	4086                	lw	ra,64(sp)
     45a:	5472                	lw	s0,60(sp)
     45c:	54e2                	lw	s1,56(sp)
     45e:	04410113          	add	sp,sp,68
     462:	8082                	ret

00000464 <ssd1306_drawstr.constprop.0>:
void ssd1306_drawstr(uint8_t x, uint8_t y, char *str, uint8_t color)
     464:	fd810113          	add	sp,sp,-40
     468:	ce26                	sw	s1,28(sp)
     46a:	d206                	sw	ra,36(sp)
     46c:	d022                	sw	s0,32(sp)
     46e:	86aa                	mv	a3,a0
     470:	c22e                	sw	a1,4(sp)
		for(j=0;j<8;j++)
     472:	4481                	li	s1,0
		d = fontdata[(chr<<3)+i];
     474:	6285                	lui	t0,0x1
     476:	00349793          	sll	a5,s1,0x3
     47a:	0ff7f793          	zext.b	a5,a5
     47e:	c03e                	sw	a5,0(sp)
	while((c=*str++))
     480:	4792                	lw	a5,4(sp)
     482:	97a6                	add	a5,a5,s1
     484:	0007c303          	lbu	t1,0(a5)
     488:	06030663          	beqz	t1,4f4 <ssd1306_drawstr.constprop.0+0x90>
     48c:	4781                	li	a5,0
		d = fontdata[(chr<<3)+i];
     48e:	22028393          	add	t2,t0,544 # 1220 <fontdata>
     492:	00331713          	sll	a4,t1,0x3
     496:	973e                	add	a4,a4,a5
     498:	971e                	add	a4,a4,t2
     49a:	00074703          	lbu	a4,0(a4)
			ssd1306_drawPixel(x+j, y+i, col);
     49e:	00f685b3          	add	a1,a3,a5
		for(j=0;j<8;j++)
     4a2:	4401                	li	s0,0
			ssd1306_drawPixel(x+j, y+i, col);
     4a4:	0ff5f593          	zext.b	a1,a1
     4a8:	ca3e                	sw	a5,20(sp)
     4aa:	4782                	lw	a5,0(sp)
     4ac:	00775613          	srl	a2,a4,0x7
     4b0:	cc36                	sw	a3,24(sp)
     4b2:	00878533          	add	a0,a5,s0
     4b6:	0ff57513          	zext.b	a0,a0
     4ba:	c81a                	sw	t1,16(sp)
     4bc:	c63a                	sw	a4,12(sp)
     4be:	c42e                	sw	a1,8(sp)
     4c0:	351d                	jal	2e6 <ssd1306_drawPixel>
			d <<= 1;
     4c2:	4732                	lw	a4,12(sp)
		for(j=0;j<8;j++)
     4c4:	0405                	add	s0,s0,1
     4c6:	0442                	sll	s0,s0,0x10
     4c8:	6505                	lui	a0,0x1
			d <<= 1;
     4ca:	0706                	sll	a4,a4,0x1
		for(j=0;j<8;j++)
     4cc:	8041                	srl	s0,s0,0x10
     4ce:	4621                	li	a2,8
     4d0:	45a2                	lw	a1,8(sp)
     4d2:	4342                	lw	t1,16(sp)
     4d4:	47d2                	lw	a5,20(sp)
     4d6:	46e2                	lw	a3,24(sp)
			d <<= 1;
     4d8:	0ff77713          	zext.b	a4,a4
		for(j=0;j<8;j++)
     4dc:	22050393          	add	t2,a0,544 # 1220 <fontdata>
     4e0:	82aa                	mv	t0,a0
     4e2:	fcc413e3          	bne	s0,a2,4a8 <ssd1306_drawstr.constprop.0+0x44>
	for(i=0;i<8;i++)
     4e6:	0785                	add	a5,a5,1
     4e8:	fa8795e3          	bne	a5,s0,492 <ssd1306_drawstr.constprop.0+0x2e>
		if(x>120)
     4ec:	0485                	add	s1,s1,1
     4ee:	47c1                	li	a5,16
     4f0:	f8f493e3          	bne	s1,a5,476 <ssd1306_drawstr.constprop.0+0x12>
}
     4f4:	5092                	lw	ra,36(sp)
     4f6:	5402                	lw	s0,32(sp)
     4f8:	44f2                	lw	s1,28(sp)
     4fa:	02810113          	add	sp,sp,40
     4fe:	8082                	ret

00000500 <ssd1306_drawLine.constprop.0>:
void ssd1306_drawLine(uint16_t x0, uint16_t y0, uint16_t x1, uint16_t y1, uint8_t color)
     500:	fd810113          	add	sp,sp,-40
	steep = (gfx_abs(y1 - y0) > gfx_abs(x1 - x0));
     504:	40b687b3          	sub	a5,a3,a1
void ssd1306_drawLine(uint16_t x0, uint16_t y0, uint16_t x1, uint16_t y1, uint8_t color)
     508:	ce26                	sw	s1,28(sp)
     50a:	84ae                	mv	s1,a1
	return (x<0) ? -x : x;
     50c:	01079593          	sll	a1,a5,0x10
     510:	85c1                	sra	a1,a1,0x10
     512:	85bd                	sra	a1,a1,0xf
     514:	8fad                	xor	a5,a5,a1
     516:	8f8d                	sub	a5,a5,a1
     518:	07c2                	sll	a5,a5,0x10
     51a:	87c1                	sra	a5,a5,0x10
void ssd1306_drawLine(uint16_t x0, uint16_t y0, uint16_t x1, uint16_t y1, uint8_t color)
     51c:	d022                	sw	s0,32(sp)
	steep = (gfx_abs(y1 - y0) > gfx_abs(x1 - x0));
     51e:	40a60433          	sub	s0,a2,a0
	return (x<0) ? -x : x;
     522:	c03e                	sw	a5,0(sp)
     524:	01041793          	sll	a5,s0,0x10
     528:	87c1                	sra	a5,a5,0x10
     52a:	87bd                	sra	a5,a5,0xf
     52c:	8c3d                	xor	s0,s0,a5
     52e:	8c1d                	sub	s0,s0,a5
     530:	01041793          	sll	a5,s0,0x10
     534:	87c1                	sra	a5,a5,0x10
     536:	c23e                	sw	a5,4(sp)
	if(steep)
     538:	4712                	lw	a4,4(sp)
     53a:	4782                	lw	a5,0(sp)
void ssd1306_drawLine(uint16_t x0, uint16_t y0, uint16_t x1, uint16_t y1, uint8_t color)
     53c:	d206                	sw	ra,36(sp)
	if(steep)
     53e:	00f74863          	blt	a4,a5,54e <ssd1306_drawLine.constprop.0+0x4e>
     542:	87b6                	mv	a5,a3
     544:	86b2                	mv	a3,a2
     546:	863e                	mv	a2,a5
     548:	87a6                	mv	a5,s1
     54a:	84aa                	mv	s1,a0
     54c:	853e                	mv	a0,a5
	if(x0 > x1)
     54e:	0096e863          	bltu	a3,s1,55e <ssd1306_drawLine.constprop.0+0x5e>
     552:	87b2                	mv	a5,a2
     554:	862a                	mv	a2,a0
     556:	853e                	mv	a0,a5
     558:	87b6                	mv	a5,a3
     55a:	86a6                	mv	a3,s1
     55c:	84be                	mv	s1,a5
	deltax = x1 - x0;
     55e:	40d485b3          	sub	a1,s1,a3
     562:	01059793          	sll	a5,a1,0x10
     566:	83c1                	srl	a5,a5,0x10
     568:	c63e                	sw	a5,12(sp)
	deltay = gfx_abs(y1 - y0);
     56a:	40c507b3          	sub	a5,a0,a2
	return (x<0) ? -x : x;
     56e:	01079313          	sll	t1,a5,0x10
     572:	41035313          	sra	t1,t1,0x10
     576:	40f35313          	sra	t1,t1,0xf
     57a:	00f347b3          	xor	a5,t1,a5
     57e:	406787b3          	sub	a5,a5,t1
     582:	07c2                	sll	a5,a5,0x10
	error = deltax/2;
     584:	05c2                	sll	a1,a1,0x10
	return (x<0) ? -x : x;
     586:	83c1                	srl	a5,a5,0x10
	error = deltax/2;
     588:	85c1                	sra	a1,a1,0x10
	return (x<0) ? -x : x;
     58a:	c83e                	sw	a5,16(sp)
		ystep = -1;
     58c:	577d                	li	a4,-1
	error = deltax/2;
     58e:	01f5d793          	srl	a5,a1,0x1f
     592:	97ae                	add	a5,a5,a1
	y = y0;
     594:	01061313          	sll	t1,a2,0x10
		ystep = -1;
     598:	c43a                	sw	a4,8(sp)
	error = deltax/2;
     59a:	8785                	sra	a5,a5,0x1
	y = y0;
     59c:	41035313          	sra	t1,t1,0x10
	if(y0 < y1)
     5a0:	00a67463          	bgeu	a2,a0,5a8 <ssd1306_drawLine.constprop.0+0xa8>
		ystep = 1;
     5a4:	4705                	li	a4,1
     5a6:	c43a                	sw	a4,8(sp)
	for(x=x0;x<=x1;x++)
     5a8:	01069413          	sll	s0,a3,0x10
     5ac:	8441                	sra	s0,s0,0x10
     5ae:	0084d863          	bge	s1,s0,5be <ssd1306_drawLine.constprop.0+0xbe>
}
     5b2:	5092                	lw	ra,36(sp)
     5b4:	5402                	lw	s0,32(sp)
     5b6:	44f2                	lw	s1,28(sp)
     5b8:	02810113          	add	sp,sp,40
     5bc:	8082                	ret
		if(steep)
     5be:	4702                	lw	a4,0(sp)
     5c0:	4692                	lw	a3,4(sp)
     5c2:	cc3e                	sw	a5,24(sp)
     5c4:	ca1a                	sw	t1,20(sp)
     5c6:	0ff47513          	zext.b	a0,s0
			ssd1306_drawPixel(y, x, color);
     5ca:	0ff37293          	zext.b	t0,t1
     5ce:	4605                	li	a2,1
		if(steep)
     5d0:	02e6dc63          	bge	a3,a4,608 <ssd1306_drawLine.constprop.0+0x108>
			ssd1306_drawPixel(y, x, color);
     5d4:	85aa                	mv	a1,a0
     5d6:	8516                	mv	a0,t0
     5d8:	3339                	jal	2e6 <ssd1306_drawPixel>
     5da:	4352                	lw	t1,20(sp)
     5dc:	47e2                	lw	a5,24(sp)
		error = error - deltay;
     5de:	4742                	lw	a4,16(sp)
     5e0:	8f99                	sub	a5,a5,a4
     5e2:	01079613          	sll	a2,a5,0x10
     5e6:	07c2                	sll	a5,a5,0x10
     5e8:	87c1                	sra	a5,a5,0x10
     5ea:	8241                	srl	a2,a2,0x10
		if(error < 0)
     5ec:	0007db63          	bgez	a5,602 <ssd1306_drawLine.constprop.0+0x102>
			y = y + ystep;
     5f0:	47a2                	lw	a5,8(sp)
     5f2:	933e                	add	t1,t1,a5
			error = error + deltax;
     5f4:	47b2                	lw	a5,12(sp)
			y = y + ystep;
     5f6:	0342                	sll	t1,t1,0x10
     5f8:	41035313          	sra	t1,t1,0x10
			error = error + deltax;
     5fc:	97b2                	add	a5,a5,a2
     5fe:	07c2                	sll	a5,a5,0x10
     600:	87c1                	sra	a5,a5,0x10
     602:	00140693          	add	a3,s0,1
     606:	b74d                	j	5a8 <ssd1306_drawLine.constprop.0+0xa8>
			ssd1306_drawPixel(x, y, color);
     608:	8596                	mv	a1,t0
     60a:	39f1                	jal	2e6 <ssd1306_drawPixel>
     60c:	47e2                	lw	a5,24(sp)
     60e:	4352                	lw	t1,20(sp)
     610:	b7f9                	j	5de <ssd1306_drawLine.constprop.0+0xde>

00000612 <internal_handle_input.constprop.0>:
     612:	e00007b7          	lui	a5,0xe0000
     616:	0f478793          	add	a5,a5,244 # e00000f4 <__global_pointer$+0xbffff8f4>
     61a:	439c                	lw	a5,0(a5)
     61c:	8082                	ret

0000061e <_write.constprop.0>:
     61e:	1101                	add	sp,sp,-32
     620:	cc22                	sw	s0,24(sp)
     622:	ce06                	sw	ra,28(sp)
     624:	ca26                	sw	s1,20(sp)
     626:	c02a                	sw	a0,0(sp)
     628:	c802                	sw	zero,16(sp)
     62a:	842e                	mv	s0,a1
     62c:	e1f9                	bnez	a1,6f2 <_write.constprop.0+0xd4>
     62e:	e00007b7          	lui	a5,0xe0000
     632:	0f478793          	add	a5,a5,244 # e00000f4 <__global_pointer$+0xbffff8f4>
     636:	439c                	lw	a5,0(a5)
     638:	c789                	beqz	a5,642 <_write.constprop.0+0x24>
     63a:	0807f793          	and	a5,a5,128
     63e:	e391                	bnez	a5,642 <_write.constprop.0+0x24>
     640:	3fc9                	jal	612 <internal_handle_input.constprop.0>
     642:	40f2                	lw	ra,28(sp)
     644:	8522                	mv	a0,s0
     646:	4462                	lw	s0,24(sp)
     648:	44d2                	lw	s1,20(sp)
     64a:	6105                	add	sp,sp,32
     64c:	8082                	ret
     64e:	409406b3          	sub	a3,s0,s1
     652:	461d                	li	a2,7
     654:	8736                	mv	a4,a3
     656:	00d65363          	bge	a2,a3,65c <_write.constprop.0+0x3e>
     65a:	471d                	li	a4,7
     65c:	00027637          	lui	a2,0x27
     660:	10160613          	add	a2,a2,257 # 27101 <main.c.de940cdd+0x2472d>
     664:	00032583          	lw	a1,0(t1)
     668:	0805f513          	and	a0,a1,128
     66c:	ed3d                	bnez	a0,6ea <_write.constprop.0+0xcc>
     66e:	c981                	beqz	a1,67e <_write.constprop.0+0x60>
     670:	c61a                	sw	t1,12(sp)
     672:	c43a                	sw	a4,8(sp)
     674:	c236                	sw	a3,4(sp)
     676:	3f71                	jal	612 <internal_handle_input.constprop.0>
     678:	4332                	lw	t1,12(sp)
     67a:	4722                	lw	a4,8(sp)
     67c:	4692                	lw	a3,4(sp)
     67e:	0036a693          	slti	a3,a3,3
     682:	4601                	li	a2,0
     684:	e299                	bnez	a3,68a <_write.constprop.0+0x6c>
     686:	ffd70613          	add	a2,a4,-3
     68a:	4782                	lw	a5,0(sp)
     68c:	00348593          	add	a1,s1,3
     690:	0808                	add	a0,sp,16
     692:	95be                	add	a1,a1,a5
     694:	c41a                	sw	t1,8(sp)
     696:	c23a                	sw	a4,4(sp)
     698:	2615                	jal	9bc <memcpy>
     69a:	4642                	lw	a2,16(sp)
     69c:	4782                	lw	a5,0(sp)
     69e:	e00006b7          	lui	a3,0xe0000
     6a2:	4322                	lw	t1,8(sp)
     6a4:	4712                	lw	a4,4(sp)
     6a6:	0f868693          	add	a3,a3,248 # e00000f8 <__global_pointer$+0xbffff8f8>
     6aa:	c290                	sw	a2,0(a3)
     6ac:	458d                	li	a1,3
     6ae:	00978633          	add	a2,a5,s1
     6b2:	4681                	li	a3,0
     6b4:	00064283          	lbu	t0,0(a2)
     6b8:	0685                	add	a3,a3,1
     6ba:	01068793          	add	a5,a3,16
     6be:	00278533          	add	a0,a5,sp
     6c2:	00550023          	sb	t0,0(a0)
     6c6:	00d70563          	beq	a4,a3,6d0 <_write.constprop.0+0xb2>
     6ca:	0605                	add	a2,a2,1
     6cc:	feb694e3          	bne	a3,a1,6b4 <_write.constprop.0+0x96>
     6d0:	00470693          	add	a3,a4,4
     6d4:	f806e693          	or	a3,a3,-128
     6d8:	00d10823          	sb	a3,16(sp)
     6dc:	46c2                	lw	a3,16(sp)
     6de:	94ba                	add	s1,s1,a4
     6e0:	00d32023          	sw	a3,0(t1)
     6e4:	f684c5e3          	blt	s1,s0,64e <_write.constprop.0+0x30>
     6e8:	bfa9                	j	642 <_write.constprop.0+0x24>
     6ea:	167d                	add	a2,a2,-1
     6ec:	fe25                	bnez	a2,664 <_write.constprop.0+0x46>
     6ee:	8426                	mv	s0,s1
     6f0:	bf89                	j	642 <_write.constprop.0+0x24>
     6f2:	e0000337          	lui	t1,0xe0000
     6f6:	4481                	li	s1,0
     6f8:	0f430313          	add	t1,t1,244 # e00000f4 <__global_pointer$+0xbffff8f4>
     6fc:	b7e5                	j	6e4 <_write.constprop.0+0xc6>

000006fe <__puts_uart>:
     6fe:	1151                	add	sp,sp,-12
     700:	c222                	sw	s0,4(sp)
     702:	c406                	sw	ra,8(sp)
     704:	842e                	mv	s0,a1
     706:	3f21                	jal	61e <_write.constprop.0>
     708:	40a2                	lw	ra,8(sp)
     70a:	8522                	mv	a0,s0
     70c:	4412                	lw	s0,4(sp)
     70e:	0131                	add	sp,sp,12
     710:	8082                	ret

00000712 <handle_reset>:
     712:	20000197          	auipc	gp,0x20000
     716:	0ee18193          	add	gp,gp,238 # 20000800 <__global_pointer$>
     71a:	00018113          	mv	sp,gp
     71e:	08000513          	li	a0,128
     722:	30051073          	csrw	mstatus,a0
     726:	468d                	li	a3,3
     728:	00000517          	auipc	a0,0x0
     72c:	8d850513          	add	a0,a0,-1832 # 0 <InterruptVector>
     730:	8d55                	or	a0,a0,a3
     732:	30551073          	csrw	mtvec,a0
     736:	20000517          	auipc	a0,0x20000
     73a:	8ca50513          	add	a0,a0,-1846 # 20000000 <ssd1306_buffer>
     73e:	a0018593          	add	a1,gp,-1536 # 20000200 <_ebss>
     742:	4601                	li	a2,0
     744:	00b55663          	bge	a0,a1,750 <handle_reset+0x3e>
     748:	c110                	sw	a2,0(a0)
     74a:	0511                	add	a0,a0,4
     74c:	feb54ee3          	blt	a0,a1,748 <handle_reset+0x36>
     750:	00001517          	auipc	a0,0x1
     754:	37c50513          	add	a0,a0,892 # 1acc <_data_lma>
     758:	20000597          	auipc	a1,0x20000
     75c:	8a858593          	add	a1,a1,-1880 # 20000000 <ssd1306_buffer>
     760:	20000617          	auipc	a2,0x20000
     764:	8a060613          	add	a2,a2,-1888 # 20000000 <ssd1306_buffer>
     768:	00c58863          	beq	a1,a2,778 <handle_reset+0x66>
     76c:	4114                	lw	a3,0(a0)
     76e:	c194                	sw	a3,0(a1)
     770:	0511                	add	a0,a0,4
     772:	0591                	add	a1,a1,4
     774:	fec59ae3          	bne	a1,a2,768 <handle_reset+0x56>
     778:	e000f7b7          	lui	a5,0xe000f
     77c:	4705                	li	a4,1
     77e:	c398                	sw	a4,0(a5)
     780:	6785                	lui	a5,0x1
     782:	c8478793          	add	a5,a5,-892 # c84 <main>
     786:	34179073          	csrw	mepc,a5
     78a:	30200073          	mret

0000078e <ADC1_IRQHandler>:
     78e:	a001                	j	78e <ADC1_IRQHandler>

00000790 <NMI_Handler>:
     790:	40021737          	lui	a4,0x40021
     794:	471c                	lw	a5,8(a4)
     796:	008006b7          	lui	a3,0x800
     79a:	8fd5                	or	a5,a5,a3
     79c:	c71c                	sw	a5,8(a4)

0000079e <strlen>:
     79e:	87aa                	mv	a5,a0
     7a0:	0007c703          	lbu	a4,0(a5)
     7a4:	e701                	bnez	a4,7ac <strlen+0xe>
     7a6:	40a78533          	sub	a0,a5,a0
     7aa:	8082                	ret
     7ac:	0785                	add	a5,a5,1
     7ae:	bfcd                	j	7a0 <strlen+0x2>

000007b0 <mini_vpprintf>:
     7b0:	fa410113          	add	sp,sp,-92
     7b4:	caa2                	sw	s0,84(sp)
     7b6:	c8a6                	sw	s1,80(sp)
     7b8:	cc86                	sw	ra,88(sp)
     7ba:	c02a                	sw	a0,0(sp)
     7bc:	c22e                	sw	a1,4(sp)
     7be:	8432                	mv	s0,a2
     7c0:	84b6                	mv	s1,a3
     7c2:	ca02                	sw	zero,20(sp)
     7c4:	00044783          	lbu	a5,0(s0)
     7c8:	00140693          	add	a3,s0,1
     7cc:	00f10fa3          	sb	a5,31(sp)
     7d0:	eb81                	bnez	a5,7e0 <mini_vpprintf+0x30>
     7d2:	40e6                	lw	ra,88(sp)
     7d4:	4456                	lw	s0,84(sp)
     7d6:	4552                	lw	a0,20(sp)
     7d8:	44c6                	lw	s1,80(sp)
     7da:	05c10113          	add	sp,sp,92
     7de:	8082                	ret
     7e0:	c636                	sw	a3,12(sp)
     7e2:	02500713          	li	a4,37
     7e6:	02e78063          	beq	a5,a4,806 <mini_vpprintf+0x56>
     7ea:	4612                	lw	a2,4(sp)
     7ec:	4782                	lw	a5,0(sp)
     7ee:	4585                	li	a1,1
     7f0:	01f10513          	add	a0,sp,31
     7f4:	9782                	jalr	a5
     7f6:	46b2                	lw	a3,12(sp)
     7f8:	c426                	sw	s1,8(sp)
     7fa:	8436                	mv	s0,a3
     7fc:	47d2                	lw	a5,20(sp)
     7fe:	44a2                	lw	s1,8(sp)
     800:	97aa                	add	a5,a5,a0
     802:	ca3e                	sw	a5,20(sp)
     804:	b7c1                	j	7c4 <mini_vpprintf+0x14>
     806:	00144703          	lbu	a4,1(s0)
     80a:	03000613          	li	a2,48
     80e:	03000693          	li	a3,48
     812:	00e10fa3          	sb	a4,31(sp)
     816:	c632                	sw	a2,12(sp)
     818:	00240793          	add	a5,s0,2
     81c:	08d71263          	bne	a4,a3,8a0 <mini_vpprintf+0xf0>
     820:	843e                	mv	s0,a5
     822:	4681                	li	a3,0
     824:	4781                	li	a5,0
     826:	45a5                	li	a1,9
     828:	a811                	j	83c <mini_vpprintf+0x8c>
     82a:	00279713          	sll	a4,a5,0x2
     82e:	0405                	add	s0,s0,1
     830:	97ba                	add	a5,a5,a4
     832:	fff44703          	lbu	a4,-1(s0)
     836:	0786                	sll	a5,a5,0x1
     838:	97b2                	add	a5,a5,a2
     83a:	4685                	li	a3,1
     83c:	fd070613          	add	a2,a4,-48 # 40020fd0 <__global_pointer$+0x200207d0>
     840:	0ff67513          	zext.b	a0,a2
     844:	fea5f3e3          	bgeu	a1,a0,82a <mini_vpprintf+0x7a>
     848:	c299                	beqz	a3,84e <mini_vpprintf+0x9e>
     84a:	00e10fa3          	sb	a4,31(sp)
     84e:	c83e                	sw	a5,16(sp)
     850:	46e1                	li	a3,24
     852:	00f6d363          	bge	a3,a5,858 <mini_vpprintf+0xa8>
     856:	c836                	sw	a3,16(sp)
     858:	06c00613          	li	a2,108
     85c:	4681                	li	a3,0
     85e:	00c71863          	bne	a4,a2,86e <mini_vpprintf+0xbe>
     862:	00044703          	lbu	a4,0(s0)
     866:	4685                	li	a3,1
     868:	0405                	add	s0,s0,1
     86a:	00e10fa3          	sb	a4,31(sp)
     86e:	01f14603          	lbu	a2,31(sp)
     872:	06400713          	li	a4,100
     876:	06e60563          	beq	a2,a4,8e0 <mini_vpprintf+0x130>
     87a:	02c76763          	bltu	a4,a2,8a8 <mini_vpprintf+0xf8>
     87e:	05800793          	li	a5,88
     882:	0af60163          	beq	a2,a5,924 <mini_vpprintf+0x174>
     886:	06300793          	li	a5,99
     88a:	0af60e63          	beq	a2,a5,946 <mini_vpprintf+0x196>
     88e:	d231                	beqz	a2,7d2 <mini_vpprintf+0x22>
     890:	4612                	lw	a2,4(sp)
     892:	4782                	lw	a5,0(sp)
     894:	4585                	li	a1,1
     896:	01f10513          	add	a0,sp,31
     89a:	9782                	jalr	a5
     89c:	c426                	sw	s1,8(sp)
     89e:	bfb9                	j	7fc <mini_vpprintf+0x4c>
     8a0:	02000693          	li	a3,32
     8a4:	c636                	sw	a3,12(sp)
     8a6:	bfad                	j	820 <mini_vpprintf+0x70>
     8a8:	07500713          	li	a4,117
     8ac:	02e60a63          	beq	a2,a4,8e0 <mini_vpprintf+0x130>
     8b0:	07800713          	li	a4,120
     8b4:	06e60863          	beq	a2,a4,924 <mini_vpprintf+0x174>
     8b8:	07300713          	li	a4,115
     8bc:	fce61ae3          	bne	a2,a4,890 <mini_vpprintf+0xe0>
     8c0:	cc3e                	sw	a5,24(sp)
     8c2:	00448793          	add	a5,s1,4
     8c6:	4084                	lw	s1,0(s1)
     8c8:	c43e                	sw	a5,8(sp)
     8ca:	8526                	mv	a0,s1
     8cc:	3dc9                	jal	79e <strlen>
     8ce:	47e2                	lw	a5,24(sp)
     8d0:	85aa                	mv	a1,a0
     8d2:	08f05763          	blez	a5,960 <mini_vpprintf+0x1b0>
     8d6:	46c2                	lw	a3,16(sp)
     8d8:	4632                	lw	a2,12(sp)
     8da:	1838                	add	a4,sp,56
     8dc:	8526                	mv	a0,s1
     8de:	a01d                	j	904 <mini_vpprintf+0x154>
     8e0:	00448793          	add	a5,s1,4
     8e4:	c43e                	sw	a5,8(sp)
     8e6:	c69d                	beqz	a3,914 <mini_vpprintf+0x164>
     8e8:	f8b60613          	add	a2,a2,-117
     8ec:	1018                	add	a4,sp,32
     8ee:	00163693          	seqz	a3,a2
     8f2:	4088                	lw	a0,0(s1)
     8f4:	4601                	li	a2,0
     8f6:	45a9                	li	a1,10
     8f8:	38e9                	jal	1d2 <mini_itoa.part.0>
     8fa:	46c2                	lw	a3,16(sp)
     8fc:	4632                	lw	a2,12(sp)
     8fe:	1838                	add	a4,sp,56
     900:	85aa                	mv	a1,a0
     902:	1008                	add	a0,sp,32
     904:	81bff0ef          	jal	11e <mini_pad>
     908:	4612                	lw	a2,4(sp)
     90a:	85aa                	mv	a1,a0
     90c:	1828                	add	a0,sp,56
     90e:	4782                	lw	a5,0(sp)
     910:	9782                	jalr	a5
     912:	b5ed                	j	7fc <mini_vpprintf+0x4c>
     914:	07500793          	li	a5,117
     918:	1018                	add	a4,sp,32
     91a:	4685                	li	a3,1
     91c:	fcf60be3          	beq	a2,a5,8f2 <mini_vpprintf+0x142>
     920:	4681                	li	a3,0
     922:	bfc1                	j	8f2 <mini_vpprintf+0x142>
     924:	4088                	lw	a0,0(s1)
     926:	fa860613          	add	a2,a2,-88
     92a:	00448793          	add	a5,s1,4
     92e:	1018                	add	a4,sp,32
     930:	4685                	li	a3,1
     932:	00163613          	seqz	a2,a2
     936:	45c1                	li	a1,16
     938:	c43e                	sw	a5,8(sp)
     93a:	3861                	jal	1d2 <mini_itoa.part.0>
     93c:	46c2                	lw	a3,16(sp)
     93e:	4632                	lw	a2,12(sp)
     940:	85aa                	mv	a1,a0
     942:	1838                	add	a4,sp,56
     944:	bf7d                	j	902 <mini_vpprintf+0x152>
     946:	00448793          	add	a5,s1,4
     94a:	c43e                	sw	a5,8(sp)
     94c:	409c                	lw	a5,0(s1)
     94e:	46c2                	lw	a3,16(sp)
     950:	4632                	lw	a2,12(sp)
     952:	00f10fa3          	sb	a5,31(sp)
     956:	1838                	add	a4,sp,56
     958:	4585                	li	a1,1
     95a:	01f10513          	add	a0,sp,31
     95e:	b75d                	j	904 <mini_vpprintf+0x154>
     960:	4612                	lw	a2,4(sp)
     962:	8526                	mv	a0,s1
     964:	b76d                	j	90e <mini_vpprintf+0x15e>

00000966 <printf>:
     966:	fdc10113          	add	sp,sp,-36
     96a:	ca32                	sw	a2,20(sp)
     96c:	862a                	mv	a2,a0
     96e:	c82e                	sw	a1,16(sp)
     970:	cc36                	sw	a3,24(sp)
     972:	4581                	li	a1,0
     974:	0814                	add	a3,sp,16
     976:	6fe00513          	li	a0,1790
     97a:	c606                	sw	ra,12(sp)
     97c:	ce3a                	sw	a4,28(sp)
     97e:	d03e                	sw	a5,32(sp)
     980:	c036                	sw	a3,0(sp)
     982:	353d                	jal	7b0 <mini_vpprintf>
     984:	40b2                	lw	ra,12(sp)
     986:	02410113          	add	sp,sp,36
     98a:	8082                	ret

0000098c <ssd1306_i2c_error.isra.0>:
 * error handler
 */
uint8_t ssd1306_i2c_error(uint8_t err)
{
	// report error
	printf("ssd1306_i2c_error - timeout waiting for %s\n\r", errstr[err]);
     98c:	6785                	lui	a5,0x1
     98e:	050a                	sll	a0,a0,0x2
     990:	20c78793          	add	a5,a5,524 # 120c <errstr>
     994:	97aa                	add	a5,a5,a0
     996:	438c                	lw	a1,0(a5)
     998:	6505                	lui	a0,0x1
uint8_t ssd1306_i2c_error(uint8_t err)
     99a:	1151                	add	sp,sp,-12
	printf("ssd1306_i2c_error - timeout waiting for %s\n\r", errstr[err]);
     99c:	12450513          	add	a0,a0,292 # 1124 <main+0x4a0>
uint8_t ssd1306_i2c_error(uint8_t err)
     9a0:	c406                	sw	ra,8(sp)
	printf("ssd1306_i2c_error - timeout waiting for %s\n\r", errstr[err]);
     9a2:	37d1                	jal	966 <printf>
	
	// reset & initialize I2C
	ssd1306_i2c_setup();

	return 1;
}
     9a4:	40a2                	lw	ra,8(sp)
     9a6:	0131                	add	sp,sp,12
	ssd1306_i2c_setup();
     9a8:	b0ed                	j	292 <ssd1306_i2c_setup>

000009aa <memset>:
     9aa:	962a                	add	a2,a2,a0
     9ac:	87aa                	mv	a5,a0
     9ae:	00c79363          	bne	a5,a2,9b4 <memset+0xa>
     9b2:	8082                	ret
     9b4:	00b78023          	sb	a1,0(a5)
     9b8:	0785                	add	a5,a5,1
     9ba:	bfd5                	j	9ae <memset+0x4>

000009bc <memcpy>:
     9bc:	4781                	li	a5,0
     9be:	00f61363          	bne	a2,a5,9c4 <memcpy+0x8>
     9c2:	8082                	ret
     9c4:	00f58733          	add	a4,a1,a5
     9c8:	00074683          	lbu	a3,0(a4)
     9cc:	00f50733          	add	a4,a0,a5
     9d0:	0785                	add	a5,a5,1
     9d2:	00d70023          	sb	a3,0(a4)
     9d6:	b7e5                	j	9be <memcpy+0x2>

000009d8 <ssd1306_pkt_send.isra.0>:
#endif

/*
 * high-level packet send for I2C
 */
uint8_t ssd1306_pkt_send(uint8_t *data, uint8_t sz, uint8_t cmd)
     9d8:	7179                	add	sp,sp,-48
     9da:	d422                	sw	s0,40(sp)
     9dc:	d606                	sw	ra,44(sp)
     9de:	842e                	mv	s0,a1
{
	uint8_t pkt[33];
	
	/* build command or data packets */
	if(cmd)
     9e0:	ca05                	beqz	a2,a10 <ssd1306_pkt_send.isra.0+0x38>
	{
		pkt[0] = 0;
		pkt[1] = *data;
     9e2:	00054783          	lbu	a5,0(a0)
		pkt[0] = 0;
     9e6:	00010023          	sb	zero,0(sp)
		pkt[1] = *data;
     9ea:	00f100a3          	sb	a5,1(sp)
	timeout = TIMEOUT_MAX;
     9ee:	6761                	lui	a4,0x18
	while((I2C1->STAR2 & I2C_STAR2_BUSY) && (timeout--));
     9f0:	400057b7          	lui	a5,0x40005
	timeout = TIMEOUT_MAX;
     9f4:	6a070713          	add	a4,a4,1696 # 186a0 <main.c.de940cdd+0x15ccc>
	while((I2C1->STAR2 & I2C_STAR2_BUSY) && (timeout--));
     9f8:	40078793          	add	a5,a5,1024 # 40005400 <__global_pointer$+0x20004c00>
     9fc:	567d                	li	a2,-1
     9fe:	0187d683          	lhu	a3,24(a5)
     a02:	8a89                	and	a3,a3,2
     a04:	c2f5                	beqz	a3,ae8 <ssd1306_pkt_send.isra.0+0x110>
     a06:	177d                	add	a4,a4,-1
     a08:	fec71be3          	bne	a4,a2,9fe <ssd1306_pkt_send.isra.0+0x26>
		return ssd1306_i2c_error(0);
     a0c:	4501                	li	a0,0
     a0e:	a82d                	j	a48 <ssd1306_pkt_send.isra.0+0x70>
	}
	else
	{
		pkt[0] = 0x40;
     a10:	04000793          	li	a5,64
		memcpy(&pkt[1], data, sz);
     a14:	862e                	mv	a2,a1
     a16:	85aa                	mv	a1,a0
     a18:	00110513          	add	a0,sp,1
		pkt[0] = 0x40;
     a1c:	00f10023          	sb	a5,0(sp)
		memcpy(&pkt[1], data, sz);
     a20:	3f71                	jal	9bc <memcpy>
     a22:	b7f1                	j	9ee <ssd1306_pkt_send.isra.0+0x16>
		while(!(I2C1->STAR1 & I2C_STAR1_TXE) && (timeout--));
     a24:	40005737          	lui	a4,0x40005
     a28:	868a                	mv	a3,sp
     a2a:	40070713          	add	a4,a4,1024 # 40005400 <__global_pointer$+0x20004c00>
	while(sz--)
     a2e:	0ff00593          	li	a1,255
     a32:	67e1                	lui	a5,0x18
     a34:	6a178793          	add	a5,a5,1697 # 186a1 <main.c.de940cdd+0x15ccd>
		while(!(I2C1->STAR1 & I2C_STAR1_TXE) && (timeout--));
     a38:	01475603          	lhu	a2,20(a4)
     a3c:	08067613          	and	a2,a2,128
     a40:	ea01                	bnez	a2,a50 <ssd1306_pkt_send.isra.0+0x78>
     a42:	17fd                	add	a5,a5,-1
     a44:	fbf5                	bnez	a5,a38 <ssd1306_pkt_send.isra.0+0x60>
			return ssd1306_i2c_error(3);
     a46:	450d                	li	a0,3
	}
	return ssd1306_i2c_send(SSD1306_I2C_ADDR, pkt, sz+1);
}
     a48:	5422                	lw	s0,40(sp)
     a4a:	50b2                	lw	ra,44(sp)
     a4c:	6145                	add	sp,sp,48
		return ssd1306_i2c_error(0);
     a4e:	bf3d                	j	98c <ssd1306_i2c_error.isra.0>
		I2C1->DATAR = *data++;
     a50:	0006c783          	lbu	a5,0(a3) # 800000 <main.c.de940cdd+0x7fd62c>
	while(sz--)
     a54:	147d                	add	s0,s0,-1
     a56:	0ff47413          	zext.b	s0,s0
		I2C1->DATAR = *data++;
     a5a:	00f71823          	sh	a5,16(a4)
     a5e:	0685                	add	a3,a3,1
	while(sz--)
     a60:	fcb419e3          	bne	s0,a1,a32 <ssd1306_pkt_send.isra.0+0x5a>
	timeout = TIMEOUT_MAX;
     a64:	66e1                	lui	a3,0x18
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
     a66:	40005737          	lui	a4,0x40005
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_BYTE_TRANSMITTED)) && (timeout--));
     a6a:	00070637          	lui	a2,0x70
	timeout = TIMEOUT_MAX;
     a6e:	6a068693          	add	a3,a3,1696 # 186a0 <main.c.de940cdd+0x15ccc>
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
     a72:	40070713          	add	a4,a4,1024 # 40005400 <__global_pointer$+0x20004c00>
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_BYTE_TRANSMITTED)) && (timeout--));
     a76:	08460613          	add	a2,a2,132 # 70084 <main.c.de940cdd+0x6d6b0>
     a7a:	55fd                	li	a1,-1
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
     a7c:	01475503          	lhu	a0,20(a4)
     a80:	01875783          	lhu	a5,24(a4)
     a84:	07c2                	sll	a5,a5,0x10
     a86:	8fc9                	or	a5,a5,a0
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_BYTE_TRANSMITTED)) && (timeout--));
     a88:	8ff1                	and	a5,a5,a2
     a8a:	00c78763          	beq	a5,a2,a98 <ssd1306_pkt_send.isra.0+0xc0>
     a8e:	16fd                	add	a3,a3,-1
     a90:	feb696e3          	bne	a3,a1,a7c <ssd1306_pkt_send.isra.0+0xa4>
		return ssd1306_i2c_error(4);
     a94:	4511                	li	a0,4
     a96:	bf4d                	j	a48 <ssd1306_pkt_send.isra.0+0x70>
	I2C1->CTLR1 |= I2C_CTLR1_STOP;
     a98:	00075783          	lhu	a5,0(a4)
}
     a9c:	50b2                	lw	ra,44(sp)
     a9e:	5422                	lw	s0,40(sp)
	I2C1->CTLR1 |= I2C_CTLR1_STOP;
     aa0:	2007e793          	or	a5,a5,512
     aa4:	00f71023          	sh	a5,0(a4)
}
     aa8:	6145                	add	sp,sp,48
     aaa:	8082                	ret
	I2C1->DATAR = addr<<1;
     aac:	07800793          	li	a5,120
     ab0:	00f71823          	sh	a5,16(a4)
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
     ab4:	40005637          	lui	a2,0x40005
	timeout = TIMEOUT_MAX;
     ab8:	6761                	lui	a4,0x18
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_TRANSMITTER_MODE_SELECTED)) && (timeout--));
     aba:	000706b7          	lui	a3,0x70
	timeout = TIMEOUT_MAX;
     abe:	6a070713          	add	a4,a4,1696 # 186a0 <main.c.de940cdd+0x15ccc>
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
     ac2:	40060613          	add	a2,a2,1024 # 40005400 <__global_pointer$+0x20004c00>
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_TRANSMITTER_MODE_SELECTED)) && (timeout--));
     ac6:	08268693          	add	a3,a3,130 # 70082 <main.c.de940cdd+0x6d6ae>
     aca:	55fd                	li	a1,-1
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
     acc:	01465503          	lhu	a0,20(a2)
     ad0:	01865783          	lhu	a5,24(a2)
     ad4:	07c2                	sll	a5,a5,0x10
     ad6:	8fc9                	or	a5,a5,a0
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_TRANSMITTER_MODE_SELECTED)) && (timeout--));
     ad8:	8ff5                	and	a5,a5,a3
     ada:	f4d785e3          	beq	a5,a3,a24 <ssd1306_pkt_send.isra.0+0x4c>
     ade:	177d                	add	a4,a4,-1
     ae0:	feb716e3          	bne	a4,a1,acc <ssd1306_pkt_send.isra.0+0xf4>
		return ssd1306_i2c_error(2);
     ae4:	4509                	li	a0,2
     ae6:	b78d                	j	a48 <ssd1306_pkt_send.isra.0+0x70>
	I2C1->CTLR1 |= I2C_CTLR1_START;
     ae8:	0007d703          	lhu	a4,0(a5)
	timeout = TIMEOUT_MAX;
     aec:	66e1                	lui	a3,0x18
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_MODE_SELECT)) && (timeout--));
     aee:	00030637          	lui	a2,0x30
	I2C1->CTLR1 |= I2C_CTLR1_START;
     af2:	10076713          	or	a4,a4,256
     af6:	00e79023          	sh	a4,0(a5)
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
     afa:	40005737          	lui	a4,0x40005
	timeout = TIMEOUT_MAX;
     afe:	6a068693          	add	a3,a3,1696 # 186a0 <main.c.de940cdd+0x15ccc>
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
     b02:	40070713          	add	a4,a4,1024 # 40005400 <__global_pointer$+0x20004c00>
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_MODE_SELECT)) && (timeout--));
     b06:	0605                	add	a2,a2,1 # 30001 <main.c.de940cdd+0x2d62d>
     b08:	55fd                	li	a1,-1
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
     b0a:	01475503          	lhu	a0,20(a4)
     b0e:	01875783          	lhu	a5,24(a4)
     b12:	07c2                	sll	a5,a5,0x10
     b14:	8fc9                	or	a5,a5,a0
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_MODE_SELECT)) && (timeout--));
     b16:	8ff1                	and	a5,a5,a2
     b18:	f8c78ae3          	beq	a5,a2,aac <ssd1306_pkt_send.isra.0+0xd4>
     b1c:	16fd                	add	a3,a3,-1
     b1e:	feb696e3          	bne	a3,a1,b0a <ssd1306_pkt_send.isra.0+0x132>
		return ssd1306_i2c_error(1);
     b22:	4505                	li	a0,1
     b24:	b715                	j	a48 <ssd1306_pkt_send.isra.0+0x70>

00000b26 <ssd1306_cmd>:
{
     b26:	1141                	add	sp,sp,-16
     b28:	00a101a3          	sb	a0,3(sp)
	ssd1306_pkt_send(&cmd, 1, 1);
     b2c:	4605                	li	a2,1
     b2e:	00310513          	add	a0,sp,3
     b32:	4585                	li	a1,1
{
     b34:	c606                	sw	ra,12(sp)
	ssd1306_pkt_send(&cmd, 1, 1);
     b36:	354d                	jal	9d8 <ssd1306_pkt_send.isra.0>
}
     b38:	40b2                	lw	ra,12(sp)
     b3a:	4501                	li	a0,0
     b3c:	0141                	add	sp,sp,16
     b3e:	8082                	ret

00000b40 <ssd1306_refresh>:
{
     b40:	fcc10113          	add	sp,sp,-52
	ssd1306_cmd(SSD1306_COLUMNADDR);
     b44:	02100513          	li	a0,33
{
     b48:	d806                	sw	ra,48(sp)
     b4a:	d622                	sw	s0,44(sp)
     b4c:	d426                	sw	s1,40(sp)
	ssd1306_cmd(SSD1306_COLUMNADDR);
     b4e:	3fe1                	jal	b26 <ssd1306_cmd>
	ssd1306_cmd(SSD1306_OFFSET);   // Column start address (0 = reset)
     b50:	4501                	li	a0,0
     b52:	3fd1                	jal	b26 <ssd1306_cmd>
	ssd1306_cmd(SSD1306_OFFSET+SSD1306_W-1); // Column end address (127 = reset)
     b54:	07f00513          	li	a0,127
     b58:	37f9                	jal	b26 <ssd1306_cmd>
	ssd1306_cmd(SSD1306_PAGEADDR);
     b5a:	02200513          	li	a0,34
     b5e:	37e1                	jal	b26 <ssd1306_cmd>
	ssd1306_cmd(0); // Page start address (0 = reset)
     b60:	4501                	li	a0,0
     b62:	37d1                	jal	b26 <ssd1306_cmd>
	ssd1306_cmd(7); // Page end address
     b64:	451d                	li	a0,7
     b66:	37c1                	jal	b26 <ssd1306_cmd>
    for(i=0;i<sizeof(ssd1306_buffer);i+=128)
     b68:	20000437          	lui	s0,0x20000
	ssd1306_cmd(7); // Page end address
     b6c:	4781                	li	a5,0
     b6e:	00040413          	mv	s0,s0
{
     b72:	82be                	mv	t0,a5
				tbuf[k] = expand[ssd1306_buffer[i+j+k]&0xf];
     b74:	6489                	lui	s1,0x2
{
     b76:	4701                	li	a4,0
				tbuf[k] = expand[ssd1306_buffer[i+j+k]&0xf];
     b78:	abc48493          	add	s1,s1,-1348 # 1abc <expand>
     b7c:	008285b3          	add	a1,t0,s0
			for(k=0;k<SSD1306_PSZ;k++)
     b80:	02000613          	li	a2,32
				tbuf[k] = expand[ssd1306_buffer[i+j+k]&0xf];
     b84:	00870693          	add	a3,a4,8
     b88:	00268533          	add	a0,a3,sp
     b8c:	00e586b3          	add	a3,a1,a4
     b90:	0006c683          	lbu	a3,0(a3)
			for(k=0;k<SSD1306_PSZ;k++)
     b94:	0705                	add	a4,a4,1
				tbuf[k] = expand[ssd1306_buffer[i+j+k]&0xf];
     b96:	8abd                	and	a3,a3,15
     b98:	96a6                	add	a3,a3,s1
     b9a:	0006c683          	lbu	a3,0(a3)
     b9e:	00d50023          	sb	a3,0(a0)
			for(k=0;k<SSD1306_PSZ;k++)
     ba2:	fec711e3          	bne	a4,a2,b84 <ssd1306_refresh+0x44>
	ssd1306_pkt_send(data, sz, 0);
     ba6:	4601                	li	a2,0
     ba8:	02000593          	li	a1,32
     bac:	0028                	add	a0,sp,8
     bae:	c23e                	sw	a5,4(sp)
     bb0:	c016                	sw	t0,0(sp)
     bb2:	351d                	jal	9d8 <ssd1306_pkt_send.isra.0>
		for(j=0;j<128;j+=SSD1306_PSZ)
     bb4:	4282                	lw	t0,0(sp)
     bb6:	4792                	lw	a5,4(sp)
     bb8:	02028293          	add	t0,t0,32
     bbc:	08078313          	add	t1,a5,128
     bc0:	fa629ae3          	bne	t0,t1,b74 <ssd1306_refresh+0x34>
			for(k=0;k<SSD1306_PSZ;k++)
     bc4:	02000293          	li	t0,32
{
     bc8:	4701                	li	a4,0
				tbuf[k] = expand[(ssd1306_buffer[i+j+k]>>4)&0xf];
     bca:	00878633          	add	a2,a5,s0
     bce:	00870693          	add	a3,a4,8
     bd2:	002685b3          	add	a1,a3,sp
     bd6:	00e606b3          	add	a3,a2,a4
     bda:	0006c683          	lbu	a3,0(a3)
			for(k=0;k<SSD1306_PSZ;k++)
     bde:	0705                	add	a4,a4,1
				tbuf[k] = expand[(ssd1306_buffer[i+j+k]>>4)&0xf];
     be0:	8291                	srl	a3,a3,0x4
     be2:	96a6                	add	a3,a3,s1
     be4:	0006c683          	lbu	a3,0(a3)
     be8:	00d58023          	sb	a3,0(a1)
			for(k=0;k<SSD1306_PSZ;k++)
     bec:	fe5711e3          	bne	a4,t0,bce <ssd1306_refresh+0x8e>
	ssd1306_pkt_send(data, sz, 0);
     bf0:	4601                	li	a2,0
     bf2:	02000593          	li	a1,32
     bf6:	0028                	add	a0,sp,8
     bf8:	c21a                	sw	t1,4(sp)
     bfa:	c03e                	sw	a5,0(sp)
     bfc:	3bf1                	jal	9d8 <ssd1306_pkt_send.isra.0>
		for(j=0;j<128;j+=SSD1306_PSZ)
     bfe:	4782                	lw	a5,0(sp)
     c00:	4312                	lw	t1,4(sp)
     c02:	02000293          	li	t0,32
     c06:	02078793          	add	a5,a5,32
     c0a:	fa679fe3          	bne	a5,t1,bc8 <ssd1306_refresh+0x88>
    for(i=0;i<sizeof(ssd1306_buffer);i+=128)
     c0e:	20000713          	li	a4,512
     c12:	f6e790e3          	bne	a5,a4,b72 <ssd1306_refresh+0x32>
}
     c16:	50c2                	lw	ra,48(sp)
     c18:	5432                	lw	s0,44(sp)
     c1a:	54a2                	lw	s1,40(sp)
     c1c:	03410113          	add	sp,sp,52
     c20:	8082                	ret

00000c22 <SystemInit>:
     c22:	400227b7          	lui	a5,0x40022
     c26:	4705                	li	a4,1
     c28:	c398                	sw	a4,0(a5)
     c2a:	400217b7          	lui	a5,0x40021
     c2e:	01080737          	lui	a4,0x1080
     c32:	0007a223          	sw	zero,4(a5) # 40021004 <__global_pointer$+0x20020804>
     c36:	08170713          	add	a4,a4,129 # 1080081 <main.c.de940cdd+0x107d6ad>
     c3a:	c398                	sw	a4,0(a5)
     c3c:	009f0737          	lui	a4,0x9f0
     c40:	c798                	sw	a4,8(a5)
     c42:	40021737          	lui	a4,0x40021
     c46:	431c                	lw	a5,0(a4)
     c48:	00679693          	sll	a3,a5,0x6
     c4c:	fe06dde3          	bgez	a3,c46 <SystemInit+0x24>
     c50:	435c                	lw	a5,4(a4)
     c52:	400216b7          	lui	a3,0x40021
     c56:	9bf1                	and	a5,a5,-4
     c58:	0027e793          	or	a5,a5,2
     c5c:	c35c                	sw	a5,4(a4)
     c5e:	4721                	li	a4,8
     c60:	42dc                	lw	a5,4(a3)
     c62:	8bb1                	and	a5,a5,12
     c64:	fee79ee3          	bne	a5,a4,c60 <SystemInit+0x3e>
     c68:	e00007b7          	lui	a5,0xe0000
     c6c:	0f878793          	add	a5,a5,248 # e00000f8 <__global_pointer$+0xbffff8f8>
     c70:	0007a023          	sw	zero,0(a5)
     c74:	e00007b7          	lui	a5,0xe0000
     c78:	0f478793          	add	a5,a5,244 # e00000f4 <__global_pointer$+0xbffff8f4>
     c7c:	08000713          	li	a4,128
     c80:	c398                	sw	a4,0(a5)
     c82:	8082                	ret

00000c84 <main>:
#include "ssd1306.h"

#include "bomb.h"

int main()
{
     c84:	fd410113          	add	sp,sp,-44
     c88:	d406                	sw	ra,40(sp)
     c8a:	d222                	sw	s0,36(sp)
     c8c:	d026                	sw	s1,32(sp)
	// 48MHz internal clock
	SystemInit();
     c8e:	3f51                	jal	c22 <SystemInit>

	Delay_Ms( 100 );
     c90:	00092537          	lui	a0,0x92
     c94:	7c050513          	add	a0,a0,1984 # 927c0 <main.c.de940cdd+0x8fdec>
     c98:	d24ff0ef          	jal	1bc <DelaySysTick>
	// printf("\r\r\n\ni2c_oled example\n\r");

	// init i2c and oled
	Delay_Ms( 100 );	// give OLED some more time
     c9c:	00092537          	lui	a0,0x92
     ca0:	7c050513          	add	a0,a0,1984 # 927c0 <main.c.de940cdd+0x8fdec>
     ca4:	d18ff0ef          	jal	1bc <DelaySysTick>
 * init I2C and GPIO
 */
uint8_t ssd1306_i2c_init(void)
{
	// Enable GPIOC and I2C
	RCC->APB2PCENR |= RCC_APB2Periph_GPIOC;
     ca8:	400217b7          	lui	a5,0x40021
     cac:	4f98                	lw	a4,24(a5)
	RCC->APB1PCENR |= RCC_APB1Periph_I2C1;
     cae:	002006b7          	lui	a3,0x200
{
	// pulse reset
	ssd1306_rst();
	
	// initialize OLED
	uint8_t *cmd_list = (uint8_t *)ssd1306_init_array;
     cb2:	6409                	lui	s0,0x2
	RCC->APB2PCENR |= RCC_APB2Periph_GPIOC;
     cb4:	01076713          	or	a4,a4,16
     cb8:	cf98                	sw	a4,24(a5)
	RCC->APB1PCENR |= RCC_APB1Periph_I2C1;
     cba:	4fd8                	lw	a4,28(a5)
     cbc:	a2040413          	add	s0,s0,-1504 # 1a20 <ssd1306_init_array>
     cc0:	8f55                	or	a4,a4,a3
     cc2:	cfd8                	sw	a4,28(a5)
	
	// PC1 is SDA, 10MHz Output, alt func, open-drain
	GPIOC->CFGLR &= ~(0xf<<(4*1));
     cc4:	400117b7          	lui	a5,0x40011
     cc8:	4398                	lw	a4,0(a5)
	GPIOC->CFGLR |= (GPIO_Speed_10MHz | GPIO_CNF_OUT_OD_AF)<<(4*1);
	
	// PC2 is SCL, 10MHz Output, alt func, open-drain
	GPIOC->CFGLR &= ~(0xf<<(4*2));
     cca:	76fd                	lui	a3,0xfffff
     ccc:	0ff68693          	add	a3,a3,255 # fffff0ff <__global_pointer$+0xdfffe8ff>
	GPIOC->CFGLR &= ~(0xf<<(4*1));
     cd0:	f0f77713          	and	a4,a4,-241
     cd4:	c398                	sw	a4,0(a5)
	GPIOC->CFGLR |= (GPIO_Speed_10MHz | GPIO_CNF_OUT_OD_AF)<<(4*1);
     cd6:	4398                	lw	a4,0(a5)
     cd8:	0d076713          	or	a4,a4,208
     cdc:	c398                	sw	a4,0(a5)
	GPIOC->CFGLR &= ~(0xf<<(4*2));
     cde:	4398                	lw	a4,0(a5)
     ce0:	8f75                	and	a4,a4,a3
     ce2:	c398                	sw	a4,0(a5)
	GPIOC->CFGLR |= (GPIO_Speed_10MHz | GPIO_CNF_OUT_OD_AF)<<(4*2);
     ce4:	4398                	lw	a4,0(a5)
     ce6:	6685                	lui	a3,0x1
     ce8:	d0068693          	add	a3,a3,-768 # d00 <main+0x7c>
     cec:	8f55                	or	a4,a4,a3
     cee:	c398                	sw	a4,0(a5)
	GPIOC->CFGLR |= (GPIO_Speed_10MHz | GPIO_CNF_OUT_PP)<<(4*4);
	GPIOC->BSHR = (1<<(16+4));
#endif

	// load I2C regs
	ssd1306_i2c_setup();
     cf0:	da2ff0ef          	jal	292 <ssd1306_i2c_setup>
	while(*cmd_list != SSD1306_TERMINATE_CMDS)
     cf4:	00044503          	lbu	a0,0(s0)
     cf8:	0ff00793          	li	a5,255
     cfc:	00f51c63          	bne	a0,a5,d14 <main+0x90>
	memset(ssd1306_buffer, color ? 0xFF : 0x00, sizeof(ssd1306_buffer));
     d00:	20000537          	lui	a0,0x20000
     d04:	20000613          	li	a2,512
     d08:	4581                	li	a1,0
     d0a:	00050513          	mv	a0,a0
     d0e:	3971                	jal	9aa <memset>
			return 1;
	}
	
	// clear display
	ssd1306_setbuf(0);
	ssd1306_refresh();
     d10:	3d05                	jal	b40 <ssd1306_refresh>
     d12:	a021                	j	d1a <main+0x96>
		if(ssd1306_cmd(*cmd_list++))
     d14:	0405                	add	s0,s0,1
     d16:	3d01                	jal	b26 <ssd1306_cmd>
     d18:	dd71                	beqz	a0,cf4 <main+0x70>
		// printf("done.\n\r");
		
		// printf("Looping on test modes...");
		while(1)
		{
			for(uint8_t mode=0;mode<(SSD1306_H>32?9:8);mode++)
     d1a:	c002                	sw	zero,0(sp)
	memset(ssd1306_buffer, color ? 0xFF : 0x00, sizeof(ssd1306_buffer));
     d1c:	200007b7          	lui	a5,0x20000
     d20:	00078513          	mv	a0,a5
     d24:	20000613          	li	a2,512
     d28:	4581                	li	a1,0
     d2a:	3141                	jal	9aa <memset>
			{
				// clear buffer for next mode
				ssd1306_setbuf(0);

				switch(mode)
     d2c:	4782                	lw	a5,0(sp)
     d2e:	4719                	li	a4,6
     d30:	17fd                	add	a5,a5,-1 # 1fffffff <main.c.de940cdd+0x1fffd62b>
     d32:	0ff7f793          	zext.b	a5,a5
     d36:	00f76963          	bltu	a4,a5,d48 <main+0xc4>
     d3a:	6705                	lui	a4,0x1
     d3c:	078a                	sll	a5,a5,0x2
     d3e:	1f070713          	add	a4,a4,496 # 11f0 <main+0x56c>
     d42:	97ba                	add	a5,a5,a4
     d44:	439c                	lw	a5,0(a5)
     d46:	8782                	jr	a5
				{
					case 0:
						// printf("buffer fill with binary\n\r");
						for(int i=0;i<sizeof(ssd1306_buffer);i++)
							ssd1306_buffer[i] = i;
     d48:	20000737          	lui	a4,0x20000
     d4c:	00070613          	mv	a2,a4
				switch(mode)
     d50:	4781                	li	a5,0
						for(int i=0;i<sizeof(ssd1306_buffer);i++)
     d52:	20000713          	li	a4,512
							ssd1306_buffer[i] = i;
     d56:	00c786b3          	add	a3,a5,a2
     d5a:	00f68023          	sb	a5,0(a3)
						for(int i=0;i<sizeof(ssd1306_buffer);i++)
     d5e:	0785                	add	a5,a5,1
     d60:	fee79be3          	bne	a5,a4,d56 <main+0xd2>
						break;

					default:
						break;
				}
				ssd1306_refresh();
     d64:	3bf1                	jal	b40 <ssd1306_refresh>
			
				Delay_Ms(2000);
     d66:	00b72537          	lui	a0,0xb72
     d6a:	b0050513          	add	a0,a0,-1280 # b71b00 <main.c.de940cdd+0xb6f12c>
     d6e:	c4eff0ef          	jal	1bc <DelaySysTick>
			for(uint8_t mode=0;mode<(SSD1306_H>32?9:8);mode++)
     d72:	4782                	lw	a5,0(sp)
     d74:	0785                	add	a5,a5,1
     d76:	0ff7f793          	zext.b	a5,a5
     d7a:	c03e                	sw	a5,0(sp)
     d7c:	4702                	lw	a4,0(sp)
     d7e:	47a1                	li	a5,8
     d80:	f8f71ee3          	bne	a4,a5,d1c <main+0x98>
     d84:	bf59                	j	d1a <main+0x96>
				switch(mode)
     d86:	4481                	li	s1,0
							ssd1306_drawPixel(i, i/(SSD1306_W/SSD1306_H), 1);
     d88:	4024d413          	sra	s0,s1,0x2
     d8c:	0ff4f513          	zext.b	a0,s1
     d90:	4605                	li	a2,1
     d92:	0ff47593          	zext.b	a1,s0
     d96:	c22a                	sw	a0,4(sp)
     d98:	d4eff0ef          	jal	2e6 <ssd1306_drawPixel>
							ssd1306_drawPixel(i, SSD1306_H-1-(i/(SSD1306_W/SSD1306_H)), 1);
     d9c:	4512                	lw	a0,4(sp)
     d9e:	408005b3          	neg	a1,s0
     da2:	05fd                	add	a1,a1,31
     da4:	4605                	li	a2,1
     da6:	0ff5f593          	zext.b	a1,a1
     daa:	d3cff0ef          	jal	2e6 <ssd1306_drawPixel>
						for(int i=0;i<SSD1306_W;i++)
     dae:	0485                	add	s1,s1,1
     db0:	08000793          	li	a5,128
     db4:	fcf49ae3          	bne	s1,a5,d88 <main+0x104>
     db8:	b775                	j	d64 <main+0xe0>
				switch(mode)
     dba:	4401                	li	s0,0
								ssd1306_drawLine(x, 0, SSD1306_W, y, 1);
     dbc:	00241493          	sll	s1,s0,0x2
     dc0:	04c2                	sll	s1,s1,0x10
     dc2:	80c1                	srl	s1,s1,0x10
     dc4:	86a2                	mv	a3,s0
     dc6:	08000613          	li	a2,128
     dca:	4581                	li	a1,0
     dcc:	8526                	mv	a0,s1
     dce:	f32ff0ef          	jal	500 <ssd1306_drawLine.constprop.0>
								ssd1306_drawLine(SSD1306_W-x, SSD1306_H, 0, SSD1306_H-y, 1);
     dd2:	08000793          	li	a5,128
     dd6:	02000693          	li	a3,32
     dda:	40978533          	sub	a0,a5,s1
     dde:	8e81                	sub	a3,a3,s0
     de0:	0542                	sll	a0,a0,0x10
     de2:	06c2                	sll	a3,a3,0x10
     de4:	8141                	srl	a0,a0,0x10
     de6:	82c1                	srl	a3,a3,0x10
     de8:	4601                	li	a2,0
     dea:	02000593          	li	a1,32
							for(uint8_t x=0;x<SSD1306_W;x+=16)
     dee:	0411                	add	s0,s0,4
								ssd1306_drawLine(SSD1306_W-x, SSD1306_H, 0, SSD1306_H-y, 1);
     df0:	f10ff0ef          	jal	500 <ssd1306_drawLine.constprop.0>
							for(uint8_t x=0;x<SSD1306_W;x+=16)
     df4:	0442                	sll	s0,s0,0x10
     df6:	8041                	srl	s0,s0,0x10
     df8:	02000793          	li	a5,32
     dfc:	fcf410e3          	bne	s0,a5,dbc <main+0x138>
     e00:	b795                	j	d64 <main+0xe0>
				switch(mode)
     e02:	4781                	li	a5,0
							if(x<64)
     e04:	03f00713          	li	a4,63
     e08:	0af76b63          	bltu	a4,a5,ebe <main+0x23a>
    int16_t err = 2 - 2 * radius;
     e0c:	5311                	li	t1,-28
    int16_t y_pos = 0;
     e0e:	4681                	li	a3,0
    int16_t x_pos = -radius;
     e10:	54c5                	li	s1,-15
        ssd1306_drawPixel(x - x_pos, y + y_pos, color);
     e12:	0ff4f713          	zext.b	a4,s1
     e16:	40e78433          	sub	s0,a5,a4
     e1a:	c63e                	sw	a5,12(sp)
     e1c:	0ff47793          	zext.b	a5,s0
     e20:	0ff6f413          	zext.b	s0,a3
     e24:	01040593          	add	a1,s0,16
     e28:	0ff5f593          	zext.b	a1,a1
     e2c:	853e                	mv	a0,a5
     e2e:	4605                	li	a2,1
     e30:	cc1a                	sw	t1,24(sp)
     e32:	ca36                	sw	a3,20(sp)
     e34:	c83a                	sw	a4,16(sp)
     e36:	c23e                	sw	a5,4(sp)
     e38:	c42e                	sw	a1,8(sp)
     e3a:	cacff0ef          	jal	2e6 <ssd1306_drawPixel>
        ssd1306_drawPixel(x + x_pos, y + y_pos, color);
     e3e:	47b2                	lw	a5,12(sp)
     e40:	4742                	lw	a4,16(sp)
     e42:	45a2                	lw	a1,8(sp)
     e44:	4605                	li	a2,1
     e46:	973e                	add	a4,a4,a5
     e48:	0ff77513          	zext.b	a0,a4
     e4c:	c83e                	sw	a5,16(sp)
     e4e:	c62a                	sw	a0,12(sp)
     e50:	c96ff0ef          	jal	2e6 <ssd1306_drawPixel>
        ssd1306_drawPixel(x + x_pos, y - y_pos, color);
     e54:	4532                	lw	a0,12(sp)
     e56:	45c1                	li	a1,16
     e58:	8d81                	sub	a1,a1,s0
     e5a:	0ff5f593          	zext.b	a1,a1
     e5e:	4605                	li	a2,1
     e60:	c42e                	sw	a1,8(sp)
     e62:	c84ff0ef          	jal	2e6 <ssd1306_drawPixel>
        ssd1306_drawPixel(x - x_pos, y - y_pos, color);
     e66:	45a2                	lw	a1,8(sp)
     e68:	4512                	lw	a0,4(sp)
     e6a:	4605                	li	a2,1
     e6c:	c7aff0ef          	jal	2e6 <ssd1306_drawPixel>
        if (e2 <= y_pos) {
     e70:	46d2                	lw	a3,20(sp)
     e72:	4362                	lw	t1,24(sp)
     e74:	47c2                	lw	a5,16(sp)
     e76:	0466c263          	blt	a3,t1,eba <main+0x236>
            err += ++y_pos * 2 + 1;
     e7a:	0685                	add	a3,a3,1
     e7c:	06c2                	sll	a3,a3,0x10
     e7e:	86c1                	sra	a3,a3,0x10
     e80:	00169713          	sll	a4,a3,0x1
     e84:	0705                	add	a4,a4,1 # 20000001 <ssd1306_buffer+0x1>
     e86:	971a                	add	a4,a4,t1
     e88:	0742                	sll	a4,a4,0x10
            if(-x_pos == y_pos && e2 <= x_pos) {
     e8a:	40900633          	neg	a2,s1
            err += ++y_pos * 2 + 1;
     e8e:	8741                	sra	a4,a4,0x10
            if(-x_pos == y_pos && e2 <= x_pos) {
     e90:	00c69563          	bne	a3,a2,e9a <main+0x216>
     e94:	0064c563          	blt	s1,t1,e9e <main+0x21a>
              e2 = 0;
     e98:	4301                	li	t1,0
        if (e2 > x_pos) {
     e9a:	0064de63          	bge	s1,t1,eb6 <main+0x232>
            err += ++x_pos * 2 + 1;
     e9e:	0485                	add	s1,s1,1
     ea0:	04c2                	sll	s1,s1,0x10
     ea2:	84c1                	sra	s1,s1,0x10
    } while (x_pos <= 0);
     ea4:	4605                	li	a2,1
     ea6:	0ec48d63          	beq	s1,a2,fa0 <main+0x31c>
            err += ++x_pos * 2 + 1;
     eaa:	00149613          	sll	a2,s1,0x1
     eae:	0605                	add	a2,a2,1
     eb0:	9732                	add	a4,a4,a2
     eb2:	0742                	sll	a4,a4,0x10
     eb4:	8741                	sra	a4,a4,0x10
    int16_t x_pos = -radius;
     eb6:	833a                	mv	t1,a4
     eb8:	bfa9                	j	e12 <main+0x18e>
     eba:	871a                	mv	a4,t1
     ebc:	bff9                	j	e9a <main+0x216>
    int16_t err = 2 - 2 * radius;
     ebe:	5391                	li	t2,-28
    int16_t y_pos = 0;
     ec0:	4281                	li	t0,0
    int16_t x_pos = -radius;
     ec2:	5345                	li	t1,-15
        ssd1306_drawPixel(x - x_pos, y + y_pos, color);
     ec4:	0ff37493          	zext.b	s1,t1
     ec8:	409786b3          	sub	a3,a5,s1
     ecc:	c23e                	sw	a5,4(sp)
     ece:	0ff6f793          	zext.b	a5,a3
     ed2:	0ff2f413          	zext.b	s0,t0
     ed6:	c63e                	sw	a5,12(sp)
     ed8:	01040693          	add	a3,s0,16
     edc:	4532                	lw	a0,12(sp)
     ede:	0ff6f793          	zext.b	a5,a3
     ee2:	85be                	mv	a1,a5
     ee4:	4605                	li	a2,1
     ee6:	ce1e                	sw	t2,28(sp)
     ee8:	cc1a                	sw	t1,24(sp)
     eea:	ca16                	sw	t0,20(sp)
     eec:	c43e                	sw	a5,8(sp)
     eee:	bf8ff0ef          	jal	2e6 <ssd1306_drawPixel>
        ssd1306_drawPixel(x + x_pos, y + y_pos, color);
     ef2:	4792                	lw	a5,4(sp)
     ef4:	45a2                	lw	a1,8(sp)
     ef6:	4605                	li	a2,1
     ef8:	00978733          	add	a4,a5,s1
     efc:	c83e                	sw	a5,16(sp)
     efe:	0ff77793          	zext.b	a5,a4
     f02:	853e                	mv	a0,a5
     f04:	c23e                	sw	a5,4(sp)
     f06:	be0ff0ef          	jal	2e6 <ssd1306_drawPixel>
        ssd1306_drawPixel(x + x_pos, y - y_pos, color);
     f0a:	46c1                	li	a3,16
     f0c:	40868433          	sub	s0,a3,s0
     f10:	4512                	lw	a0,4(sp)
     f12:	0ff47413          	zext.b	s0,s0
     f16:	4605                	li	a2,1
     f18:	85a2                	mv	a1,s0
     f1a:	bccff0ef          	jal	2e6 <ssd1306_drawPixel>
        ssd1306_drawPixel(x - x_pos, y - y_pos, color);
     f1e:	4532                	lw	a0,12(sp)
     f20:	4605                	li	a2,1
     f22:	85a2                	mv	a1,s0
     f24:	bc2ff0ef          	jal	2e6 <ssd1306_drawPixel>
        ssd1306_drawFastHLine(x + x_pos, y + y_pos, 2 * (-x_pos) + 1, color);
     f28:	40900633          	neg	a2,s1
     f2c:	45a2                	lw	a1,8(sp)
     f2e:	4512                	lw	a0,4(sp)
     f30:	0606                	sll	a2,a2,0x1
     f32:	0605                	add	a2,a2,1
     f34:	0ff67613          	zext.b	a2,a2
     f38:	4685                	li	a3,1
     f3a:	c632                	sw	a2,12(sp)
     f3c:	beaff0ef          	jal	326 <ssd1306_drawFastHLine>
        ssd1306_drawFastHLine(x + x_pos, y - y_pos, 2 * (-x_pos) + 1, color);
     f40:	4632                	lw	a2,12(sp)
     f42:	4512                	lw	a0,4(sp)
     f44:	4685                	li	a3,1
     f46:	85a2                	mv	a1,s0
     f48:	bdeff0ef          	jal	326 <ssd1306_drawFastHLine>
        if (e2 <= y_pos) {
     f4c:	42d2                	lw	t0,20(sp)
     f4e:	43f2                	lw	t2,28(sp)
     f50:	47c2                	lw	a5,16(sp)
     f52:	4362                	lw	t1,24(sp)
     f54:	0472c463          	blt	t0,t2,f9c <main+0x318>
            err += ++y_pos * 2 + 1;
     f58:	0285                	add	t0,t0,1
     f5a:	02c2                	sll	t0,t0,0x10
     f5c:	4102d293          	sra	t0,t0,0x10
     f60:	00129713          	sll	a4,t0,0x1
     f64:	0705                	add	a4,a4,1
     f66:	971e                	add	a4,a4,t2
     f68:	0742                	sll	a4,a4,0x10
            if(-x_pos == y_pos && e2 <= x_pos) {
     f6a:	406006b3          	neg	a3,t1
            err += ++y_pos * 2 + 1;
     f6e:	8741                	sra	a4,a4,0x10
            if(-x_pos == y_pos && e2 <= x_pos) {
     f70:	00d29563          	bne	t0,a3,f7a <main+0x2f6>
     f74:	00734563          	blt	t1,t2,f7e <main+0x2fa>
                e2 = 0;
     f78:	4381                	li	t2,0
        if(e2 > x_pos) {
     f7a:	00735f63          	bge	t1,t2,f98 <main+0x314>
            err += ++x_pos * 2 + 1;
     f7e:	0305                	add	t1,t1,1
     f80:	0342                	sll	t1,t1,0x10
     f82:	41035313          	sra	t1,t1,0x10
     f86:	00131693          	sll	a3,t1,0x1
     f8a:	0685                	add	a3,a3,1
     f8c:	9736                	add	a4,a4,a3
     f8e:	0742                	sll	a4,a4,0x10
    } while(x_pos <= 0);
     f90:	4685                	li	a3,1
            err += ++x_pos * 2 + 1;
     f92:	8741                	sra	a4,a4,0x10
    } while(x_pos <= 0);
     f94:	00d30a63          	beq	t1,a3,fa8 <main+0x324>
    int16_t x_pos = -radius;
     f98:	83ba                	mv	t2,a4
     f9a:	b72d                	j	ec4 <main+0x240>
     f9c:	871e                	mv	a4,t2
     f9e:	bff1                	j	f7a <main+0x2f6>
						for(uint8_t x=0;x<SSD1306_W;x+=16)
     fa0:	07c1                	add	a5,a5,16
     fa2:	0ff7f793          	zext.b	a5,a5
     fa6:	bdb9                	j	e04 <main+0x180>
     fa8:	07c1                	add	a5,a5,16
     faa:	0ff7f793          	zext.b	a5,a5
     fae:	08000713          	li	a4,128
     fb2:	e4e799e3          	bne	a5,a4,e04 <main+0x180>
     fb6:	b37d                	j	d64 <main+0xe0>
     fb8:	6609                	lui	a2,0x2
     fba:	a3c60613          	add	a2,a2,-1476 # 1a3c <bomb_i_stripped>
				switch(mode)
     fbe:	4681                	li	a3,0
		uint8_t v_mask = 1 << (y_absolute & 7);
     fc0:	4085                	li	ra,1
     fc2:	0076f713          	and	a4,a3,7
				buffer_addr = x_absolute + SSD1306_W * (y_absolute / 8);
     fc6:	0036d793          	srl	a5,a3,0x3
		uint8_t v_mask = 1 << (y_absolute & 7);
     fca:	00e09733          	sll	a4,ra,a4
				buffer_addr = x_absolute + SSD1306_W * (y_absolute / 8);
     fce:	8bfd                	and	a5,a5,31
						ssd1306_buffer[buffer_addr] = (ssd1306_buffer[buffer_addr] & ~v_mask) | (input_pixel ? v_mask : 0);
     fd0:	01871493          	sll	s1,a4,0x18
				buffer_addr = x_absolute + SSD1306_W * (y_absolute / 8);
     fd4:	079e                	sll	a5,a5,0x7
     fd6:	02078793          	add	a5,a5,32
						ssd1306_buffer[buffer_addr] = (ssd1306_buffer[buffer_addr] & ~v_mask) | (input_pixel ? v_mask : 0);
     fda:	84e1                	sra	s1,s1,0x18
     fdc:	07c2                	sll	a5,a5,0x10
     fde:	fff4c713          	not	a4,s1
     fe2:	83c1                	srl	a5,a5,0x10
				buffer_addr = x_absolute + SSD1306_W * (y_absolute / 8);
     fe4:	82b2                	mv	t0,a2
     fe6:	02000593          	li	a1,32
						ssd1306_buffer[buffer_addr] = (ssd1306_buffer[buffer_addr] & ~v_mask) | (input_pixel ? v_mask : 0);
     fea:	c63a                	sw	a4,12(sp)
			uint8_t input_byte = input[byte + line * bytes_to_draw];
     fec:	0002c703          	lbu	a4,0(t0)
     ff0:	4501                	li	a0,0
     ff2:	c23a                	sw	a4,4(sp)
     ff4:	20000737          	lui	a4,0x20000
     ff8:	00070713          	mv	a4,a4
     ffc:	00e78333          	add	t1,a5,a4
						ssd1306_buffer[buffer_addr] = (ssd1306_buffer[buffer_addr] & ~v_mask) | (input_pixel ? v_mask : 0);
    1000:	43b2                	lw	t2,12(sp)
    1002:	00034703          	lbu	a4,0(t1)
    1006:	8426                	mv	s0,s1
    1008:	00777733          	and	a4,a4,t2
    100c:	0762                	sll	a4,a4,0x18
    100e:	8761                	sra	a4,a4,0x18
    1010:	c43a                	sw	a4,8(sp)
    1012:	4712                	lw	a4,4(sp)
				uint8_t input_pixel = input_byte & (1 << pixel);
    1014:	00a093b3          	sll	t2,ra,a0
						ssd1306_buffer[buffer_addr] = (ssd1306_buffer[buffer_addr] & ~v_mask) | (input_pixel ? v_mask : 0);
    1018:	007773b3          	and	t2,a4,t2
    101c:	00039363          	bnez	t2,1022 <main+0x39e>
    1020:	4401                	li	s0,0
    1022:	4722                	lw	a4,8(sp)
			for (pixel = 0; pixel < 8; pixel++) {
    1024:	0505                	add	a0,a0,1
    1026:	0305                	add	t1,t1,1
						ssd1306_buffer[buffer_addr] = (ssd1306_buffer[buffer_addr] & ~v_mask) | (input_pixel ? v_mask : 0);
    1028:	8f41                	or	a4,a4,s0
    102a:	fee30fa3          	sb	a4,-1(t1)
			for (pixel = 0; pixel < 8; pixel++) {
    102e:	4721                	li	a4,8
    1030:	fce518e3          	bne	a0,a4,1000 <main+0x37c>
		for (uint8_t byte = 0; byte < bytes_to_draw; byte++) {
    1034:	17e1                	add	a5,a5,-8
    1036:	15e1                	add	a1,a1,-8
    1038:	07c2                	sll	a5,a5,0x10
    103a:	0ff5f593          	zext.b	a1,a1
    103e:	0285                	add	t0,t0,1
    1040:	83c1                	srl	a5,a5,0x10
    1042:	f5cd                	bnez	a1,fec <main+0x368>
	for (uint8_t line = 0; line < height; line++) {
    1044:	0685                	add	a3,a3,1
    1046:	02000793          	li	a5,32
    104a:	0611                	add	a2,a2,4
    104c:	f6f69be3          	bne	a3,a5,fc2 <main+0x33e>
    1050:	bb11                	j	d64 <main+0xe0>
						ssd1306_drawstr(0,0, "This is a test", 1);
    1052:	6585                	lui	a1,0x1
    1054:	15458593          	add	a1,a1,340 # 1154 <main+0x4d0>
    1058:	4501                	li	a0,0
    105a:	c0aff0ef          	jal	464 <ssd1306_drawstr.constprop.0>
						ssd1306_drawstr(0,8, "of the emergency", 1);
    105e:	6585                	lui	a1,0x1
    1060:	16458593          	add	a1,a1,356 # 1164 <main+0x4e0>
    1064:	4521                	li	a0,8
    1066:	bfeff0ef          	jal	464 <ssd1306_drawstr.constprop.0>
						ssd1306_drawstr(0,16,"broadcasting", 1);
    106a:	6585                	lui	a1,0x1
    106c:	17858593          	add	a1,a1,376 # 1178 <main+0x4f4>
    1070:	4541                	li	a0,16
    1072:	bf2ff0ef          	jal	464 <ssd1306_drawstr.constprop.0>
						ssd1306_drawstr(0,24,"system.",1);
    1076:	6585                	lui	a1,0x1
    1078:	18858593          	add	a1,a1,392 # 1188 <main+0x504>
    107c:	4561                	li	a0,24
    107e:	be6ff0ef          	jal	464 <ssd1306_drawstr.constprop.0>
	ssd1306_buffer[addr] ^= (1<<(y&7));
    1082:	20000737          	lui	a4,0x20000
	uint8_t m, n=y, iw = w;
    1086:	4781                	li	a5,0
	ssd1306_buffer[addr] ^= (1<<(y&7));
    1088:	4585                	li	a1,1
	if(y >= SSD1306_H)
    108a:	457d                	li	a0,31
	ssd1306_buffer[addr] ^= (1<<(y&7));
    108c:	00070313          	mv	t1,a4
	addr = x + SSD1306_W*(y/8);
    1090:	0037d693          	srl	a3,a5,0x3
    1094:	0ff6f693          	zext.b	a3,a3
    1098:	069e                	sll	a3,a3,0x7
	ssd1306_buffer[addr] ^= (1<<(y&7));
    109a:	0077f293          	and	t0,a5,7
	addr = x + SSD1306_W*(y/8);
    109e:	06c2                	sll	a3,a3,0x10
	ssd1306_buffer[addr] ^= (1<<(y&7));
    10a0:	005592b3          	sll	t0,a1,t0
	addr = x + SSD1306_W*(y/8);
    10a4:	82c1                	srl	a3,a3,0x10
    10a6:	0ff2f293          	zext.b	t0,t0
	ssd1306_buffer[addr] ^= (1<<(y&7));
    10aa:	04000613          	li	a2,64
		m=x;
    10ae:	04000713          	li	a4,64
	if(x >= SSD1306_W)
    10b2:	01871393          	sll	t2,a4,0x18
    10b6:	4183d393          	sra	t2,t2,0x18
    10ba:	0203cc63          	bltz	t2,10f2 <main+0x46e>
	if(y >= SSD1306_H)
    10be:	00f56b63          	bltu	a0,a5,10d4 <main+0x450>
	ssd1306_buffer[addr] ^= (1<<(y&7));
    10c2:	00d703b3          	add	t2,a4,a3
    10c6:	939a                	add	t2,t2,t1
    10c8:	0003c083          	lbu	ra,0(t2)
    10cc:	0012c0b3          	xor	ra,t0,ra
    10d0:	00138023          	sb	ra,0(t2)
			ssd1306_xorPixel(m++, n);
    10d4:	0705                	add	a4,a4,1 # 20000001 <ssd1306_buffer+0x1>
    10d6:	0ff77713          	zext.b	a4,a4
		while(w--)
    10da:	167d                	add	a2,a2,-1
    10dc:	0ff67613          	zext.b	a2,a2
    10e0:	fa69                	bnez	a2,10b2 <main+0x42e>
		n++;
    10e2:	0785                	add	a5,a5,1
    10e4:	0ff7f793          	zext.b	a5,a5
	while(h--)
    10e8:	08000713          	li	a4,128
    10ec:	fae792e3          	bne	a5,a4,1090 <main+0x40c>
    10f0:	b995                	j	d64 <main+0xe0>
			ssd1306_xorPixel(m++, n);
    10f2:	08100713          	li	a4,129
    10f6:	b7d5                	j	10da <main+0x456>
						ssd1306_drawstr_sz(0,0, "sz 8x8", 1, fontsize_8x8);
    10f8:	6585                	lui	a1,0x1
    10fa:	4605                	li	a2,1
    10fc:	19058593          	add	a1,a1,400 # 1190 <main+0x50c>
    1100:	4501                	li	a0,0
    1102:	a82ff0ef          	jal	384 <ssd1306_drawstr_sz.constprop.0>
						ssd1306_drawstr_sz(0,16, "16x16", 1, fontsize_16x16);
    1106:	6585                	lui	a1,0x1
    1108:	4609                	li	a2,2
    110a:	19858593          	add	a1,a1,408 # 1198 <main+0x514>
    110e:	4541                	li	a0,16
						ssd1306_drawstr_sz(0,0, "32x32", 1, fontsize_32x32);
    1110:	a74ff0ef          	jal	384 <ssd1306_drawstr_sz.constprop.0>
						break;
    1114:	b981                	j	d64 <main+0xe0>
						ssd1306_drawstr_sz(0,0, "32x32", 1, fontsize_32x32);
    1116:	6585                	lui	a1,0x1
    1118:	4611                	li	a2,4
    111a:	1a058593          	add	a1,a1,416 # 11a0 <main+0x51c>
    111e:	4501                	li	a0,0
    1120:	bfc5                	j	1110 <main+0x48c>
    1122:	0000                	unimp
    1124:	31647373          	csrrc	t1,0x316,8
    1128:	5f363033          	.insn	4, 0x5f363033
    112c:	3269                	jal	ab6 <ssd1306_pkt_send.isra.0+0xde>
    112e:	72655f63          	bge	a0,t1,186c <fontdata+0x64c>
    1132:	6f72                	.insn	2, 0x6f72
    1134:	2072                	.insn	2, 0x2072
    1136:	202d                	jal	1160 <main+0x4dc>
    1138:	6974                	.insn	2, 0x6974
    113a:	656d                	lui	a0,0x1b
    113c:	2074756f          	jal	a0,48b42 <main.c.de940cdd+0x4616e>
    1140:	74696177          	.insn	4, 0x74696177
    1144:	6e69                	lui	t3,0x1a
    1146:	6f662067          	.insn	4, 0x6f662067
    114a:	2072                	.insn	2, 0x2072
    114c:	7325                	lui	t1,0xfffe9
    114e:	0d0a                	sll	s10,s10,0x2
    1150:	0000                	unimp
    1152:	0000                	unimp
    1154:	6854                	.insn	2, 0x6854
    1156:	7369                	lui	t1,0xffffa
    1158:	6920                	.insn	2, 0x6920
    115a:	20612073          	csrs	0x206,sp
    115e:	6574                	.insn	2, 0x6574
    1160:	00007473          	csrrc	s0,ustatus,0
    1164:	7420666f          	jal	a2,78a6 <main.c.de940cdd+0x4ed2>
    1168:	6568                	.insn	2, 0x6568
    116a:	6520                	.insn	2, 0x6520
    116c:	656d                	lui	a0,0x1b
    116e:	6772                	.insn	2, 0x6772
    1170:	6e65                	lui	t3,0x19
    1172:	00007963          	bgeu	zero,zero,1184 <main+0x500>
    1176:	0000                	unimp
    1178:	7262                	.insn	2, 0x7262
    117a:	6364616f          	jal	sp,477b0 <main.c.de940cdd+0x44ddc>
    117e:	7361                	lui	t1,0xffff8
    1180:	6974                	.insn	2, 0x6974
    1182:	676e                	.insn	2, 0x676e
    1184:	0000                	unimp
    1186:	0000                	unimp
    1188:	74737973          	csrrc	s2,0x747,6
    118c:	6d65                	lui	s10,0x19
    118e:	002e                	c.slli	zero,0xb
    1190:	38207a73          	csrrc	s4,0x382,0
    1194:	3878                	.insn	2, 0x3878
    1196:	0000                	unimp
    1198:	3631                	jal	ca4 <main+0x20>
    119a:	3178                	.insn	2, 0x3178
    119c:	0036                	c.slli	zero,0xd
    119e:	0000                	unimp
    11a0:	33783233          	.insn	4, 0x33783233
    11a4:	0032                	c.slli	zero,0xc
    11a6:	0000                	unimp
    11a8:	6f6e                	.insn	2, 0x6f6e
    11aa:	2074                	.insn	2, 0x2074
    11ac:	7562                	.insn	2, 0x7562
    11ae:	00007973          	csrrc	s2,ustatus,0
    11b2:	0000                	unimp
    11b4:	616d                	add	sp,sp,240
    11b6:	72657473          	csrrc	s0,mhpmevent6h,10
    11ba:	6d20                	.insn	2, 0x6d20
    11bc:	0065646f          	jal	s0,571c2 <main.c.de940cdd+0x547ee>
    11c0:	7274                	.insn	2, 0x7274
    11c2:	6e61                	lui	t3,0x18
    11c4:	74696d73          	csrrs	s10,0x746,18
    11c8:	6d20                	.insn	2, 0x6d20
    11ca:	0065646f          	jal	s0,571d0 <main.c.de940cdd+0x547fc>
    11ce:	0000                	unimp
    11d0:	7874                	.insn	2, 0x7874
    11d2:	6520                	.insn	2, 0x6520
    11d4:	706d                	c.lui	zero,0xffffb
    11d6:	7974                	.insn	2, 0x7974
    11d8:	0000                	unimp
    11da:	0000                	unimp
    11dc:	7274                	.insn	2, 0x7274
    11de:	6e61                	lui	t3,0x18
    11e0:	74696d73          	csrrs	s10,0x746,18
    11e4:	6320                	.insn	2, 0x6320
    11e6:	6c706d6f          	jal	s10,80ac <main.c.de940cdd+0x56d8>
    11ea:	7465                	lui	s0,0xffff9
    11ec:	0065                	c.nop	25
    11ee:	0000                	unimp
    11f0:	0d86                	sll	s11,s11,0x1
    11f2:	0000                	unimp
    11f4:	0dba                	sll	s11,s11,0xe
    11f6:	0000                	unimp
    11f8:	0e02                	c.slli64	t3
    11fa:	0000                	unimp
    11fc:	0fb8                	add	a4,sp,984
    11fe:	0000                	unimp
    1200:	1052                	c.slli	zero,0x34
    1202:	0000                	unimp
    1204:	10f8                	add	a4,sp,108
    1206:	0000                	unimp
    1208:	1116                	sll	sp,sp,0x25
	...

0000120c <errstr>:
    120c:	11a8 0000 11b4 0000 11c0 0000 11d0 0000     ................
    121c:	11dc 0000                                   ....

00001220 <fontdata>:
	...
    1228:	817e 81a5 99bd 7e81 ff7e ffdb e7c3 7eff     ~......~~......~
    1238:	fe6c fefe 387c 0010 3810 fe7c 387c 0010     l...|8...8|.|8..
    1248:	7c38 fe38 d6fe 3810 3810 fe7c 7cfe 3810     8|8....8.8|..|.8
    1258:	0000 3c18 183c 0000 ffff c3e7 e7c3 ffff     ...<<...........
    1268:	3c00 4266 6642 003c c3ff bd99 99bd ffc3     .<fBBf<.........
    1278:	070f 7d0f cccc 78cc 663c 6666 183c 187e     ...}...x<fff<.~.
    1288:	333f 303f 7030 e0f0 637f 637f 6763 c0e6     ?3?00p...c.ccg..
    1298:	db18 e73c 3ce7 18db e080 fef8 e0f8 0080     ..<..<..........
    12a8:	0e02 fe3e 0e3e 0002 3c18 187e 7e18 183c     ..>.>....<~..~<.
    12b8:	6666 6666 0066 0066 db7f 7bdb 1b1b 001b     fffff.f....{....
    12c8:	613e 663c 3c66 7c86 0000 0000 7e7e 007e     >a<ff<.|....~~~.
    12d8:	3c18 187e 3c7e ff18 3c18 187e 1818 0018     .<~.~<...<~.....
    12e8:	1818 1818 3c7e 0018 1800 fe0c 180c 0000     ....~<..........
    12f8:	3000 fe60 3060 0000 0000 c0c0 fec0 0000     .0`.`0..........
    1308:	2400 ff66 2466 0000 1800 7e3c ffff 0000     .$f.f$....<~....
    1318:	ff00 7eff 183c 0000 0000 0000 0000 0000     ...~<...........
    1328:	3c18 183c 0018 0018 6666 0024 0000 0000     .<<.....ff$.....
    1338:	6c6c 6cfe 6cfe 006c 3e18 3c60 7c06 0018     ll.l.ll..>`<.|..
    1348:	c600 18cc 6630 00c6 6c38 7638 ccdc 0076     ....0f..8l8v..v.
    1358:	1818 0030 0000 0000 180c 3030 1830 000c     ..0.......000...
    1368:	1830 0c0c 180c 0030 6600 ff3c 663c 0000     0.....0..f<.<f..
    1378:	1800 7e18 1818 0000 0000 0000 1800 3018     ...~...........0
    1388:	0000 7e00 0000 0000 0000 0000 1800 0018     ...~............
    1398:	0c06 3018 c060 0080 6c38 d6c6 6cc6 0038     ...0`...8l...l8.
    13a8:	3818 1818 1818 007e c67c 1c06 6630 00fe     .8....~.|...0f..
    13b8:	c67c 3c06 c606 007c 3c1c cc6c 0cfe 001e     |..<..|..<l.....
    13c8:	c0fe fcc0 c606 007c 6038 fcc0 c6c6 007c     ......|.8`....|.
    13d8:	c6fe 180c 3030 0030 c67c 7cc6 c6c6 007c     ....000.|..|..|.
    13e8:	c67c 7ec6 0c06 0078 1800 0018 1800 0018     |..~..x.........
    13f8:	1800 0018 1800 3018 0c06 3018 0c18 0006     .......0...0....
    1408:	0000 007e 7e00 0000 3060 0c18 3018 0060     ..~..~..`0...0`.
    1418:	c67c 180c 0018 0018 c67c dede c0de 0078     |.......|.....x.
    1428:	6c38 fec6 c6c6 00c6 66fc 7c66 6666 00fc     8l.......ff|ff..
    1438:	663c c0c0 66c0 003c 6cf8 6666 6c66 00f8     <f...f<..lfffl..
    1448:	62fe 7868 6268 00fe 62fe 7868 6068 00f0     .bhxhb...bhxh`..
    1458:	663c c0c0 66ce 003a c6c6 fec6 c6c6 00c6     <f...f:.........
    1468:	183c 1818 1818 003c 0c1e 0c0c cccc 0078     <.....<.......x.
    1478:	66e6 786c 666c 00e6 60f0 6060 6662 00fe     .flxlf...```bf..
    1488:	eec6 fefe c6d6 00c6 e6c6 def6 c6ce 00c6     ................
    1498:	c67c c6c6 c6c6 007c 66fc 7c66 6060 00f0     |.....|..ff|``..
    14a8:	c67c c6c6 cec6 0e7c 66fc 7c66 666c 00e6     |.....|..ff|lf..
    14b8:	663c 1830 660c 003c 7e7e 185a 1818 003c     <f0..f<.~~Z...<.
    14c8:	c6c6 c6c6 c6c6 007c c6c6 c6c6 6cc6 0038     ......|......l8.
    14d8:	c6c6 d6c6 fed6 006c c6c6 386c c66c 00c6     ......l...l8l...
    14e8:	6666 3c66 1818 003c c6fe 188c 6632 00fe     fff<..<.....2f..
    14f8:	303c 3030 3030 003c 60c0 1830 060c 0002     <00000<..`0.....
    1508:	0c3c 0c0c 0c0c 003c 3810 c66c 0000 0000     <.....<..8l.....
    1518:	0000 0000 0000 ff00 1830 000c 0000 0000     ........0.......
    1528:	0000 0c78 cc7c 0076 60e0 667c 6666 00dc     ..x.|.v..`|fff..
    1538:	0000 c67c c6c0 007c 0c1c cc7c cccc 0076     ..|...|...|...v.
    1548:	0000 c67c c0fe 007c 663c f860 6060 00f0     ..|...|.<f`.``..
    1558:	0000 cc76 7ccc f80c 60e0 766c 6666 00e6     ..v..|...`lvff..
    1568:	0018 1838 1818 003c 0006 0606 6606 3c66     ..8...<......ff<
    1578:	60e0 6c66 6c78 00e6 1838 1818 1818 003c     .`flxl..8.....<.
    1588:	0000 feec d6d6 00d6 0000 66dc 6666 0066     ...........ffff.
    1598:	0000 c67c c6c6 007c 0000 66dc 7c66 f060     ..|...|....ff|`.
    15a8:	0000 cc76 7ccc 1e0c 0000 76dc 6060 00f0     ..v..|.....v``..
    15b8:	0000 c07e 067c 00fc 3030 30fc 3630 001c     ..~.|...00.006..
    15c8:	0000 cccc cccc 0076 0000 c6c6 6cc6 0038     ......v......l8.
    15d8:	0000 d6c6 fed6 006c 0000 6cc6 6c38 00c6     ......l....l8l..
    15e8:	0000 c6c6 7ec6 fc06 0000 4c7e 3218 007e     .....~....~L.2~.
    15f8:	180e 7018 1818 000e 1818 1818 1818 0018     ...p............
    1608:	1870 0e18 1818 0070 dc76 0000 0000 0000     p.....p.v.......
    1618:	1000 6c38 c6c6 00fe c67c c0c0 7cc6 780c     ..8l....|....|.x
    1628:	00cc cccc cccc 0076 180c c67c c0fe 007c     ......v...|...|.
    1638:	827c 0c78 cc7c 0076 00c6 0c78 cc7c 0076     |.x.|.v...x.|.v.
    1648:	1830 0c78 cc7c 0076 3030 0c78 cc7c 0076     0.x.|.v.00x.|.v.
    1658:	0000 c07e 7ec0 380c 827c c67c c0fe 007c     ..~..~.8|.|...|.
    1668:	00c6 c67c c0fe 007c 1830 c67c c0fe 007c     ..|...|.0.|...|.
    1678:	0066 1838 1818 003c 827c 1838 1818 003c     f.8...<.|.8...<.
    1688:	1830 3800 1818 003c 38c6 c66c c6fe 00c6     0..8..<..8l.....
    1698:	6c38 c67c c6fe 00c6 3018 c0fe c0f8 00fe     8l|......0......
    16a8:	0000 187e d87e 007e 6c3e fecc cccc 00ce     ..~.~.~.>l......
    16b8:	827c c67c c6c6 007c 00c6 c67c c6c6 007c     |.|...|...|...|.
    16c8:	1830 c67c c6c6 007c 8478 cc00 cccc 0076     0.|...|.x.....v.
    16d8:	3060 cccc cccc 0076 00c6 c6c6 7ec6 fc06     `0....v......~..
    16e8:	38c6 c66c 6cc6 0038 00c6 c6c6 c6c6 007c     .8l..l8.......|.
    16f8:	1818 c07e 7ec0 1818 6c38 f064 6660 00fc     ..~..~..8ld.`f..
    1708:	6666 7e3c 7e18 1818 ccf8 facc cfc6 c7c6     ff<~.~..........
    1718:	1b0e 3c18 d818 0070 3018 0c78 cc7c 0076     ...<..p..0x.|.v.
    1728:	180c 3800 1818 003c 180c c67c c6c6 007c     ...8..<...|...|.
    1738:	3018 cccc cccc 0076 dc76 dc00 6666 0066     .0....v.v...fff.
    1748:	dc76 e600 def6 00ce 6c3c 3e6c 7e00 0000     v.......<ll>.~..
    1758:	6c38 386c 7c00 0000 0018 1818 6330 003e     8ll8.|......0c>.
    1768:	0000 fe00 c0c0 0000 0000 fe00 0606 0000     ................
    1778:	e663 7e6c 6633 0fcc e663 7a6c 6a36 06df     c.l~3f..c.lz6j..
    1788:	0018 1818 3c3c 0018 3300 cc66 3366 0000     ....<<...3f.f3..
    1798:	cc00 3366 cc66 0000 8822 8822 8822 8822     ..f3f...".".".".
    17a8:	aa55 aa55 aa55 aa55 dd77 dd77 dd77 dd77     U.U.U.U.w.w.w.w.
    17b8:	1818 1818 1818 1818 1818 1818 18f8 1818     ................
    17c8:	1818 18f8 18f8 1818 3636 3636 36f6 3636     ........6666.666
    17d8:	0000 0000 36fe 3636 0000 18f8 18f8 1818     .....666........
    17e8:	3636 06f6 36f6 3636 3636 3636 3636 3636     66...66666666666
    17f8:	0000 06fe 36f6 3636 3636 06f6 00fe 0000     .....66666......
    1808:	3636 3636 00fe 0000 1818 18f8 00f8 0000     6666............
    1818:	0000 0000 18f8 1818 1818 1818 001f 0000     ................
    1828:	1818 1818 00ff 0000 0000 0000 18ff 1818     ................
    1838:	1818 1818 181f 1818 0000 0000 00ff 0000     ................
    1848:	1818 1818 18ff 1818 1818 181f 181f 1818     ................
    1858:	3636 3636 3637 3636 3636 3037 003f 0000     666676666670?...
    1868:	0000 303f 3637 3636 3636 00f7 00ff 0000     ..?0766666......
    1878:	0000 00ff 36f7 3636 3636 3037 3637 3636     .....66666707666
    1888:	0000 00ff 00ff 0000 3636 00f7 36f7 3636     ........66...666
    1898:	1818 00ff 00ff 0000 3636 3636 00ff 0000     ........6666....
    18a8:	0000 00ff 18ff 1818 0000 0000 36ff 3636     .............666
    18b8:	3636 3636 003f 0000 1818 181f 001f 0000     6666?...........
    18c8:	0000 181f 181f 1818 0000 0000 363f 3636     ............?666
    18d8:	3636 3636 36ff 3636 1818 18ff 18ff 1818     6666.666........
    18e8:	1818 1818 00f8 0000 0000 0000 181f 1818     ................
    18f8:	ffff ffff ffff ffff 0000 0000 ffff ffff     ................
    1908:	f0f0 f0f0 f0f0 f0f0 0f0f 0f0f 0f0f 0f0f     ................
    1918:	ffff ffff 0000 0000 0000 dc76 dcc8 0076     ..........v...v.
    1928:	cc78 d8cc c6cc 00cc c6fe c0c0 c0c0 00c0     x...............
    1938:	0000 6cfe 6c6c 006c c6fe 3060 c660 00fe     ...llll...`0`...
    1948:	0000 d87e d8d8 0070 0000 6666 6666 c07c     ..~...p...ffff|.
    1958:	7600 18dc 1818 0018 187e 663c 3c66 7e18     .v......~.<ff<.~
    1968:	6c38 fec6 6cc6 0038 6c38 c6c6 6c6c 00ee     8l...l8.8l..ll..
    1978:	180e 3e0c 6666 003c 0000 db7e 7edb 0000     ...>ff<...~..~..
    1988:	0c06 db7e 7edb c060 301e 7e60 3060 001e     ..~..~`..0`~`0..
    1998:	7c00 c6c6 c6c6 00c6 fe00 fe00 fe00 0000     .|..............
    19a8:	1818 187e 0018 007e 1830 180c 0030 007e     ..~...~.0...0.~.
    19b8:	180c 1830 000c 007e 1b0e 181b 1818 1818     ..0...~.........
    19c8:	1818 1818 d818 70d8 1800 7e00 1800 0000     .......p...~....
    19d8:	7600 00dc dc76 0000 6c38 386c 0000 0000     .v..v...8ll8....
    19e8:	0000 1800 0018 0000 0000 1800 0000 0000     ................
    19f8:	0c0f 0c0c 6cec 1c3c 366c 3636 0036 0000     .....l<.l6666...
    1a08:	0c78 3018 007c 0000 0000 3c3c 3c3c 0000     x..0|.....<<<<..
	...

00001a20 <ssd1306_init_array>:
    1a20:	d5ae a880 d33f 4000 148d 0020 c8a1 12da     ....?..@.. .....
    1a30:	8f81 f1d9 40db a6a4 ffaf 0000               .....@......

00001a3c <bomb_i_stripped>:
	...
    1a50:	0000 000c 0000 0012 0000 0024 0000 0048     ..........$...H.
    1a60:	0000 0050 0000 00f8 0300 00fe 0f00 80ff     ..P.............
    1a70:	1f00 c0ff 1f00 c0ff 3f00 e0ff 3f00 e0ff     .........?...?..
    1a80:	7300 f09f 7300 f09f 7300 f09f 7300 f09f     .s...s...s...s..
    1a90:	7300 f09f 3f00 e0ff 3f00 e0ff 1f00 c0ff     .s...?...?......
    1aa0:	1f00 c0ff 0f00 80ff 1300 40e0 2000 20c0     ...........@. . 
    1ab0:	7f00 e0ff 0000 0000 0000 0000               ............

00001abc <expand>:
    1abc:	0200 0a08 2220 2a28 8280 8a88 a2a0 aaa8     .... "(*........
