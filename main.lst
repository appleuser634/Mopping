
main.elf:     file format elf32-littleriscv


Disassembly of section .init:

00000000 <InterruptVector>:
   0:	4d80006f          	j	4d8 <handle_reset>
   4:	00000000          	.word	0x00000000
   8:	00000556          	.word	0x00000556
   c:	00000554          	.word	0x00000554
	...
  30:	00000554          	.word	0x00000554
  34:	00000000          	.word	0x00000000
  38:	00000554          	.word	0x00000554
  3c:	00000000          	.word	0x00000000
  40:	00000554          	.word	0x00000554
  44:	00000554          	.word	0x00000554
  48:	00000554          	.word	0x00000554
  4c:	00000554          	.word	0x00000554
  50:	00000554          	.word	0x00000554
  54:	00000554          	.word	0x00000554
  58:	00000554          	.word	0x00000554
  5c:	00000554          	.word	0x00000554
  60:	00000554          	.word	0x00000554
  64:	00000554          	.word	0x00000554
  68:	00000554          	.word	0x00000554
  6c:	00000554          	.word	0x00000554
  70:	00000554          	.word	0x00000554
  74:	00000554          	.word	0x00000554
  78:	00000554          	.word	0x00000554
  7c:	00000554          	.word	0x00000554
  80:	00000554          	.word	0x00000554
  84:	00000554          	.word	0x00000554
  88:	00000554          	.word	0x00000554
  8c:	00000554          	.word	0x00000554
  90:	00000554          	.word	0x00000554
  94:	00000554          	.word	0x00000554
  98:	00000554          	.word	0x00000554
  9c:	0000                	unimp
	...

Disassembly of section .text:

000000a0 <__mulsi3>:
  a0:	862a                	mv	a2,a0
  a2:	4501                	li	a0,0
  a4:	0015f693          	andi	a3,a1,1
  a8:	c291                	beqz	a3,ac <__mulsi3+0xc>
  aa:	9532                	add	a0,a0,a2
  ac:	8185                	srli	a1,a1,0x1
  ae:	0606                	slli	a2,a2,0x1
  b0:	f9f5                	bnez	a1,a4 <__mulsi3+0x4>
  b2:	8082                	ret
  b4:	0000                	unimp
	...

000000b8 <__divsi3>:
  b8:	02054e63          	bltz	a0,f4 <__umodsi3+0x8>
  bc:	0405c363          	bltz	a1,102 <__umodsi3+0x16>

000000c0 <__hidden___udivsi3>:
  c0:	862e                	mv	a2,a1
  c2:	85aa                	mv	a1,a0
  c4:	557d                	li	a0,-1
  c6:	c215                	beqz	a2,ea <__hidden___udivsi3+0x2a>
  c8:	4685                	li	a3,1
  ca:	00b67863          	bgeu	a2,a1,da <__hidden___udivsi3+0x1a>
  ce:	00c05663          	blez	a2,da <__hidden___udivsi3+0x1a>
  d2:	0606                	slli	a2,a2,0x1
  d4:	0686                	slli	a3,a3,0x1
  d6:	feb66ce3          	bltu	a2,a1,ce <__hidden___udivsi3+0xe>
  da:	4501                	li	a0,0
  dc:	00c5e463          	bltu	a1,a2,e4 <__hidden___udivsi3+0x24>
  e0:	8d91                	sub	a1,a1,a2
  e2:	8d55                	or	a0,a0,a3
  e4:	8285                	srli	a3,a3,0x1
  e6:	8205                	srli	a2,a2,0x1
  e8:	faf5                	bnez	a3,dc <__hidden___udivsi3+0x1c>
  ea:	8082                	ret

000000ec <__umodsi3>:
  ec:	8286                	mv	t0,ra
  ee:	3fc9                	jal	c0 <__hidden___udivsi3>
  f0:	852e                	mv	a0,a1
  f2:	8282                	jr	t0
  f4:	40a00533          	neg	a0,a0
  f8:	00b04763          	bgtz	a1,106 <__umodsi3+0x1a>
  fc:	40b005b3          	neg	a1,a1
 100:	b7c1                	j	c0 <__hidden___udivsi3>
 102:	40b005b3          	neg	a1,a1
 106:	8286                	mv	t0,ra
 108:	3f65                	jal	c0 <__hidden___udivsi3>
 10a:	40a00533          	neg	a0,a0
 10e:	8282                	jr	t0

00000110 <__modsi3>:
 110:	8286                	mv	t0,ra
 112:	0005c763          	bltz	a1,120 <__modsi3+0x10>
 116:	00054963          	bltz	a0,128 <__modsi3+0x18>
 11a:	375d                	jal	c0 <__hidden___udivsi3>
 11c:	852e                	mv	a0,a1
 11e:	8282                	jr	t0
 120:	40b005b3          	neg	a1,a1
 124:	fe055be3          	bgez	a0,11a <__modsi3+0xa>
 128:	40a00533          	neg	a0,a0
 12c:	3f51                	jal	c0 <__hidden___udivsi3>
 12e:	40b00533          	neg	a0,a1
 132:	8282                	jr	t0
	...

00000136 <_puts>:
 136:	832a                	mv	t1,a0
 138:	852e                	mv	a0,a1
 13a:	ce01                	beqz	a2,152 <_puts+0x1c>
 13c:	00062283          	lw	t0,0(a2)
 140:	4701                	li	a4,0
 142:	425c                	lw	a5,4(a2)
 144:	00a74863          	blt	a4,a0,154 <_puts+0x1e>
 148:	00078023          	sb	zero,0(a5)
 14c:	4248                	lw	a0,4(a2)
 14e:	40550533          	sub	a0,a0,t0
 152:	8082                	ret
 154:	460c                	lw	a1,8(a2)
 156:	4214                	lw	a3,0(a2)
 158:	15fd                	addi	a1,a1,-1
 15a:	96ae                	add	a3,a3,a1
 15c:	fed786e3          	beq	a5,a3,148 <_puts+0x12>
 160:	00178693          	addi	a3,a5,1
 164:	c254                	sw	a3,4(a2)
 166:	00e306b3          	add	a3,t1,a4
 16a:	0006c683          	lbu	a3,0(a3)
 16e:	0705                	addi	a4,a4,1
 170:	00d78023          	sb	a3,0(a5)
 174:	b7f9                	j	142 <_puts+0xc>

00000176 <mini_pad>:
 176:	c699                	beqz	a3,184 <mini_pad+0xe>
 178:	4301                	li	t1,0
 17a:	00b6d763          	bge	a3,a1,188 <mini_pad+0x12>
 17e:	85b6                	mv	a1,a3
 180:	4305                	li	t1,1
 182:	a019                	j	188 <mini_pad+0x12>
 184:	4301                	li	t1,0
 186:	86ae                	mv	a3,a1
 188:	8e8d                	sub	a3,a3,a1
 18a:	87ba                	mv	a5,a4
 18c:	00e683b3          	add	t2,a3,a4
 190:	40f382b3          	sub	t0,t2,a5
 194:	04504a63          	bgtz	t0,1e8 <mini_pad+0x72>
 198:	fff6c793          	not	a5,a3
 19c:	87fd                	srai	a5,a5,0x1f
 19e:	8efd                	and	a3,a3,a5
 1a0:	96ba                	add	a3,a3,a4
 1a2:	4781                	li	a5,0
 1a4:	40f58633          	sub	a2,a1,a5
 1a8:	00f682b3          	add	t0,a3,a5
 1ac:	04c04263          	bgtz	a2,1f0 <mini_pad+0x7a>
 1b0:	fff5c793          	not	a5,a1
 1b4:	87fd                	srai	a5,a5,0x1f
 1b6:	8dfd                	and	a1,a1,a5
 1b8:	95b6                	add	a1,a1,a3
 1ba:	40e58533          	sub	a0,a1,a4
 1be:	02030463          	beqz	t1,1e6 <mini_pad+0x70>
 1c2:	02b77263          	bgeu	a4,a1,1e6 <mini_pad+0x70>
 1c6:	02a00793          	li	a5,42
 1ca:	fef58fa3          	sb	a5,-1(a1)
 1ce:	fff58693          	addi	a3,a1,-1
 1d2:	00d77a63          	bgeu	a4,a3,1e6 <mini_pad+0x70>
 1d6:	fef58f23          	sb	a5,-2(a1)
 1da:	ffe58693          	addi	a3,a1,-2
 1de:	00d77463          	bgeu	a4,a3,1e6 <mini_pad+0x70>
 1e2:	fef58ea3          	sb	a5,-3(a1)
 1e6:	8082                	ret
 1e8:	0785                	addi	a5,a5,1
 1ea:	fec78fa3          	sb	a2,-1(a5)
 1ee:	b74d                	j	190 <mini_pad+0x1a>
 1f0:	00f50633          	add	a2,a0,a5
 1f4:	00064603          	lbu	a2,0(a2)
 1f8:	0785                	addi	a5,a5,1
 1fa:	00c28023          	sb	a2,0(t0)
 1fe:	b75d                	j	1a4 <mini_pad+0x2e>

00000200 <mini_itoa.part.0>:
 200:	1101                	addi	sp,sp,-32
 202:	ce06                	sw	ra,28(sp)
 204:	cc22                	sw	s0,24(sp)
 206:	ca26                	sw	s1,20(sp)
 208:	c002                	sw	zero,0(sp)
 20a:	832a                	mv	t1,a0
 20c:	00055763          	bgez	a0,21a <mini_itoa.part.0+0x1a>
 210:	e689                	bnez	a3,21a <mini_itoa.part.0+0x1a>
 212:	4785                	li	a5,1
 214:	40a00333          	neg	t1,a0
 218:	c03e                	sw	a5,0(sp)
 21a:	8a05                	andi	a2,a2,1
 21c:	06100413          	li	s0,97
 220:	c219                	beqz	a2,226 <mini_itoa.part.0+0x26>
 222:	04100413          	li	s0,65
 226:	84ba                	mv	s1,a4
 228:	1459                	addi	s0,s0,-10
 22a:	851a                	mv	a0,t1
 22c:	c83a                	sw	a4,16(sp)
 22e:	c21a                	sw	t1,4(sp)
 230:	c62e                	sw	a1,12(sp)
 232:	c41a                	sw	t1,8(sp)
 234:	3d65                	jal	ec <__umodsi3>
 236:	47a5                	li	a5,9
 238:	4322                	lw	t1,8(sp)
 23a:	45b2                	lw	a1,12(sp)
 23c:	4742                	lw	a4,16(sp)
 23e:	0ff57693          	zext.b	a3,a0
 242:	06a7e163          	bltu	a5,a0,2a4 <mini_itoa.part.0+0xa4>
 246:	03068693          	addi	a3,a3,48
 24a:	0ff6f693          	zext.b	a3,a3
 24e:	00148793          	addi	a5,s1,1
 252:	00d48023          	sb	a3,0(s1)
 256:	851a                	mv	a0,t1
 258:	c83a                	sw	a4,16(sp)
 25a:	c63e                	sw	a5,12(sp)
 25c:	c42e                	sw	a1,8(sp)
 25e:	358d                	jal	c0 <__hidden___udivsi3>
 260:	4692                	lw	a3,4(sp)
 262:	45a2                	lw	a1,8(sp)
 264:	47b2                	lw	a5,12(sp)
 266:	4742                	lw	a4,16(sp)
 268:	832a                	mv	t1,a0
 26a:	02b6fb63          	bgeu	a3,a1,2a0 <mini_itoa.part.0+0xa0>
 26e:	4682                	lw	a3,0(sp)
 270:	c699                	beqz	a3,27e <mini_itoa.part.0+0x7e>
 272:	02d00693          	li	a3,45
 276:	00d78023          	sb	a3,0(a5)
 27a:	00248793          	addi	a5,s1,2
 27e:	40e78533          	sub	a0,a5,a4
 282:	01f55693          	srli	a3,a0,0x1f
 286:	96aa                	add	a3,a3,a0
 288:	00078023          	sb	zero,0(a5)
 28c:	8685                	srai	a3,a3,0x1
 28e:	4601                	li	a2,0
 290:	17fd                	addi	a5,a5,-1
 292:	00d64b63          	blt	a2,a3,2a8 <mini_itoa.part.0+0xa8>
 296:	40f2                	lw	ra,28(sp)
 298:	4462                	lw	s0,24(sp)
 29a:	44d2                	lw	s1,20(sp)
 29c:	6105                	addi	sp,sp,32
 29e:	8082                	ret
 2a0:	84be                	mv	s1,a5
 2a2:	b761                	j	22a <mini_itoa.part.0+0x2a>
 2a4:	96a2                	add	a3,a3,s0
 2a6:	b755                	j	24a <mini_itoa.part.0+0x4a>
 2a8:	00c705b3          	add	a1,a4,a2
 2ac:	0007c283          	lbu	t0,0(a5)
 2b0:	0005c303          	lbu	t1,0(a1)
 2b4:	0605                	addi	a2,a2,1
 2b6:	00558023          	sb	t0,0(a1)
 2ba:	00678023          	sb	t1,0(a5)
 2be:	bfc9                	j	290 <mini_itoa.part.0+0x90>

000002c0 <ssd1306_i2c_setup>:
void ssd1306_i2c_setup(void)
{
	uint16_t tempreg;
	
	// Reset I2C1 to init all regs
	RCC->APB1PRSTR |= RCC_APB1Periph_I2C1;
 2c0:	400217b7          	lui	a5,0x40021
 2c4:	4b98                	lw	a4,16(a5)
 2c6:	002006b7          	lui	a3,0x200
 2ca:	8f55                	or	a4,a4,a3
 2cc:	cb98                	sw	a4,16(a5)
	RCC->APB1PRSTR &= ~RCC_APB1Periph_I2C1;
 2ce:	4b98                	lw	a4,16(a5)
 2d0:	ffe006b7          	lui	a3,0xffe00
 2d4:	16fd                	addi	a3,a3,-1 # ffdfffff <__global_pointer$+0xdfdff7ff>
 2d6:	8f75                	and	a4,a4,a3
 2d8:	cb98                	sw	a4,16(a5)
	
	// set freq
	tempreg = I2C1->CTLR2;
 2da:	400057b7          	lui	a5,0x40005
 2de:	4047d703          	lhu	a4,1028(a5) # 40005404 <__global_pointer$+0x20004c04>
	tempreg &= ~I2C_CTLR2_FREQ;
 2e2:	66c1                	lui	a3,0x10
 2e4:	fc068693          	addi	a3,a3,-64 # ffc0 <main.c.0dad9b4f+0xdd29>
 2e8:	8f75                	and	a4,a4,a3
	tempreg |= (FUNCONF_SYSTEM_CORE_CLOCK/SSD1306_I2C_PRERATE)&I2C_CTLR2_FREQ;
 2ea:	01876713          	ori	a4,a4,24
	I2C1->CTLR2 = tempreg;
 2ee:	40e79223          	sh	a4,1028(a5)
	tempreg = (FUNCONF_SYSTEM_CORE_CLOCK/(25*SSD1306_I2C_CLKRATE))&I2C_CKCFGR_CCR;
	tempreg |= I2C_CKCFGR_DUTY;
#endif
	tempreg |= I2C_CKCFGR_FS;
#endif
	I2C1->CKCFGR = tempreg;
 2f2:	7771                	lui	a4,0xffffc
 2f4:	0705                	addi	a4,a4,1 # ffffc001 <__global_pointer$+0xdfffb801>
 2f6:	40e79e23          	sh	a4,1052(a5)
	// initialize the state
	ssd1306_i2c_irq_state = 0;
#endif
	
	// Enable I2C
	I2C1->CTLR1 |= I2C_CTLR1_PE;
 2fa:	4007d703          	lhu	a4,1024(a5)
 2fe:	00176713          	ori	a4,a4,1
 302:	40e79023          	sh	a4,1024(a5)

	// set ACK mode
	I2C1->CTLR1 |= I2C_CTLR1_ACK;
 306:	4007d703          	lhu	a4,1024(a5)
 30a:	40076713          	ori	a4,a4,1024
 30e:	40e79023          	sh	a4,1024(a5)
}
 312:	8082                	ret

00000314 <ssd1306_drawImage>:

/*
 * draw a an image from an array, directly into to the display buffer
 * the color modes allow for overwriting and even layering (sprites!)
 */
void ssd1306_drawImage(int x, int y, const unsigned char* input, uint8_t width, uint8_t height, uint8_t color_mode) {
 314:	7179                	addi	sp,sp,-48
 316:	d03e                	sw	a5,32(sp)
	int x_absolute;
	int y_absolute;
	uint8_t pixel;
	uint8_t bytes_to_draw = width / 8;
 318:	0036d793          	srli	a5,a3,0x3
 31c:	0f86f693          	andi	a3,a3,248
 320:	c83e                	sw	a5,16(sp)
	uint16_t buffer_addr;

	for (uint8_t line = 0; line < height; line++) {
 322:	00a687b3          	add	a5,a3,a0
void ssd1306_drawImage(int x, int y, const unsigned char* input, uint8_t width, uint8_t height, uint8_t color_mode) {
 326:	d422                	sw	s0,40(sp)
 328:	d226                	sw	s1,36(sp)
 32a:	d606                	sw	ra,44(sp)
 32c:	c02a                	sw	a0,0(sp)
 32e:	ca2e                	sw	a1,20(sp)
 330:	cc32                	sw	a2,24(sp)
 332:	ce3a                	sw	a4,28(sp)
 334:	c43e                	sw	a5,8(sp)
	for (uint8_t line = 0; line < height; line++) {
 336:	4401                	li	s0,0
			break;
		}

		// SSD1306 is in vertical mode, yet we want to draw horizontally, which necessitates assembling the output bytes from the input data
		// bitmask for current pixel in vertical (output) byte
		uint8_t v_mask = 1 << (y_absolute & 7);
 338:	4485                	li	s1,1
		y_absolute = y + line;
 33a:	47d2                	lw	a5,20(sp)
 33c:	97a2                	add	a5,a5,s0
    if (y_absolute < 0) {
 33e:	0007dd63          	bgez	a5,358 <ssd1306_drawImage+0x44>
	for (uint8_t line = 0; line < height; line++) {
 342:	47f2                	lw	a5,28(sp)
 344:	0405                	addi	s0,s0,1
 346:	0ff47413          	zext.b	s0,s0
 34a:	fef468e3          	bltu	s0,a5,33a <ssd1306_drawImage+0x26>
		}
		#if SSD1306_LOG_IMAGE == 1
		printf("\n\r");
		#endif
	}
}
 34e:	50b2                	lw	ra,44(sp)
 350:	5422                	lw	s0,40(sp)
 352:	5492                	lw	s1,36(sp)
 354:	6145                	addi	sp,sp,48
 356:	8082                	ret
		if (y_absolute >= SSD1306_H || y_absolute < 0) {
 358:	03f00713          	li	a4,63
 35c:	fef769e3          	bltu	a4,a5,34e <ssd1306_drawImage+0x3a>
		uint8_t v_mask = 1 << (y_absolute & 7);
 360:	0077f713          	andi	a4,a5,7
				buffer_addr = x_absolute + SSD1306_W * (y_absolute / 8);
 364:	878d                	srai	a5,a5,0x3
			uint8_t input_byte = input[byte + line * bytes_to_draw];
 366:	45c2                	lw	a1,16(sp)
				buffer_addr = x_absolute + SSD1306_W * (y_absolute / 8);
 368:	079e                	slli	a5,a5,0x7
 36a:	07c2                	slli	a5,a5,0x10
 36c:	83c1                	srli	a5,a5,0x10
		uint8_t v_mask = 1 << (y_absolute & 7);
 36e:	00e49733          	sll	a4,s1,a4
			uint8_t input_byte = input[byte + line * bytes_to_draw];
 372:	8522                	mv	a0,s0
				buffer_addr = x_absolute + SSD1306_W * (y_absolute / 8);
 374:	c63e                	sw	a5,12(sp)
		uint8_t v_mask = 1 << (y_absolute & 7);
 376:	c23a                	sw	a4,4(sp)
			uint8_t input_byte = input[byte + line * bytes_to_draw];
 378:	3325                	jal	a0 <__mulsi3>
 37a:	47e2                	lw	a5,24(sp)
				buffer_addr = x_absolute + SSD1306_W * (y_absolute / 8);
 37c:	45a2                	lw	a1,8(sp)
 37e:	953e                	add	a0,a0,a5
			uint8_t input_byte = input[byte + line * bytes_to_draw];
 380:	47b2                	lw	a5,12(sp)
 382:	00054283          	lbu	t0,0(a0)
 386:	4301                	li	t1,0
 388:	00b786b3          	add	a3,a5,a1
 38c:	06c2                	slli	a3,a3,0x10
 38e:	200007b7          	lui	a5,0x20000
 392:	82c1                	srli	a3,a3,0x10
 394:	00078793          	mv	a5,a5
 398:	96be                	add	a3,a3,a5
						ssd1306_buffer[buffer_addr] = (ssd1306_buffer[buffer_addr] & ~v_mask) | (input_pixel ? v_mask : 0);
 39a:	00410783          	lb	a5,4(sp)
 39e:	0006c603          	lbu	a2,0(a3)
				uint8_t input_pixel = input_byte & (1 << pixel);
 3a2:	00649733          	sll	a4,s1,t1
						ssd1306_buffer[buffer_addr] = (ssd1306_buffer[buffer_addr] & ~v_mask) | (input_pixel ? v_mask : 0);
 3a6:	fff7c393          	not	t2,a5
 3aa:	00767633          	and	a2,a2,t2
				switch (color_mode) {
 3ae:	5382                	lw	t2,32(sp)
						ssd1306_buffer[buffer_addr] = (ssd1306_buffer[buffer_addr] & ~v_mask) | (input_pixel ? v_mask : 0);
 3b0:	0662                	slli	a2,a2,0x18
				uint8_t input_pixel = input_byte & (1 << pixel);
 3b2:	00e2f733          	and	a4,t0,a4
						ssd1306_buffer[buffer_addr] = (ssd1306_buffer[buffer_addr] & ~v_mask) | (input_pixel ? v_mask : 0);
 3b6:	8661                	srai	a2,a2,0x18
				switch (color_mode) {
 3b8:	02938763          	beq	t2,s1,3e6 <ssd1306_drawImage+0xd2>
						ssd1306_buffer[buffer_addr] = (ssd1306_buffer[buffer_addr] & ~v_mask) | (input_pixel ? v_mask : 0);
 3bc:	00e03733          	snez	a4,a4
						ssd1306_buffer[buffer_addr] = (ssd1306_buffer[buffer_addr] & ~v_mask) | (!input_pixel ? v_mask : 0);
 3c0:	40e00733          	neg	a4,a4
 3c4:	8ff9                	and	a5,a5,a4
 3c6:	8fd1                	or	a5,a5,a2
 3c8:	0ff7f793          	zext.b	a5,a5
 3cc:	00f68023          	sb	a5,0(a3)
			for (pixel = 0; pixel < 8; pixel++) {
 3d0:	0305                	addi	t1,t1,1
 3d2:	47a1                	li	a5,8
 3d4:	0685                	addi	a3,a3,1
 3d6:	fcf312e3          	bne	t1,a5,39a <ssd1306_drawImage+0x86>
		for (uint8_t byte = 0; byte < bytes_to_draw; byte++) {
 3da:	4782                	lw	a5,0(sp)
 3dc:	15e1                	addi	a1,a1,-8
 3de:	0505                	addi	a0,a0,1
 3e0:	fab790e3          	bne	a5,a1,380 <ssd1306_drawImage+0x6c>
 3e4:	bfb9                	j	342 <ssd1306_drawImage+0x2e>
						ssd1306_buffer[buffer_addr] = (ssd1306_buffer[buffer_addr] & ~v_mask) | (!input_pixel ? v_mask : 0);
 3e6:	00173713          	seqz	a4,a4
 3ea:	bfd9                	j	3c0 <ssd1306_drawImage+0xac>

000003ec <internal_handle_input.constprop.0>:
 3ec:	e00007b7          	lui	a5,0xe0000
 3f0:	0f47a783          	lw	a5,244(a5) # e00000f4 <__global_pointer$+0xbffff8f4>
 3f4:	8082                	ret

000003f6 <_write.constprop.0>:
 3f6:	1121                	addi	sp,sp,-24
 3f8:	c822                	sw	s0,16(sp)
 3fa:	ca06                	sw	ra,20(sp)
 3fc:	c626                	sw	s1,12(sp)
 3fe:	c402                	sw	zero,8(sp)
 400:	842e                	mv	s0,a1
 402:	eddd                	bnez	a1,4c0 <_write.constprop.0+0xca>
 404:	e00007b7          	lui	a5,0xe0000
 408:	0f47a783          	lw	a5,244(a5) # e00000f4 <__global_pointer$+0xbffff8f4>
 40c:	c789                	beqz	a5,416 <_write.constprop.0+0x20>
 40e:	0807f793          	andi	a5,a5,128
 412:	e391                	bnez	a5,416 <_write.constprop.0+0x20>
 414:	3fe1                	jal	3ec <internal_handle_input.constprop.0>
 416:	40d2                	lw	ra,20(sp)
 418:	8522                	mv	a0,s0
 41a:	4442                	lw	s0,16(sp)
 41c:	44b2                	lw	s1,12(sp)
 41e:	0161                	addi	sp,sp,24
 420:	8082                	ret
 422:	409407b3          	sub	a5,s0,s1
 426:	471d                	li	a4,7
 428:	00f75363          	bge	a4,a5,42e <_write.constprop.0+0x38>
 42c:	87ba                	mv	a5,a4
 42e:	00027737          	lui	a4,0x27
 432:	e00006b7          	lui	a3,0xe0000
 436:	10170713          	addi	a4,a4,257 # 27101 <main.c.0dad9b4f+0x24e6a>
 43a:	0f468693          	addi	a3,a3,244 # e00000f4 <__global_pointer$+0xbffff8f4>
 43e:	4290                	lw	a2,0(a3)
 440:	08067593          	andi	a1,a2,128
 444:	e1a5                	bnez	a1,4a4 <_write.constprop.0+0xae>
 446:	c611                	beqz	a2,452 <_write.constprop.0+0x5c>
 448:	c22a                	sw	a0,4(sp)
 44a:	c03e                	sw	a5,0(sp)
 44c:	3745                	jal	3ec <internal_handle_input.constprop.0>
 44e:	4512                	lw	a0,4(sp)
 450:	4782                	lw	a5,0(sp)
 452:	0034                	addi	a3,sp,8
 454:	470d                	li	a4,3
 456:	85b6                	mv	a1,a3
 458:	04f74a63          	blt	a4,a5,4ac <_write.constprop.0+0xb6>
 45c:	46a2                	lw	a3,8(sp)
 45e:	e0000737          	lui	a4,0xe0000
 462:	460d                	li	a2,3
 464:	0ed72c23          	sw	a3,248(a4) # e00000f8 <__global_pointer$+0xbffff8f8>
 468:	009506b3          	add	a3,a0,s1
 46c:	4701                	li	a4,0
 46e:	0006c283          	lbu	t0,0(a3)
 472:	0705                	addi	a4,a4,1
 474:	00e58333          	add	t1,a1,a4
 478:	00530023          	sb	t0,0(t1)
 47c:	00e78563          	beq	a5,a4,486 <_write.constprop.0+0x90>
 480:	0685                	addi	a3,a3,1
 482:	fec716e3          	bne	a4,a2,46e <_write.constprop.0+0x78>
 486:	00478713          	addi	a4,a5,4
 48a:	f8076713          	ori	a4,a4,-128
 48e:	00e10423          	sb	a4,8(sp)
 492:	46a2                	lw	a3,8(sp)
 494:	e0000737          	lui	a4,0xe0000
 498:	94be                	add	s1,s1,a5
 49a:	0ed72a23          	sw	a3,244(a4) # e00000f4 <__global_pointer$+0xbffff8f4>
 49e:	f884c2e3          	blt	s1,s0,422 <_write.constprop.0+0x2c>
 4a2:	bf95                	j	416 <_write.constprop.0+0x20>
 4a4:	177d                	addi	a4,a4,-1
 4a6:	ff41                	bnez	a4,43e <_write.constprop.0+0x48>
 4a8:	8426                	mv	s0,s1
 4aa:	b7b5                	j	416 <_write.constprop.0+0x20>
 4ac:	00e48633          	add	a2,s1,a4
 4b0:	962a                	add	a2,a2,a0
 4b2:	00064603          	lbu	a2,0(a2)
 4b6:	0705                	addi	a4,a4,1
 4b8:	0685                	addi	a3,a3,1
 4ba:	fec68fa3          	sb	a2,-1(a3)
 4be:	bf69                	j	458 <_write.constprop.0+0x62>
 4c0:	4481                	li	s1,0
 4c2:	bff1                	j	49e <_write.constprop.0+0xa8>

000004c4 <__puts_uart>:
 4c4:	1161                	addi	sp,sp,-8
 4c6:	c022                	sw	s0,0(sp)
 4c8:	c206                	sw	ra,4(sp)
 4ca:	842e                	mv	s0,a1
 4cc:	372d                	jal	3f6 <_write.constprop.0>
 4ce:	4092                	lw	ra,4(sp)
 4d0:	8522                	mv	a0,s0
 4d2:	4402                	lw	s0,0(sp)
 4d4:	0121                	addi	sp,sp,8
 4d6:	8082                	ret

000004d8 <handle_reset>:
 4d8:	20000197          	auipc	gp,0x20000
 4dc:	32818193          	addi	gp,gp,808 # 20000800 <__global_pointer$>
 4e0:	00018113          	mv	sp,gp
 4e4:	08000513          	li	a0,128
 4e8:	30051073          	csrw	mstatus,a0
 4ec:	468d                	li	a3,3
 4ee:	00000517          	auipc	a0,0x0
 4f2:	b1250513          	addi	a0,a0,-1262 # 0 <InterruptVector>
 4f6:	8d55                	or	a0,a0,a3
 4f8:	30551073          	csrw	mtvec,a0
 4fc:	20000517          	auipc	a0,0x20000
 500:	b0450513          	addi	a0,a0,-1276 # 20000000 <ssd1306_buffer>
 504:	c0018593          	addi	a1,gp,-1024 # 20000400 <_ebss>
 508:	4601                	li	a2,0
 50a:	00b55663          	bge	a0,a1,516 <handle_reset+0x3e>
 50e:	c110                	sw	a2,0(a0)
 510:	0511                	addi	a0,a0,4
 512:	feb54ee3          	blt	a0,a1,50e <handle_reset+0x36>
 516:	00001517          	auipc	a0,0x1
 51a:	86a50513          	addi	a0,a0,-1942 # d80 <_data_lma>
 51e:	20000597          	auipc	a1,0x20000
 522:	ae258593          	addi	a1,a1,-1310 # 20000000 <ssd1306_buffer>
 526:	20000617          	auipc	a2,0x20000
 52a:	ada60613          	addi	a2,a2,-1318 # 20000000 <ssd1306_buffer>
 52e:	00c58863          	beq	a1,a2,53e <handle_reset+0x66>
 532:	4114                	lw	a3,0(a0)
 534:	c194                	sw	a3,0(a1)
 536:	0511                	addi	a0,a0,4
 538:	0591                	addi	a1,a1,4
 53a:	fec59ae3          	bne	a1,a2,52e <handle_reset+0x56>
 53e:	e000f7b7          	lui	a5,0xe000f
 542:	4705                	li	a4,1
 544:	c398                	sw	a4,0(a5)
 546:	6785                	lui	a5,0x1
 548:	99478793          	addi	a5,a5,-1644 # 994 <main>
 54c:	34179073          	csrw	mepc,a5
 550:	30200073          	mret

00000554 <ADC1_IRQHandler>:
 554:	a001                	j	554 <ADC1_IRQHandler>

00000556 <NMI_Handler>:
 556:	40021737          	lui	a4,0x40021
 55a:	471c                	lw	a5,8(a4)
 55c:	008006b7          	lui	a3,0x800
 560:	8fd5                	or	a5,a5,a3
 562:	c71c                	sw	a5,8(a4)

00000564 <strlen>:
 564:	87aa                	mv	a5,a0
 566:	0007c703          	lbu	a4,0(a5)
 56a:	e701                	bnez	a4,572 <strlen+0xe>
 56c:	40a78533          	sub	a0,a5,a0
 570:	8082                	ret
 572:	0785                	addi	a5,a5,1
 574:	bfcd                	j	566 <strlen+0x2>

00000576 <mini_vpprintf>:
 576:	fa410113          	addi	sp,sp,-92
 57a:	caa2                	sw	s0,84(sp)
 57c:	c8a6                	sw	s1,80(sp)
 57e:	cc86                	sw	ra,88(sp)
 580:	c02a                	sw	a0,0(sp)
 582:	c22e                	sw	a1,4(sp)
 584:	8432                	mv	s0,a2
 586:	84b6                	mv	s1,a3
 588:	e509                	bnez	a0,592 <mini_vpprintf+0x1c>
 58a:	13600793          	li	a5,310
 58e:	c202                	sw	zero,4(sp)
 590:	c03e                	sw	a5,0(sp)
 592:	ca02                	sw	zero,20(sp)
 594:	00044783          	lbu	a5,0(s0)
 598:	00140713          	addi	a4,s0,1
 59c:	00f10fa3          	sb	a5,31(sp)
 5a0:	eb81                	bnez	a5,5b0 <mini_vpprintf+0x3a>
 5a2:	40e6                	lw	ra,88(sp)
 5a4:	4456                	lw	s0,84(sp)
 5a6:	4552                	lw	a0,20(sp)
 5a8:	44c6                	lw	s1,80(sp)
 5aa:	05c10113          	addi	sp,sp,92
 5ae:	8082                	ret
 5b0:	c63a                	sw	a4,12(sp)
 5b2:	02500693          	li	a3,37
 5b6:	02d78063          	beq	a5,a3,5d6 <mini_vpprintf+0x60>
 5ba:	4612                	lw	a2,4(sp)
 5bc:	4782                	lw	a5,0(sp)
 5be:	4585                	li	a1,1
 5c0:	01f10513          	addi	a0,sp,31
 5c4:	9782                	jalr	a5
 5c6:	4732                	lw	a4,12(sp)
 5c8:	c426                	sw	s1,8(sp)
 5ca:	843a                	mv	s0,a4
 5cc:	47d2                	lw	a5,20(sp)
 5ce:	44a2                	lw	s1,8(sp)
 5d0:	97aa                	add	a5,a5,a0
 5d2:	ca3e                	sw	a5,20(sp)
 5d4:	b7c1                	j	594 <mini_vpprintf+0x1e>
 5d6:	00144783          	lbu	a5,1(s0)
 5da:	03000693          	li	a3,48
 5de:	00240713          	addi	a4,s0,2
 5e2:	00f10fa3          	sb	a5,31(sp)
 5e6:	c63e                	sw	a5,12(sp)
 5e8:	08d79363          	bne	a5,a3,66e <mini_vpprintf+0xf8>
 5ec:	843a                	mv	s0,a4
 5ee:	4681                	li	a3,0
 5f0:	4701                	li	a4,0
 5f2:	45a5                	li	a1,9
 5f4:	a819                	j	60a <mini_vpprintf+0x94>
 5f6:	00271793          	slli	a5,a4,0x2
 5fa:	97ba                	add	a5,a5,a4
 5fc:	0786                	slli	a5,a5,0x1
 5fe:	0405                	addi	s0,s0,1
 600:	00f60733          	add	a4,a2,a5
 604:	fff44783          	lbu	a5,-1(s0)
 608:	4685                	li	a3,1
 60a:	fd078613          	addi	a2,a5,-48
 60e:	0ff67513          	zext.b	a0,a2
 612:	fea5f2e3          	bgeu	a1,a0,5f6 <mini_vpprintf+0x80>
 616:	c299                	beqz	a3,61c <mini_vpprintf+0xa6>
 618:	00f10fa3          	sb	a5,31(sp)
 61c:	c83a                	sw	a4,16(sp)
 61e:	46e1                	li	a3,24
 620:	00e6d363          	bge	a3,a4,626 <mini_vpprintf+0xb0>
 624:	c836                	sw	a3,16(sp)
 626:	06c00613          	li	a2,108
 62a:	4681                	li	a3,0
 62c:	00c79863          	bne	a5,a2,63c <mini_vpprintf+0xc6>
 630:	00044783          	lbu	a5,0(s0)
 634:	4685                	li	a3,1
 636:	0405                	addi	s0,s0,1
 638:	00f10fa3          	sb	a5,31(sp)
 63c:	01f14603          	lbu	a2,31(sp)
 640:	06400793          	li	a5,100
 644:	06f60563          	beq	a2,a5,6ae <mini_vpprintf+0x138>
 648:	02c7e763          	bltu	a5,a2,676 <mini_vpprintf+0x100>
 64c:	05800793          	li	a5,88
 650:	0af60063          	beq	a2,a5,6f0 <mini_vpprintf+0x17a>
 654:	06300793          	li	a5,99
 658:	0af60d63          	beq	a2,a5,712 <mini_vpprintf+0x19c>
 65c:	d239                	beqz	a2,5a2 <mini_vpprintf+0x2c>
 65e:	4612                	lw	a2,4(sp)
 660:	4782                	lw	a5,0(sp)
 662:	4585                	li	a1,1
 664:	01f10513          	addi	a0,sp,31
 668:	9782                	jalr	a5
 66a:	c426                	sw	s1,8(sp)
 66c:	b785                	j	5cc <mini_vpprintf+0x56>
 66e:	02000693          	li	a3,32
 672:	c636                	sw	a3,12(sp)
 674:	bfa5                	j	5ec <mini_vpprintf+0x76>
 676:	07500793          	li	a5,117
 67a:	02f60a63          	beq	a2,a5,6ae <mini_vpprintf+0x138>
 67e:	07800793          	li	a5,120
 682:	06f60763          	beq	a2,a5,6f0 <mini_vpprintf+0x17a>
 686:	07300793          	li	a5,115
 68a:	fcf61ae3          	bne	a2,a5,65e <mini_vpprintf+0xe8>
 68e:	00448793          	addi	a5,s1,4
 692:	4084                	lw	s1,0(s1)
 694:	cc3a                	sw	a4,24(sp)
 696:	c43e                	sw	a5,8(sp)
 698:	8526                	mv	a0,s1
 69a:	35e9                	jal	564 <strlen>
 69c:	4762                	lw	a4,24(sp)
 69e:	85aa                	mv	a1,a0
 6a0:	08e05663          	blez	a4,72c <mini_vpprintf+0x1b6>
 6a4:	46c2                	lw	a3,16(sp)
 6a6:	4632                	lw	a2,12(sp)
 6a8:	1838                	addi	a4,sp,56
 6aa:	8526                	mv	a0,s1
 6ac:	a01d                	j	6d2 <mini_vpprintf+0x15c>
 6ae:	00448793          	addi	a5,s1,4
 6b2:	c43e                	sw	a5,8(sp)
 6b4:	c695                	beqz	a3,6e0 <mini_vpprintf+0x16a>
 6b6:	f8b60613          	addi	a2,a2,-117
 6ba:	1018                	addi	a4,sp,32
 6bc:	00163693          	seqz	a3,a2
 6c0:	4088                	lw	a0,0(s1)
 6c2:	4601                	li	a2,0
 6c4:	45a9                	li	a1,10
 6c6:	3e2d                	jal	200 <mini_itoa.part.0>
 6c8:	46c2                	lw	a3,16(sp)
 6ca:	4632                	lw	a2,12(sp)
 6cc:	1838                	addi	a4,sp,56
 6ce:	85aa                	mv	a1,a0
 6d0:	1008                	addi	a0,sp,32
 6d2:	3455                	jal	176 <mini_pad>
 6d4:	4612                	lw	a2,4(sp)
 6d6:	85aa                	mv	a1,a0
 6d8:	1828                	addi	a0,sp,56
 6da:	4782                	lw	a5,0(sp)
 6dc:	9782                	jalr	a5
 6de:	b5fd                	j	5cc <mini_vpprintf+0x56>
 6e0:	07500793          	li	a5,117
 6e4:	1018                	addi	a4,sp,32
 6e6:	4685                	li	a3,1
 6e8:	fcf60ce3          	beq	a2,a5,6c0 <mini_vpprintf+0x14a>
 6ec:	4681                	li	a3,0
 6ee:	bfc9                	j	6c0 <mini_vpprintf+0x14a>
 6f0:	4088                	lw	a0,0(s1)
 6f2:	fa860613          	addi	a2,a2,-88
 6f6:	00448793          	addi	a5,s1,4
 6fa:	1018                	addi	a4,sp,32
 6fc:	4685                	li	a3,1
 6fe:	00163613          	seqz	a2,a2
 702:	45c1                	li	a1,16
 704:	c43e                	sw	a5,8(sp)
 706:	3ced                	jal	200 <mini_itoa.part.0>
 708:	46c2                	lw	a3,16(sp)
 70a:	4632                	lw	a2,12(sp)
 70c:	85aa                	mv	a1,a0
 70e:	1838                	addi	a4,sp,56
 710:	b7c1                	j	6d0 <mini_vpprintf+0x15a>
 712:	00448793          	addi	a5,s1,4
 716:	c43e                	sw	a5,8(sp)
 718:	409c                	lw	a5,0(s1)
 71a:	46c2                	lw	a3,16(sp)
 71c:	4632                	lw	a2,12(sp)
 71e:	00f10fa3          	sb	a5,31(sp)
 722:	1838                	addi	a4,sp,56
 724:	4585                	li	a1,1
 726:	01f10513          	addi	a0,sp,31
 72a:	b765                	j	6d2 <mini_vpprintf+0x15c>
 72c:	4612                	lw	a2,4(sp)
 72e:	8526                	mv	a0,s1
 730:	b76d                	j	6da <mini_vpprintf+0x164>

00000732 <printf>:
 732:	1111                	addi	sp,sp,-28
 734:	c632                	sw	a2,12(sp)
 736:	862a                	mv	a2,a0
 738:	c42e                	sw	a1,8(sp)
 73a:	c836                	sw	a3,16(sp)
 73c:	4581                	li	a1,0
 73e:	0034                	addi	a3,sp,8
 740:	4c400513          	li	a0,1220
 744:	c206                	sw	ra,4(sp)
 746:	ca3a                	sw	a4,20(sp)
 748:	cc3e                	sw	a5,24(sp)
 74a:	c036                	sw	a3,0(sp)
 74c:	352d                	jal	576 <mini_vpprintf>
 74e:	4092                	lw	ra,4(sp)
 750:	0171                	addi	sp,sp,28
 752:	8082                	ret

00000754 <ssd1306_i2c_error.isra.0>:
 * error handler
 */
uint8_t ssd1306_i2c_error(uint8_t err)
{
	// report error
	printf("ssd1306_i2c_error - timeout waiting for %s\n\r", errstr[err]);
 754:	6785                	lui	a5,0x1
 756:	050a                	slli	a0,a0,0x2
 758:	c0878793          	addi	a5,a5,-1016 # c08 <errstr>
 75c:	97aa                	add	a5,a5,a0
 75e:	438c                	lw	a1,0(a5)
 760:	6505                	lui	a0,0x1
uint8_t ssd1306_i2c_error(uint8_t err)
 762:	1171                	addi	sp,sp,-4
	printf("ssd1306_i2c_error - timeout waiting for %s\n\r", errstr[err]);
 764:	b9050513          	addi	a0,a0,-1136 # b90 <main+0x1fc>
uint8_t ssd1306_i2c_error(uint8_t err)
 768:	c006                	sw	ra,0(sp)
	printf("ssd1306_i2c_error - timeout waiting for %s\n\r", errstr[err]);
 76a:	37e1                	jal	732 <printf>
	
	// reset & initialize I2C
	ssd1306_i2c_setup();

	return 1;
}
 76c:	4082                	lw	ra,0(sp)
 76e:	0111                	addi	sp,sp,4
	ssd1306_i2c_setup();
 770:	be81                	j	2c0 <ssd1306_i2c_setup>

00000772 <ssd1306_i2c_send.constprop.0.isra.0>:
uint8_t ssd1306_i2c_send(uint8_t addr, uint8_t *data, uint8_t sz)
{
	int32_t timeout;
	
	// wait for not busy
	timeout = TIMEOUT_MAX;
 772:	6761                	lui	a4,0x18
	while((I2C1->STAR2 & I2C_STAR2_BUSY) && (timeout--));
 774:	400057b7          	lui	a5,0x40005
	timeout = TIMEOUT_MAX;
 778:	6a070713          	addi	a4,a4,1696 # 186a0 <main.c.0dad9b4f+0x16409>
	while((I2C1->STAR2 & I2C_STAR2_BUSY) && (timeout--));
 77c:	40078793          	addi	a5,a5,1024 # 40005400 <__global_pointer$+0x20004c00>
 780:	567d                	li	a2,-1
 782:	0187d683          	lhu	a3,24(a5)
 786:	8a89                	andi	a3,a3,2
 788:	cedd                	beqz	a3,846 <ssd1306_i2c_send.constprop.0.isra.0+0xd4>
 78a:	177d                	addi	a4,a4,-1
 78c:	fec71be3          	bne	a4,a2,782 <ssd1306_i2c_send.constprop.0.isra.0+0x10>
	if(timeout==-1)
		return ssd1306_i2c_error(0);
 790:	4501                	li	a0,0
 792:	a821                	j	7aa <ssd1306_i2c_send.constprop.0.isra.0+0x38>
 794:	67e1                	lui	a5,0x18
 796:	6a178793          	addi	a5,a5,1697 # 186a1 <main.c.0dad9b4f+0x1640a>
	// send data one byte at a time
	while(sz--)
	{
		// wait for TX Empty
		timeout = TIMEOUT_MAX;
		while(!(I2C1->STAR1 & I2C_STAR1_TXE) && (timeout--));
 79a:	01475683          	lhu	a3,20(a4)
 79e:	0806f693          	andi	a3,a3,128
 7a2:	e689                	bnez	a3,7ac <ssd1306_i2c_send.constprop.0.isra.0+0x3a>
 7a4:	17fd                	addi	a5,a5,-1
 7a6:	fbf5                	bnez	a5,79a <ssd1306_i2c_send.constprop.0.isra.0+0x28>
		if(timeout==-1)
			return ssd1306_i2c_error(3);
 7a8:	450d                	li	a0,3
		return ssd1306_i2c_error(0);
 7aa:	b76d                	j	754 <ssd1306_i2c_error.isra.0>
		
		// send command
		I2C1->DATAR = *data++;
 7ac:	00054783          	lbu	a5,0(a0)
 7b0:	0505                	addi	a0,a0,1
 7b2:	00f71823          	sh	a5,16(a4)
	while(sz--)
 7b6:	fcb51fe3          	bne	a0,a1,794 <ssd1306_i2c_send.constprop.0.isra.0+0x22>
	}

	// wait for tx complete
	timeout = TIMEOUT_MAX;
 7ba:	66e1                	lui	a3,0x18
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
 7bc:	40005737          	lui	a4,0x40005
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_BYTE_TRANSMITTED)) && (timeout--));
 7c0:	00070637          	lui	a2,0x70
	timeout = TIMEOUT_MAX;
 7c4:	6a068693          	addi	a3,a3,1696 # 186a0 <main.c.0dad9b4f+0x16409>
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
 7c8:	40070713          	addi	a4,a4,1024 # 40005400 <__global_pointer$+0x20004c00>
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_BYTE_TRANSMITTED)) && (timeout--));
 7cc:	08460613          	addi	a2,a2,132 # 70084 <main.c.0dad9b4f+0x6dded>
 7d0:	55fd                	li	a1,-1
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
 7d2:	01475503          	lhu	a0,20(a4)
 7d6:	01875783          	lhu	a5,24(a4)
 7da:	07c2                	slli	a5,a5,0x10
 7dc:	8fc9                	or	a5,a5,a0
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_BYTE_TRANSMITTED)) && (timeout--));
 7de:	8ff1                	and	a5,a5,a2
 7e0:	00c78763          	beq	a5,a2,7ee <ssd1306_i2c_send.constprop.0.isra.0+0x7c>
 7e4:	16fd                	addi	a3,a3,-1
 7e6:	feb696e3          	bne	a3,a1,7d2 <ssd1306_i2c_send.constprop.0.isra.0+0x60>
	if(timeout==-1)
		return ssd1306_i2c_error(4);
 7ea:	4511                	li	a0,4
 7ec:	bf7d                	j	7aa <ssd1306_i2c_send.constprop.0.isra.0+0x38>

	// set STOP condition
	I2C1->CTLR1 |= I2C_CTLR1_STOP;
 7ee:	00075783          	lhu	a5,0(a4)
 7f2:	2007e793          	ori	a5,a5,512
 7f6:	00f71023          	sh	a5,0(a4)
	
	// we're happy
	return 0;
}
 7fa:	8082                	ret
		while(!(I2C1->STAR1 & I2C_STAR1_TXE) && (timeout--));
 7fc:	40005737          	lui	a4,0x40005
 800:	95aa                	add	a1,a1,a0
 802:	40070713          	addi	a4,a4,1024 # 40005400 <__global_pointer$+0x20004c00>
 806:	bf45                	j	7b6 <ssd1306_i2c_send.constprop.0.isra.0+0x44>
	I2C1->DATAR = addr<<1;
 808:	07800793          	li	a5,120
 80c:	00f71823          	sh	a5,16(a4)
	timeout = TIMEOUT_MAX;
 810:	6661                	lui	a2,0x18
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
 812:	400056b7          	lui	a3,0x40005
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_TRANSMITTER_MODE_SELECTED)) && (timeout--));
 816:	00070737          	lui	a4,0x70
	timeout = TIMEOUT_MAX;
 81a:	6a060613          	addi	a2,a2,1696 # 186a0 <main.c.0dad9b4f+0x16409>
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
 81e:	40068693          	addi	a3,a3,1024 # 40005400 <__global_pointer$+0x20004c00>
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_TRANSMITTER_MODE_SELECTED)) && (timeout--));
 822:	08270713          	addi	a4,a4,130 # 70082 <main.c.0dad9b4f+0x6ddeb>
 826:	537d                	li	t1,-1
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
 828:	0146d283          	lhu	t0,20(a3)
 82c:	0186d783          	lhu	a5,24(a3)
 830:	07c2                	slli	a5,a5,0x10
 832:	0057e7b3          	or	a5,a5,t0
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_TRANSMITTER_MODE_SELECTED)) && (timeout--));
 836:	8ff9                	and	a5,a5,a4
 838:	fce782e3          	beq	a5,a4,7fc <ssd1306_i2c_send.constprop.0.isra.0+0x8a>
 83c:	167d                	addi	a2,a2,-1
 83e:	fe6615e3          	bne	a2,t1,828 <ssd1306_i2c_send.constprop.0.isra.0+0xb6>
		return ssd1306_i2c_error(2);
 842:	4509                	li	a0,2
 844:	b79d                	j	7aa <ssd1306_i2c_send.constprop.0.isra.0+0x38>
	I2C1->CTLR1 |= I2C_CTLR1_START;
 846:	0007d703          	lhu	a4,0(a5)
	timeout = TIMEOUT_MAX;
 84a:	66e1                	lui	a3,0x18
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_MODE_SELECT)) && (timeout--));
 84c:	00030637          	lui	a2,0x30
	I2C1->CTLR1 |= I2C_CTLR1_START;
 850:	10076713          	ori	a4,a4,256
 854:	00e79023          	sh	a4,0(a5)
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
 858:	40005737          	lui	a4,0x40005
	timeout = TIMEOUT_MAX;
 85c:	6a068693          	addi	a3,a3,1696 # 186a0 <main.c.0dad9b4f+0x16409>
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
 860:	40070713          	addi	a4,a4,1024 # 40005400 <__global_pointer$+0x20004c00>
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_MODE_SELECT)) && (timeout--));
 864:	0605                	addi	a2,a2,1 # 30001 <main.c.0dad9b4f+0x2dd6a>
 866:	537d                	li	t1,-1
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
 868:	01475283          	lhu	t0,20(a4)
 86c:	01875783          	lhu	a5,24(a4)
 870:	07c2                	slli	a5,a5,0x10
 872:	0057e7b3          	or	a5,a5,t0
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_MODE_SELECT)) && (timeout--));
 876:	8ff1                	and	a5,a5,a2
 878:	f8c788e3          	beq	a5,a2,808 <ssd1306_i2c_send.constprop.0.isra.0+0x96>
 87c:	16fd                	addi	a3,a3,-1
 87e:	fe6695e3          	bne	a3,t1,868 <ssd1306_i2c_send.constprop.0.isra.0+0xf6>
		return ssd1306_i2c_error(1);
 882:	4505                	li	a0,1
 884:	b71d                	j	7aa <ssd1306_i2c_send.constprop.0.isra.0+0x38>

00000886 <ssd1306_cmd.isra.0>:
uint8_t ssd1306_cmd(uint8_t cmd)
 886:	fd810113          	addi	sp,sp,-40
	
	/* build command or data packets */
	if(cmd)
	{
		pkt[0] = 0;
		pkt[1] = *data;
 88a:	00a100a3          	sb	a0,1(sp)
	else
	{
		pkt[0] = 0x40;
		memcpy(&pkt[1], data, sz);
	}
	return ssd1306_i2c_send(SSD1306_I2C_ADDR, pkt, sz+1);
 88e:	4589                	li	a1,2
 890:	850a                	mv	a0,sp
 892:	d206                	sw	ra,36(sp)
		pkt[0] = 0;
 894:	00010023          	sb	zero,0(sp)
	return ssd1306_i2c_send(SSD1306_I2C_ADDR, pkt, sz+1);
 898:	3de9                	jal	772 <ssd1306_i2c_send.constprop.0.isra.0>
}
 89a:	5092                	lw	ra,36(sp)
 89c:	02810113          	addi	sp,sp,40
 8a0:	8082                	ret

000008a2 <memset>:
 8a2:	962a                	add	a2,a2,a0
 8a4:	87aa                	mv	a5,a0
 8a6:	00c79363          	bne	a5,a2,8ac <memset+0xa>
 8aa:	8082                	ret
 8ac:	00b78023          	sb	a1,0(a5)
 8b0:	0785                	addi	a5,a5,1
 8b2:	bfd5                	j	8a6 <memset+0x4>

000008b4 <ssd1306_setbuf.constprop.0>:
	memset(ssd1306_buffer, color ? 0xFF : 0x00, sizeof(ssd1306_buffer));
 8b4:	20000537          	lui	a0,0x20000
 8b8:	40000613          	li	a2,1024
 8bc:	4581                	li	a1,0
 8be:	00050513          	mv	a0,a0
 8c2:	b7c5                	j	8a2 <memset>

000008c4 <memcpy>:
 8c4:	4781                	li	a5,0
 8c6:	00f61363          	bne	a2,a5,8cc <memcpy+0x8>
 8ca:	8082                	ret
 8cc:	00f58733          	add	a4,a1,a5
 8d0:	00074683          	lbu	a3,0(a4)
 8d4:	00f50733          	add	a4,a0,a5
 8d8:	0785                	addi	a5,a5,1
 8da:	00d70023          	sb	a3,0(a4)
 8de:	b7e5                	j	8c6 <memcpy+0x2>

000008e0 <ssd1306_refresh>:
{
 8e0:	7179                	addi	sp,sp,-48
	ssd1306_cmd(SSD1306_COLUMNADDR);
 8e2:	02100513          	li	a0,33
{
 8e6:	d606                	sw	ra,44(sp)
 8e8:	d422                	sw	s0,40(sp)
 8ea:	d226                	sw	s1,36(sp)
	ssd1306_cmd(SSD1306_COLUMNADDR);
 8ec:	3f69                	jal	886 <ssd1306_cmd.isra.0>
	ssd1306_cmd(SSD1306_OFFSET);   // Column start address (0 = reset)
 8ee:	4501                	li	a0,0
 8f0:	3f59                	jal	886 <ssd1306_cmd.isra.0>
	ssd1306_cmd(SSD1306_OFFSET+SSD1306_W-1); // Column end address (127 = reset)
 8f2:	07f00513          	li	a0,127
 8f6:	3f41                	jal	886 <ssd1306_cmd.isra.0>
	ssd1306_cmd(SSD1306_PAGEADDR);
 8f8:	02200513          	li	a0,34
 8fc:	3769                	jal	886 <ssd1306_cmd.isra.0>
	ssd1306_cmd(0); // Page start address (0 = reset)
 8fe:	4501                	li	a0,0
 900:	3759                	jal	886 <ssd1306_cmd.isra.0>
	ssd1306_cmd(7); // Page end address
 902:	20000437          	lui	s0,0x20000
 906:	451d                	li	a0,7
 908:	00040413          	mv	s0,s0
 90c:	3fad                	jal	886 <ssd1306_cmd.isra.0>
    for(i=0;i<sizeof(ssd1306_buffer);i+=SSD1306_PSZ)
 90e:	40040493          	addi	s1,s0,1024 # 20000400 <_ebss>
		pkt[0] = 0x40;
 912:	04000793          	li	a5,64
		memcpy(&pkt[1], data, sz);
 916:	85a2                	mv	a1,s0
 918:	02000613          	li	a2,32
 91c:	00110513          	addi	a0,sp,1
		pkt[0] = 0x40;
 920:	00f10023          	sb	a5,0(sp)
		memcpy(&pkt[1], data, sz);
 924:	3745                	jal	8c4 <memcpy>
	return ssd1306_i2c_send(SSD1306_I2C_ADDR, pkt, sz+1);
 926:	02100593          	li	a1,33
 92a:	850a                	mv	a0,sp
 92c:	02040413          	addi	s0,s0,32
 930:	3589                	jal	772 <ssd1306_i2c_send.constprop.0.isra.0>
 932:	fe9410e3          	bne	s0,s1,912 <ssd1306_refresh+0x32>
}
 936:	50b2                	lw	ra,44(sp)
 938:	5422                	lw	s0,40(sp)
 93a:	5492                	lw	s1,36(sp)
 93c:	6145                	addi	sp,sp,48
 93e:	8082                	ret

00000940 <SystemInit>:
 940:	400227b7          	lui	a5,0x40022
 944:	4705                	li	a4,1
 946:	c398                	sw	a4,0(a5)
 948:	400217b7          	lui	a5,0x40021
 94c:	01080737          	lui	a4,0x1080
 950:	0007a223          	sw	zero,4(a5) # 40021004 <__global_pointer$+0x20020804>
 954:	08170713          	addi	a4,a4,129 # 1080081 <main.c.0dad9b4f+0x107ddea>
 958:	c398                	sw	a4,0(a5)
 95a:	009f0737          	lui	a4,0x9f0
 95e:	c798                	sw	a4,8(a5)
 960:	4398                	lw	a4,0(a5)
 962:	00671693          	slli	a3,a4,0x6
 966:	fe06dde3          	bgez	a3,960 <SystemInit+0x20>
 96a:	43d8                	lw	a4,4(a5)
 96c:	400216b7          	lui	a3,0x40021
 970:	9b71                	andi	a4,a4,-4
 972:	00276713          	ori	a4,a4,2
 976:	c3d8                	sw	a4,4(a5)
 978:	4721                	li	a4,8
 97a:	42dc                	lw	a5,4(a3)
 97c:	8bb1                	andi	a5,a5,12
 97e:	fee79ee3          	bne	a5,a4,97a <SystemInit+0x3a>
 982:	e00007b7          	lui	a5,0xe0000
 986:	0e07ac23          	sw	zero,248(a5) # e00000f8 <__global_pointer$+0xbffff8f8>
 98a:	08000713          	li	a4,128
 98e:	0ee7aa23          	sw	a4,244(a5)
 992:	8082                	ret

00000994 <main>:
    ssd1306_setbuf(0);
  }
}

int main()
{
 994:	1101                	addi	sp,sp,-32
 996:	ce06                	sw	ra,28(sp)
 998:	cc22                	sw	s0,24(sp)
 99a:	ca26                	sw	s1,20(sp)
	// 48MHz internal clock
	SystemInit();
 99c:	3755                	jal	940 <SystemInit>
    GPIO_port_enable(GPIO_port_A);
 99e:	400217b7          	lui	a5,0x40021
 9a2:	4f98                	lw	a4,24(a5)
#endif

void DelaySysTick( uint32_t n )
{
#ifdef CH32V003
	uint32_t targend = SysTick->CNT + n;
 9a4:	e000f6b7          	lui	a3,0xe000f
 9a8:	00476713          	ori	a4,a4,4
 9ac:	cf98                	sw	a4,24(a5)
    GPIO_port_enable(GPIO_port_D);
 9ae:	4f98                	lw	a4,24(a5)
 9b0:	02076713          	ori	a4,a4,32
 9b4:	cf98                	sw	a4,24(a5)
    GPIO_port_enable(GPIO_port_C);
 9b6:	4f98                	lw	a4,24(a5)
 9b8:	01076713          	ori	a4,a4,16
 9bc:	cf98                	sw	a4,24(a5)
    GPIO_pinMode(BTN_PIN, GPIO_pinMode_I_pullUp, GPIO_Speed_10MHz);
 9be:	400117b7          	lui	a5,0x40011
 9c2:	40078793          	addi	a5,a5,1024 # 40011400 <__global_pointer$+0x20010c00>
 9c6:	4398                	lw	a4,0(a5)
 9c8:	f0f77713          	andi	a4,a4,-241
 9cc:	c398                	sw	a4,0(a5)
 9ce:	4398                	lw	a4,0(a5)
 9d0:	08076713          	ori	a4,a4,128
 9d4:	c398                	sw	a4,0(a5)
 9d6:	4709                	li	a4,2
 9d8:	cb98                	sw	a4,16(a5)
 9da:	4698                	lw	a4,8(a3)
 9dc:	001257b7          	lui	a5,0x125
 9e0:	f8078793          	addi	a5,a5,-128 # 124f80 <main.c.0dad9b4f+0x122ce9>
 9e4:	973e                	add	a4,a4,a5
	while( ((int32_t)( SysTick->CNT - targend )) < 0 );
 9e6:	469c                	lw	a5,8(a3)
 9e8:	8f99                	sub	a5,a5,a4
 9ea:	fe07cee3          	bltz	a5,9e6 <main+0x52>
 * init I2C and GPIO
 */
uint8_t ssd1306_i2c_init(void)
{
	// Enable GPIOC and I2C
	RCC->APB2PCENR |= RCC_APB2Periph_GPIOC;
 9ee:	400217b7          	lui	a5,0x40021
 9f2:	4f98                	lw	a4,24(a5)
	RCC->APB1PCENR |= RCC_APB1Periph_I2C1;
 9f4:	002006b7          	lui	a3,0x200
{
	// pulse reset
	ssd1306_rst();
	
	// initialize OLED
	uint8_t *cmd_list = (uint8_t *)ssd1306_init_array;
 9f8:	6405                	lui	s0,0x1
	RCC->APB2PCENR |= RCC_APB2Periph_GPIOC;
 9fa:	01076713          	ori	a4,a4,16
 9fe:	cf98                	sw	a4,24(a5)
	RCC->APB1PCENR |= RCC_APB1Periph_I2C1;
 a00:	4fd8                	lw	a4,28(a5)
 a02:	c1c40413          	addi	s0,s0,-996 # c1c <ssd1306_init_array>
 a06:	8f55                	or	a4,a4,a3
 a08:	cfd8                	sw	a4,28(a5)
	
	// PC1 is SDA, 10MHz Output, alt func, open-drain
	GPIOC->CFGLR &= ~(0xf<<(4*1));
 a0a:	400117b7          	lui	a5,0x40011
 a0e:	4398                	lw	a4,0(a5)
	GPIOC->CFGLR |= (GPIO_Speed_10MHz | GPIO_CNF_OUT_OD_AF)<<(4*1);
	
	// PC2 is SCL, 10MHz Output, alt func, open-drain
	GPIOC->CFGLR &= ~(0xf<<(4*2));
 a10:	76fd                	lui	a3,0xfffff
 a12:	0ff68693          	addi	a3,a3,255 # fffff0ff <__global_pointer$+0xdfffe8ff>
	GPIOC->CFGLR &= ~(0xf<<(4*1));
 a16:	f0f77713          	andi	a4,a4,-241
 a1a:	c398                	sw	a4,0(a5)
	GPIOC->CFGLR |= (GPIO_Speed_10MHz | GPIO_CNF_OUT_OD_AF)<<(4*1);
 a1c:	4398                	lw	a4,0(a5)
 a1e:	0d076713          	ori	a4,a4,208
 a22:	c398                	sw	a4,0(a5)
	GPIOC->CFGLR &= ~(0xf<<(4*2));
 a24:	4398                	lw	a4,0(a5)
 a26:	8f75                	and	a4,a4,a3
 a28:	c398                	sw	a4,0(a5)
	GPIOC->CFGLR |= (GPIO_Speed_10MHz | GPIO_CNF_OUT_OD_AF)<<(4*2);
 a2a:	4398                	lw	a4,0(a5)
 a2c:	6685                	lui	a3,0x1
 a2e:	d0068693          	addi	a3,a3,-768 # d00 <title+0x80>
 a32:	8f55                	or	a4,a4,a3
 a34:	c398                	sw	a4,0(a5)
	GPIOC->CFGLR |= (GPIO_Speed_10MHz | GPIO_CNF_OUT_PP)<<(4*4);
	GPIOC->BSHR = (1<<(16+4));
#endif

	// load I2C regs
	ssd1306_i2c_setup();
 a36:	88bff0ef          	jal	2c0 <ssd1306_i2c_setup>
	while(*cmd_list != SSD1306_TERMINATE_CMDS)
 a3a:	00044503          	lbu	a0,0(s0)
 a3e:	0ff00793          	li	a5,255
 a42:	0af51563          	bne	a0,a5,aec <main+0x158>
		if(ssd1306_cmd(*cmd_list++))
			return 1;
	}
	
	// clear display
	ssd1306_setbuf(0);
 a46:	35bd                	jal	8b4 <ssd1306_setbuf.constprop.0>
	ssd1306_refresh();
 a48:	3d61                	jal	8e0 <ssd1306_refresh>
    for (int i = 0; i < 30; i+=2) {
 a4a:	c002                	sw	zero,0(sp)
      ssd1306_setbuf(0);
 a4c:	35a5                	jal	8b4 <ssd1306_setbuf.constprop.0>
      ssd1306_drawImage(i, 0, title, 24, 64, 0);
 a4e:	4502                	lw	a0,0(sp)
 a50:	6485                	lui	s1,0x1
 a52:	4781                	li	a5,0
 a54:	04000713          	li	a4,64
 a58:	46e1                	li	a3,24
 a5a:	c8048613          	addi	a2,s1,-896 # c80 <title>
 a5e:	4581                	li	a1,0
 a60:	8b5ff0ef          	jal	314 <ssd1306_drawImage>
      ssd1306_refresh();
 a64:	3db5                	jal	8e0 <ssd1306_refresh>
	uint32_t targend = SysTick->CNT + n;
 a66:	e000f6b7          	lui	a3,0xe000f
 a6a:	4698                	lw	a4,8(a3)
 a6c:	000927b7          	lui	a5,0x92
 a70:	7c078793          	addi	a5,a5,1984 # 927c0 <main.c.0dad9b4f+0x90529>
 a74:	973e                	add	a4,a4,a5
	while( ((int32_t)( SysTick->CNT - targend )) < 0 );
 a76:	469c                	lw	a5,8(a3)
 a78:	8f99                	sub	a5,a5,a4
 a7a:	fe07cee3          	bltz	a5,a76 <main+0xe2>
    for (int i = 0; i < 30; i+=2) {
 a7e:	4782                	lw	a5,0(sp)
 a80:	0789                	addi	a5,a5,2
 a82:	c03e                	sw	a5,0(sp)
 a84:	4702                	lw	a4,0(sp)
 a86:	47f9                	li	a5,30
 a88:	fcf712e3          	bne	a4,a5,a4c <main+0xb8>
    int c = 0;
 a8c:	4401                	li	s0,0
    bool button_state = false;
 a8e:	c402                	sw	zero,8(sp)
      ssd1306_setbuf(0);
 a90:	3515                	jal	8b4 <ssd1306_setbuf.constprop.0>
      ssd1306_drawImage(30, 0, title, 24, 64, 0);
 a92:	4781                	li	a5,0
 a94:	c8048613          	addi	a2,s1,-896
 a98:	04000713          	li	a4,64
 a9c:	46e1                	li	a3,24
 a9e:	4581                	li	a1,0
 aa0:	4579                	li	a0,30
 aa2:	873ff0ef          	jal	314 <ssd1306_drawImage>
      if (c > 50) {
 aa6:	03200793          	li	a5,50
 aaa:	6605                	lui	a2,0x1
 aac:	0487d363          	bge	a5,s0,af2 <main+0x15e>
        ssd1306_drawImage(80, 20, start, 24, 24, 0);
 ab0:	4781                	li	a5,0
        ssd1306_drawImage(80, 20, start, 24, 24, 1);
 ab2:	4761                	li	a4,24
 ab4:	86ba                	mv	a3,a4
 ab6:	c3860613          	addi	a2,a2,-968 # c38 <start>
 aba:	45d1                	li	a1,20
 abc:	05000513          	li	a0,80
 ac0:	855ff0ef          	jal	314 <ssd1306_drawImage>
      ssd1306_refresh();
 ac4:	3d31                	jal	8e0 <ssd1306_refresh>
      uint8_t button_is_pressed = !GPIO_digitalRead(BTN_PIN);
 ac6:	400117b7          	lui	a5,0x40011
 aca:	40078793          	addi	a5,a5,1024 # 40011400 <__global_pointer$+0x20010c00>
 ace:	479c                	lw	a5,8(a5)
      if (button_state && !button_is_pressed){
 ad0:	4722                	lw	a4,8(sp)
 ad2:	8b89                	andi	a5,a5,2
 ad4:	c311                	beqz	a4,ad8 <main+0x144>
 ad6:	e385                	bnez	a5,af6 <main+0x162>
      button_state = button_is_pressed;
 ad8:	0017b793          	seqz	a5,a5
 adc:	c43e                	sw	a5,8(sp)
      c ++;      
 ade:	0405                	addi	s0,s0,1
      if (c > 100) {
 ae0:	06500793          	li	a5,101
 ae4:	faf416e3          	bne	s0,a5,a90 <main+0xfc>
        c = 0;
 ae8:	4401                	li	s0,0
 aea:	b75d                	j	a90 <main+0xfc>
		if(ssd1306_cmd(*cmd_list++))
 aec:	0405                	addi	s0,s0,1
 aee:	3b61                	jal	886 <ssd1306_cmd.isra.0>
 af0:	b7a9                	j	a3a <main+0xa6>
        ssd1306_drawImage(80, 20, start, 24, 24, 1);
 af2:	4785                	li	a5,1
 af4:	bf7d                	j	ab2 <main+0x11e>
		ssd1306_init();

    opening();
    
    // clear display
    ssd1306_setbuf(0);
 af6:	3b7d                	jal	8b4 <ssd1306_setbuf.constprop.0>
  int jump_progress = 0;
 af8:	4401                	li	s0,0
    ssd1306_refresh();
 afa:	33dd                	jal	8e0 <ssd1306_refresh>
  bool jump_flag = false;
 afc:	4481                	li	s1,0
  bool button_state = false;
 afe:	c802                	sw	zero,16(sp)
  bool flip_flag = false;
 b00:	c602                	sw	zero,12(sp)
  int flip_c = 0;
 b02:	c202                	sw	zero,4(sp)
    uint8_t button_is_pressed = !GPIO_digitalRead(BTN_PIN); 
 b04:	400117b7          	lui	a5,0x40011
 b08:	40078793          	addi	a5,a5,1024 # 40011400 <__global_pointer$+0x20010c00>
 b0c:	479c                	lw	a5,8(a5)
    if (button_state && !button_is_pressed && !jump_flag){
 b0e:	4742                	lw	a4,16(sp)
 b10:	8b89                	andi	a5,a5,2
 b12:	c311                	beqz	a4,b16 <main+0x182>
 b14:	efb1                	bnez	a5,b70 <main+0x1dc>
    button_state = button_is_pressed;
 b16:	0017b793          	seqz	a5,a5
 b1a:	c83e                	sw	a5,16(sp)
    if (jump_flag && (max_jump * 2) < jump_progress){
 b1c:	cc99                	beqz	s1,b3a <main+0x1a6>
 b1e:	02800793          	li	a5,40
 b22:	0487cc63          	blt	a5,s0,b7a <main+0x1e6>
    else if (jump_flag && max_jump >= jump_progress){
 b26:	4751                	li	a4,20
      jump_progress += 1;
 b28:	00140793          	addi	a5,s0,1
    else if (jump_flag && max_jump >= jump_progress){
 b2c:	04874463          	blt	a4,s0,b74 <main+0x1e0>
      kuina_y -= 1;
 b30:	4702                	lw	a4,0(sp)
 b32:	177d                	addi	a4,a4,-1 # 9effff <main.c.0dad9b4f+0x9edd68>
      kuina_y += 1;
 b34:	44a2                	lw	s1,8(sp)
 b36:	c03a                	sw	a4,0(sp)
      jump_progress += 1;
 b38:	843e                	mv	s0,a5
    flip_c ++;
 b3a:	4792                	lw	a5,4(sp)
 b3c:	0785                	addi	a5,a5,1
 b3e:	c23e                	sw	a5,4(sp)
    if (flip_c > 20) {
 b40:	4712                	lw	a4,4(sp)
 b42:	47d5                	li	a5,21
 b44:	00f71763          	bne	a4,a5,b52 <main+0x1be>
      flip_flag = !flip_flag;
 b48:	47b2                	lw	a5,12(sp)
      flip_c = 0;
 b4a:	c202                	sw	zero,4(sp)
      flip_flag = !flip_flag;
 b4c:	0017c793          	xori	a5,a5,1
 b50:	c63e                	sw	a5,12(sp)
    if(flip_flag){
 b52:	47b2                	lw	a5,12(sp)
 b54:	c795                	beqz	a5,b80 <main+0x1ec>
      ssd1306_drawImage(kuina_x, kuina_y, kuina_1, 16, 16, 0);
 b56:	4741                	li	a4,16
 b58:	6605                	lui	a2,0x1
 b5a:	4781                	li	a5,0
 b5c:	86ba                	mv	a3,a4
 b5e:	d6060613          	addi	a2,a2,-672 # d60 <kuina_1>
      ssd1306_drawImage(kuina_x, kuina_y, kuina_2, 16, 16, 0);
 b62:	4582                	lw	a1,0(sp)
 b64:	4551                	li	a0,20
 b66:	faeff0ef          	jal	314 <ssd1306_drawImage>
    ssd1306_refresh();
 b6a:	3b9d                	jal	8e0 <ssd1306_refresh>
    ssd1306_setbuf(0);
 b6c:	33a1                	jal	8b4 <ssd1306_setbuf.constprop.0>
  while (1) {
 b6e:	bf59                	j	b04 <main+0x170>
    button_state = button_is_pressed;
 b70:	c802                	sw	zero,16(sp)
 b72:	b775                	j	b1e <main+0x18a>
      kuina_y += 1;
 b74:	4702                	lw	a4,0(sp)
 b76:	0705                	addi	a4,a4,1
 b78:	bf75                	j	b34 <main+0x1a0>
      jump_progress = 0;
 b7a:	4401                	li	s0,0
      jump_flag = false;
 b7c:	4481                	li	s1,0
 b7e:	bf75                	j	b3a <main+0x1a6>
      ssd1306_drawImage(kuina_x, kuina_y, kuina_2, 16, 16, 0);
 b80:	4741                	li	a4,16
 b82:	6605                	lui	a2,0x1
 b84:	4781                	li	a5,0
 b86:	86ba                	mv	a3,a4
 b88:	d4060613          	addi	a2,a2,-704 # d40 <kuina_2>
 b8c:	bfd9                	j	b62 <main+0x1ce>
 b8e:	0000                	unimp
 b90:	31647373          	.insn	4, 0x31647373
 b94:	5f363033          	.insn	4, 0x5f363033
 b98:	3269                	jal	522 <handle_reset+0x4a>
 b9a:	72655f63          	bge	a0,t1,12d8 <_data_lma+0x558>
 b9e:	6f72                	.insn	2, 0x6f72
 ba0:	2072                	.insn	2, 0x2072
 ba2:	202d                	jal	bcc <main+0x238>
 ba4:	6974                	.insn	2, 0x6974
 ba6:	656d                	lui	a0,0x1b
 ba8:	2074756f          	jal	a0,485ae <main.c.0dad9b4f+0x46317>
 bac:	74696177          	.insn	4, 0x74696177
 bb0:	6e69                	lui	t3,0x1a
 bb2:	6f662067          	.insn	4, 0x6f662067
 bb6:	2072                	.insn	2, 0x2072
 bb8:	7325                	lui	t1,0xfffe9
 bba:	0d0a                	slli	s10,s10,0x2
 bbc:	0000                	unimp
 bbe:	0000                	unimp
 bc0:	6f6e                	.insn	2, 0x6f6e
 bc2:	2074                	.insn	2, 0x2074
 bc4:	7562                	.insn	2, 0x7562
 bc6:	00007973          	.insn	4, 0x7973
 bca:	0000                	unimp
 bcc:	616d                	addi	sp,sp,240
 bce:	72657473          	.insn	4, 0x72657473
 bd2:	6d20                	.insn	2, 0x6d20
 bd4:	0065646f          	jal	s0,56bda <main.c.0dad9b4f+0x54943>
 bd8:	7274                	.insn	2, 0x7274
 bda:	6e61                	lui	t3,0x18
 bdc:	74696d73          	.insn	4, 0x74696d73
 be0:	6d20                	.insn	2, 0x6d20
 be2:	0065646f          	jal	s0,56be8 <main.c.0dad9b4f+0x54951>
 be6:	0000                	unimp
 be8:	7874                	.insn	2, 0x7874
 bea:	6520                	.insn	2, 0x6520
 bec:	706d                	c.lui	zero,0xffffb
 bee:	7974                	.insn	2, 0x7974
 bf0:	0000                	unimp
 bf2:	0000                	unimp
 bf4:	7274                	.insn	2, 0x7274
 bf6:	6e61                	lui	t3,0x18
 bf8:	74696d73          	.insn	4, 0x74696d73
 bfc:	6320                	.insn	2, 0x6320
 bfe:	6c706d6f          	jal	s10,7ac4 <main.c.0dad9b4f+0x582d>
 c02:	7465                	lui	s0,0xffff9
 c04:	0065                	c.nop	25
	...

00000c08 <errstr>:
 c08:	0bc0 0000 0bcc 0000 0bd8 0000 0be8 0000     ................
 c18:	0bf4 0000                                   ....

00000c1c <ssd1306_init_array>:
 c1c:	d5ae a880 d33f 4000 148d 0020 c8a1 12da     ....?..@.. .....
 c2c:	8f81 f1d9 40db a6a4 ffaf 0000               .....@......

00000c38 <start>:
 c38:	0000 0000 0004 7c00 0000 0004 0000 0000     .......|........
 c48:	0068 1400 0000 0014 7800 0000 0000 7800     h........x.....x
 c58:	0000 0014 1400 0000 0078 0000 0000 0004     ........x.......
 c68:	7c00 0000 0004 0000 0000 0024 5400 0000     .|........$..T..
 c78:	0054 4800 0000 0000                         T..H....

00000c80 <title>:
	...
 c88:	0000 00f8 0401 0200 00fa 0603 0200 0002     ................
 c98:	0202 0300 00fe 0202 0300 00fe 0000 0000     ................
 ca8:	0000 fe03 0200 0002 fe03 0000 0000 0000     ................
 cb8:	0000 00f8 0401 0200 00fa 0603 0200 0002     ................
 cc8:	0202 0200 0002 0401 0000 00f8 0000 0000     ................
 cd8:	0006 1800 0000 0020 c000 0300 00b0 dc00     ...... .........
 ce8:	0000 0026 1a00 0000 0006 0000 0000 00f8     ..&.............
 cf8:	0401 0200 00fa 0603 0200 0002 0202 0200     ................
 d08:	0002 0401 0000 00f8 0000 0300 00fe 0202     ................
 d18:	0300 00fe 0400 0000 0018 6000 0100 00a0     ...........`....
 d28:	5000 0000 002c 1600 0300 00fe 0000 0000     .P..,...........
	...

00000d40 <kuina_2>:
 d40:	c03f c03f c0f3 c0f3 fc3f fc3f ff33 ff33     ?.?.....?.?.3.3.
 d50:	cf00 cf00 3c33 3c33 c00c c00c 3030 3030     ....3<3<....0000

00000d60 <kuina_1>:
 d60:	c03f c03f c0f3 c0f3 fc3f fc3f ff33 ff33     ?.?.....?.?.3.3.
 d70:	cf00 cf00 3c33 3c33 c00c c00c c00c c00c     ....3<3<........
