
main.elf:     file format elf32-littleriscv


Disassembly of section .init:

00000000 <InterruptVector>:
   0:	6d00006f          	j	6d0 <handle_reset>
   4:	00000000          	.word	0x00000000
   8:	0000074e          	.word	0x0000074e
   c:	0000074c          	.word	0x0000074c
	...
  30:	0000074c          	.word	0x0000074c
  34:	00000000          	.word	0x00000000
  38:	0000074c          	.word	0x0000074c
  3c:	00000000          	.word	0x00000000
  40:	0000074c          	.word	0x0000074c
  44:	0000074c          	.word	0x0000074c
  48:	0000074c          	.word	0x0000074c
  4c:	0000074c          	.word	0x0000074c
  50:	0000074c          	.word	0x0000074c
  54:	0000074c          	.word	0x0000074c
  58:	0000074c          	.word	0x0000074c
  5c:	0000074c          	.word	0x0000074c
  60:	0000074c          	.word	0x0000074c
  64:	0000074c          	.word	0x0000074c
  68:	0000074c          	.word	0x0000074c
  6c:	0000074c          	.word	0x0000074c
  70:	0000074c          	.word	0x0000074c
  74:	0000074c          	.word	0x0000074c
  78:	0000074c          	.word	0x0000074c
  7c:	0000074c          	.word	0x0000074c
  80:	0000074c          	.word	0x0000074c
  84:	0000074c          	.word	0x0000074c
  88:	0000074c          	.word	0x0000074c
  8c:	0000074c          	.word	0x0000074c
  90:	0000074c          	.word	0x0000074c
  94:	0000074c          	.word	0x0000074c
  98:	0000074c          	.word	0x0000074c
  9c:	0000                	.insn	2, 0x
	...

Disassembly of section .text:

000000a0 <__mulsi3>:
      a0:	862a                	mv	a2,a0
      a2:	4501                	li	a0,0
      a4:	0015f693          	and	a3,a1,1
      a8:	c291                	beqz	a3,ac <__mulsi3+0xc>
      aa:	9532                	add	a0,a0,a2
      ac:	8185                	srl	a1,a1,0x1
      ae:	0606                	sll	a2,a2,0x1
      b0:	f9f5                	bnez	a1,a4 <__mulsi3+0x4>
      b2:	8082                	ret
      b4:	0000                	unimp
	...

000000b8 <__divsi3>:
      b8:	02054e63          	bltz	a0,f4 <__umodsi3+0x8>
      bc:	0405c363          	bltz	a1,102 <__umodsi3+0x16>

000000c0 <__hidden___udivsi3>:
      c0:	862e                	mv	a2,a1
      c2:	85aa                	mv	a1,a0
      c4:	557d                	li	a0,-1
      c6:	c215                	beqz	a2,ea <__hidden___udivsi3+0x2a>
      c8:	4685                	li	a3,1
      ca:	00b67863          	bgeu	a2,a1,da <__hidden___udivsi3+0x1a>
      ce:	00c05663          	blez	a2,da <__hidden___udivsi3+0x1a>
      d2:	0606                	sll	a2,a2,0x1
      d4:	0686                	sll	a3,a3,0x1
      d6:	feb66ce3          	bltu	a2,a1,ce <__hidden___udivsi3+0xe>
      da:	4501                	li	a0,0
      dc:	00c5e463          	bltu	a1,a2,e4 <__hidden___udivsi3+0x24>
      e0:	8d91                	sub	a1,a1,a2
      e2:	8d55                	or	a0,a0,a3
      e4:	8285                	srl	a3,a3,0x1
      e6:	8205                	srl	a2,a2,0x1
      e8:	faf5                	bnez	a3,dc <__hidden___udivsi3+0x1c>
      ea:	8082                	ret

000000ec <__umodsi3>:
      ec:	8286                	mv	t0,ra
      ee:	3fc9                	jal	c0 <__hidden___udivsi3>
      f0:	852e                	mv	a0,a1
      f2:	8282                	jr	t0
      f4:	40a00533          	neg	a0,a0
      f8:	00b04763          	bgtz	a1,106 <__umodsi3+0x1a>
      fc:	40b005b3          	neg	a1,a1
     100:	b7c1                	j	c0 <__hidden___udivsi3>
     102:	40b005b3          	neg	a1,a1
     106:	8286                	mv	t0,ra
     108:	3f65                	jal	c0 <__hidden___udivsi3>
     10a:	40a00533          	neg	a0,a0
     10e:	8282                	jr	t0

00000110 <__modsi3>:
     110:	8286                	mv	t0,ra
     112:	0005c763          	bltz	a1,120 <__modsi3+0x10>
     116:	00054963          	bltz	a0,128 <__modsi3+0x18>
     11a:	375d                	jal	c0 <__hidden___udivsi3>
     11c:	852e                	mv	a0,a1
     11e:	8282                	jr	t0
     120:	40b005b3          	neg	a1,a1
     124:	fe055be3          	bgez	a0,11a <__modsi3+0xa>
     128:	40a00533          	neg	a0,a0
     12c:	3f51                	jal	c0 <__hidden___udivsi3>
     12e:	40b00533          	neg	a0,a1
     132:	8282                	jr	t0
	...

00000136 <mini_pad>:
     136:	1131                	add	sp,sp,-20
     138:	c426                	sw	s1,8(sp)
     13a:	c806                	sw	ra,16(sp)
     13c:	c622                	sw	s0,12(sp)
     13e:	84ae                	mv	s1,a1
     140:	87aa                	mv	a5,a0
     142:	85b2                	mv	a1,a2
     144:	c699                	beqz	a3,152 <mini_pad+0x1c>
     146:	4301                	li	t1,0
     148:	0096d763          	bge	a3,s1,156 <mini_pad+0x20>
     14c:	84b6                	mv	s1,a3
     14e:	4305                	li	t1,1
     150:	a019                	j	156 <mini_pad+0x20>
     152:	4301                	li	t1,0
     154:	86a6                	mv	a3,s1
     156:	40968433          	sub	s0,a3,s1
     15a:	00045363          	bgez	s0,160 <mini_pad+0x2a>
     15e:	4401                	li	s0,0
     160:	8622                	mv	a2,s0
     162:	853a                	mv	a0,a4
     164:	c23e                	sw	a5,4(sp)
     166:	c01a                	sw	t1,0(sp)
     168:	133000ef          	jal	a9a <memset>
     16c:	4302                	lw	t1,0(sp)
     16e:	4792                	lw	a5,4(sp)
     170:	872a                	mv	a4,a0
     172:	008506b3          	add	a3,a0,s0
     176:	4601                	li	a2,0
     178:	40c485b3          	sub	a1,s1,a2
     17c:	04b04263          	bgtz	a1,1c0 <mini_pad+0x8a>
     180:	0004d363          	bgez	s1,186 <mini_pad+0x50>
     184:	4481                	li	s1,0
     186:	009685b3          	add	a1,a3,s1
     18a:	40e58533          	sub	a0,a1,a4
     18e:	02030463          	beqz	t1,1b6 <mini_pad+0x80>
     192:	02b77263          	bgeu	a4,a1,1b6 <mini_pad+0x80>
     196:	02a00793          	li	a5,42
     19a:	fef58fa3          	sb	a5,-1(a1)
     19e:	fff58693          	add	a3,a1,-1
     1a2:	00d77a63          	bgeu	a4,a3,1b6 <mini_pad+0x80>
     1a6:	fef58f23          	sb	a5,-2(a1)
     1aa:	ffe58693          	add	a3,a1,-2
     1ae:	00d77463          	bgeu	a4,a3,1b6 <mini_pad+0x80>
     1b2:	fef58ea3          	sb	a5,-3(a1)
     1b6:	40c2                	lw	ra,16(sp)
     1b8:	4432                	lw	s0,12(sp)
     1ba:	44a2                	lw	s1,8(sp)
     1bc:	0151                	add	sp,sp,20
     1be:	8082                	ret
     1c0:	00c785b3          	add	a1,a5,a2
     1c4:	0005c503          	lbu	a0,0(a1)
     1c8:	00c685b3          	add	a1,a3,a2
     1cc:	0605                	add	a2,a2,1
     1ce:	00a58023          	sb	a0,0(a1)
     1d2:	b75d                	j	178 <mini_pad+0x42>

000001d4 <DelaySysTick>:
     1d4:	e000f7b7          	lui	a5,0xe000f
     1d8:	479c                	lw	a5,8(a5)
     1da:	e000f737          	lui	a4,0xe000f
     1de:	953e                	add	a0,a0,a5
     1e0:	471c                	lw	a5,8(a4)
     1e2:	8f89                	sub	a5,a5,a0
     1e4:	fe07cee3          	bltz	a5,1e0 <DelaySysTick+0xc>
     1e8:	8082                	ret

000001ea <mini_itoa.part.0>:
     1ea:	1101                	add	sp,sp,-32
     1ec:	ce06                	sw	ra,28(sp)
     1ee:	cc22                	sw	s0,24(sp)
     1f0:	ca26                	sw	s1,20(sp)
     1f2:	c002                	sw	zero,0(sp)
     1f4:	832a                	mv	t1,a0
     1f6:	00055763          	bgez	a0,204 <mini_itoa.part.0+0x1a>
     1fa:	e689                	bnez	a3,204 <mini_itoa.part.0+0x1a>
     1fc:	4785                	li	a5,1
     1fe:	40a00333          	neg	t1,a0
     202:	c03e                	sw	a5,0(sp)
     204:	8a05                	and	a2,a2,1
     206:	06100413          	li	s0,97
     20a:	c219                	beqz	a2,210 <mini_itoa.part.0+0x26>
     20c:	04100413          	li	s0,65
     210:	84ba                	mv	s1,a4
     212:	1459                	add	s0,s0,-10
     214:	851a                	mv	a0,t1
     216:	c83a                	sw	a4,16(sp)
     218:	c21a                	sw	t1,4(sp)
     21a:	c62e                	sw	a1,12(sp)
     21c:	c41a                	sw	t1,8(sp)
     21e:	35f9                	jal	ec <__umodsi3>
     220:	47a5                	li	a5,9
     222:	4322                	lw	t1,8(sp)
     224:	45b2                	lw	a1,12(sp)
     226:	4742                	lw	a4,16(sp)
     228:	0ff57693          	zext.b	a3,a0
     22c:	06a7e163          	bltu	a5,a0,28e <mini_itoa.part.0+0xa4>
     230:	03068693          	add	a3,a3,48
     234:	0ff6f693          	zext.b	a3,a3
     238:	00148793          	add	a5,s1,1
     23c:	00d48023          	sb	a3,0(s1)
     240:	851a                	mv	a0,t1
     242:	c83a                	sw	a4,16(sp)
     244:	c63e                	sw	a5,12(sp)
     246:	c42e                	sw	a1,8(sp)
     248:	3da5                	jal	c0 <__hidden___udivsi3>
     24a:	4692                	lw	a3,4(sp)
     24c:	45a2                	lw	a1,8(sp)
     24e:	47b2                	lw	a5,12(sp)
     250:	4742                	lw	a4,16(sp)
     252:	832a                	mv	t1,a0
     254:	02b6fb63          	bgeu	a3,a1,28a <mini_itoa.part.0+0xa0>
     258:	4682                	lw	a3,0(sp)
     25a:	c699                	beqz	a3,268 <mini_itoa.part.0+0x7e>
     25c:	02d00693          	li	a3,45
     260:	00d78023          	sb	a3,0(a5) # e000f000 <__global_pointer$+0xc000e800>
     264:	00248793          	add	a5,s1,2
     268:	40e78533          	sub	a0,a5,a4
     26c:	01f55693          	srl	a3,a0,0x1f
     270:	96aa                	add	a3,a3,a0
     272:	00078023          	sb	zero,0(a5)
     276:	8685                	sra	a3,a3,0x1
     278:	4601                	li	a2,0
     27a:	17fd                	add	a5,a5,-1
     27c:	00d64b63          	blt	a2,a3,292 <mini_itoa.part.0+0xa8>
     280:	40f2                	lw	ra,28(sp)
     282:	4462                	lw	s0,24(sp)
     284:	44d2                	lw	s1,20(sp)
     286:	6105                	add	sp,sp,32
     288:	8082                	ret
     28a:	84be                	mv	s1,a5
     28c:	b761                	j	214 <mini_itoa.part.0+0x2a>
     28e:	96a2                	add	a3,a3,s0
     290:	b755                	j	234 <mini_itoa.part.0+0x4a>
     292:	00c705b3          	add	a1,a4,a2
     296:	0007c283          	lbu	t0,0(a5)
     29a:	0005c303          	lbu	t1,0(a1)
     29e:	0605                	add	a2,a2,1
     2a0:	00558023          	sb	t0,0(a1)
     2a4:	00678023          	sb	t1,0(a5)
     2a8:	bfc9                	j	27a <mini_itoa.part.0+0x90>

000002aa <ssd1306_i2c_setup>:
void ssd1306_i2c_setup(void)
{
	uint16_t tempreg;
	
	// Reset I2C1 to init all regs
	RCC->APB1PRSTR |= RCC_APB1Periph_I2C1;
     2aa:	400217b7          	lui	a5,0x40021
     2ae:	4b98                	lw	a4,16(a5)
     2b0:	002006b7          	lui	a3,0x200
     2b4:	8f55                	or	a4,a4,a3
     2b6:	cb98                	sw	a4,16(a5)
	RCC->APB1PRSTR &= ~RCC_APB1Periph_I2C1;
     2b8:	4b98                	lw	a4,16(a5)
     2ba:	ffe006b7          	lui	a3,0xffe00
     2be:	16fd                	add	a3,a3,-1 # ffdfffff <__global_pointer$+0xdfdff7ff>
     2c0:	8f75                	and	a4,a4,a3
     2c2:	cb98                	sw	a4,16(a5)
	
	// set freq
	tempreg = I2C1->CTLR2;
     2c4:	400057b7          	lui	a5,0x40005
     2c8:	4047d703          	lhu	a4,1028(a5) # 40005404 <__global_pointer$+0x20004c04>
	tempreg &= ~I2C_CTLR2_FREQ;
     2cc:	66c1                	lui	a3,0x10
     2ce:	fc068693          	add	a3,a3,-64 # ffc0 <main.c.41c1edcd+0xd7b5>
     2d2:	8f75                	and	a4,a4,a3
	tempreg |= (FUNCONF_SYSTEM_CORE_CLOCK/SSD1306_I2C_PRERATE)&I2C_CTLR2_FREQ;
     2d4:	01876713          	or	a4,a4,24
	I2C1->CTLR2 = tempreg;
     2d8:	40e79223          	sh	a4,1028(a5)
	tempreg = (FUNCONF_SYSTEM_CORE_CLOCK/(25*SSD1306_I2C_CLKRATE))&I2C_CKCFGR_CCR;
	tempreg |= I2C_CKCFGR_DUTY;
#endif
	tempreg |= I2C_CKCFGR_FS;
#endif
	I2C1->CKCFGR = tempreg;
     2dc:	7771                	lui	a4,0xffffc
     2de:	0705                	add	a4,a4,1 # ffffc001 <__global_pointer$+0xdfffb801>
     2e0:	40e79e23          	sh	a4,1052(a5)
	// initialize the state
	ssd1306_i2c_irq_state = 0;
#endif
	
	// Enable I2C
	I2C1->CTLR1 |= I2C_CTLR1_PE;
     2e4:	4007d703          	lhu	a4,1024(a5)
     2e8:	00176713          	or	a4,a4,1
     2ec:	40e79023          	sh	a4,1024(a5)

	// set ACK mode
	I2C1->CTLR1 |= I2C_CTLR1_ACK;
     2f0:	4007d703          	lhu	a4,1024(a5)
     2f4:	40076713          	or	a4,a4,1024
     2f8:	40e79023          	sh	a4,1024(a5)
}
     2fc:	8082                	ret

000002fe <ssd1306_drawPixel>:
void ssd1306_drawPixel(uint8_t x, uint8_t y, uint8_t color)
{
	uint16_t addr;
	
	/* clip */
	if(x >= SSD1306_W)
     2fe:	01851793          	sll	a5,a0,0x18
     302:	87e1                	sra	a5,a5,0x18
     304:	0207c963          	bltz	a5,336 <ssd1306_drawPixel+0x38>
		return;
	if(y >= SSD1306_H)
     308:	03f00793          	li	a5,63
     30c:	02b7e563          	bltu	a5,a1,336 <ssd1306_drawPixel+0x38>
		return;
	
	/* compute buffer address */
	addr = x + SSD1306_W*(y/8);
     310:	0035d793          	srl	a5,a1,0x3
     314:	079e                	sll	a5,a5,0x7
	
	/* set/clear bit in buffer */
	if(color)
		ssd1306_buffer[addr] |= (1<<(y&7));
     316:	953e                	add	a0,a0,a5
     318:	200007b7          	lui	a5,0x20000
     31c:	00078793          	mv	a5,a5
     320:	97aa                	add	a5,a5,a0
     322:	899d                	and	a1,a1,7
     324:	4685                	li	a3,1
     326:	0007c703          	lbu	a4,0(a5) # 20000000 <ssd1306_buffer>
     32a:	00b695b3          	sll	a1,a3,a1
	if(color)
     32e:	c609                	beqz	a2,338 <ssd1306_drawPixel+0x3a>
		ssd1306_buffer[addr] |= (1<<(y&7));
     330:	8f4d                	or	a4,a4,a1
	else
		ssd1306_buffer[addr] &= ~(1<<(y&7));
     332:	00e78023          	sb	a4,0(a5)
}
     336:	8082                	ret
		ssd1306_buffer[addr] &= ~(1<<(y&7));
     338:	fff5c593          	not	a1,a1
     33c:	8f6d                	and	a4,a4,a1
     33e:	bfd5                	j	332 <ssd1306_drawPixel+0x34>

00000340 <ssd1306_drawstr_sz.constprop.0>:
}

/*
 * draw a string to the display buffer, scaled to size
 */
void ssd1306_drawstr_sz(uint8_t x, uint8_t y, char *str, uint8_t color, font_size_t font_size)
     340:	1101                	add	sp,sp,-32
     342:	ce06                	sw	ra,28(sp)
     344:	cc22                	sw	s0,24(sp)
     346:	ca26                	sw	s1,20(sp)
     348:	872a                	mv	a4,a0
        for (j = 0; j < 8; j++)
     34a:	4781                	li	a5,0
     34c:	6305                	lui	t1,0x1
{
	uint8_t c;
	
	while((c=*str++))
     34e:	00f70633          	add	a2,a4,a5
     352:	00064403          	lbu	s0,0(a2)
     356:	00379693          	sll	a3,a5,0x3
     35a:	0ff6f693          	zext.b	a3,a3
     35e:	c02d                	beqz	s0,3c0 <ssd1306_drawstr_sz.constprop.0+0x80>
     360:	040e                	sll	s0,s0,0x3
     362:	04830613          	add	a2,t1,72 # 1048 <fontdata>
     366:	9432                	add	s0,s0,a2
     368:	44c1                	li	s1,16
        d = fontdata[(chr << 3) + i];
     36a:	00044383          	lbu	t2,0(s0)
        for (j = 0; j < 8; j++)
     36e:	4281                	li	t0,0
                    ssd1306_drawPixel(x + (j * font_scale) + k, y + (i * font_scale) + l, col);
     370:	00568533          	add	a0,a3,t0
     374:	0073d613          	srl	a2,t2,0x7
     378:	85a6                	mv	a1,s1
     37a:	0ff57513          	zext.b	a0,a0
     37e:	c83a                	sw	a4,16(sp)
     380:	c63e                	sw	a5,12(sp)
     382:	c416                	sw	t0,8(sp)
     384:	c236                	sw	a3,4(sp)
     386:	c01e                	sw	t2,0(sp)
     388:	3f9d                	jal	2fe <ssd1306_drawPixel>
        for (j = 0; j < 8; j++)
     38a:	42a2                	lw	t0,8(sp)
            d <<= 1;
     38c:	4382                	lw	t2,0(sp)
        for (j = 0; j < 8; j++)
     38e:	4621                	li	a2,8
     390:	0285                	add	t0,t0,1
     392:	02c2                	sll	t0,t0,0x10
            d <<= 1;
     394:	0386                	sll	t2,t2,0x1
        for (j = 0; j < 8; j++)
     396:	0102d293          	srl	t0,t0,0x10
     39a:	4692                	lw	a3,4(sp)
     39c:	47b2                	lw	a5,12(sp)
     39e:	4742                	lw	a4,16(sp)
            d <<= 1;
     3a0:	0ff3f393          	zext.b	t2,t2
        for (j = 0; j < 8; j++)
     3a4:	6305                	lui	t1,0x1
     3a6:	fcc295e3          	bne	t0,a2,370 <ssd1306_drawstr_sz.constprop.0+0x30>
    for (i = 0; i < 8; i++)
     3aa:	0485                	add	s1,s1,1
     3ac:	0ff4f493          	zext.b	s1,s1
     3b0:	4661                	li	a2,24
     3b2:	0405                	add	s0,s0,1
     3b4:	fac49be3          	bne	s1,a2,36a <ssd1306_drawstr_sz.constprop.0+0x2a>
	{
		ssd1306_drawchar_sz(x, y, c, color, font_size);
		x += 8 * font_size;
		if(x>128 - 8 * font_size)
     3b8:	0785                	add	a5,a5,1
     3ba:	46c1                	li	a3,16
     3bc:	f8d799e3          	bne	a5,a3,34e <ssd1306_drawstr_sz.constprop.0+0xe>
			break;
	}
}
     3c0:	40f2                	lw	ra,28(sp)
     3c2:	4462                	lw	s0,24(sp)
     3c4:	44d2                	lw	s1,20(sp)
     3c6:	6105                	add	sp,sp,32
     3c8:	8082                	ret

000003ca <ssd1306_drawLine.constprop.0>:
void ssd1306_drawLine(uint16_t x0, uint16_t y0, uint16_t x1, uint16_t y1, uint8_t color)
     3ca:	fd810113          	add	sp,sp,-40
	steep = (gfx_abs(y1 - y0) > gfx_abs(x1 - x0));
     3ce:	40b687b3          	sub	a5,a3,a1
void ssd1306_drawLine(uint16_t x0, uint16_t y0, uint16_t x1, uint16_t y1, uint8_t color)
     3d2:	ce26                	sw	s1,28(sp)
     3d4:	84ae                	mv	s1,a1
	return (x<0) ? -x : x;
     3d6:	01079593          	sll	a1,a5,0x10
     3da:	85c1                	sra	a1,a1,0x10
     3dc:	85bd                	sra	a1,a1,0xf
     3de:	8fad                	xor	a5,a5,a1
     3e0:	8f8d                	sub	a5,a5,a1
     3e2:	07c2                	sll	a5,a5,0x10
     3e4:	87c1                	sra	a5,a5,0x10
void ssd1306_drawLine(uint16_t x0, uint16_t y0, uint16_t x1, uint16_t y1, uint8_t color)
     3e6:	d022                	sw	s0,32(sp)
	steep = (gfx_abs(y1 - y0) > gfx_abs(x1 - x0));
     3e8:	40a60433          	sub	s0,a2,a0
	return (x<0) ? -x : x;
     3ec:	c03e                	sw	a5,0(sp)
     3ee:	01041793          	sll	a5,s0,0x10
     3f2:	87c1                	sra	a5,a5,0x10
     3f4:	87bd                	sra	a5,a5,0xf
     3f6:	8c3d                	xor	s0,s0,a5
     3f8:	8c1d                	sub	s0,s0,a5
     3fa:	01041793          	sll	a5,s0,0x10
     3fe:	87c1                	sra	a5,a5,0x10
     400:	c23e                	sw	a5,4(sp)
	if(steep)
     402:	4712                	lw	a4,4(sp)
     404:	4782                	lw	a5,0(sp)
void ssd1306_drawLine(uint16_t x0, uint16_t y0, uint16_t x1, uint16_t y1, uint8_t color)
     406:	d206                	sw	ra,36(sp)
	if(steep)
     408:	00f74863          	blt	a4,a5,418 <ssd1306_drawLine.constprop.0+0x4e>
     40c:	87b6                	mv	a5,a3
     40e:	86b2                	mv	a3,a2
     410:	863e                	mv	a2,a5
     412:	87a6                	mv	a5,s1
     414:	84aa                	mv	s1,a0
     416:	853e                	mv	a0,a5
	if(x0 > x1)
     418:	0096e863          	bltu	a3,s1,428 <ssd1306_drawLine.constprop.0+0x5e>
     41c:	87b2                	mv	a5,a2
     41e:	862a                	mv	a2,a0
     420:	853e                	mv	a0,a5
     422:	87b6                	mv	a5,a3
     424:	86a6                	mv	a3,s1
     426:	84be                	mv	s1,a5
	deltax = x1 - x0;
     428:	40d485b3          	sub	a1,s1,a3
     42c:	01059793          	sll	a5,a1,0x10
     430:	83c1                	srl	a5,a5,0x10
     432:	c63e                	sw	a5,12(sp)
	deltay = gfx_abs(y1 - y0);
     434:	40c507b3          	sub	a5,a0,a2
	return (x<0) ? -x : x;
     438:	01079313          	sll	t1,a5,0x10
     43c:	41035313          	sra	t1,t1,0x10
     440:	40f35313          	sra	t1,t1,0xf
     444:	00f347b3          	xor	a5,t1,a5
     448:	406787b3          	sub	a5,a5,t1
     44c:	07c2                	sll	a5,a5,0x10
	error = deltax/2;
     44e:	05c2                	sll	a1,a1,0x10
	return (x<0) ? -x : x;
     450:	83c1                	srl	a5,a5,0x10
	error = deltax/2;
     452:	85c1                	sra	a1,a1,0x10
	return (x<0) ? -x : x;
     454:	c83e                	sw	a5,16(sp)
		ystep = -1;
     456:	577d                	li	a4,-1
	error = deltax/2;
     458:	01f5d793          	srl	a5,a1,0x1f
     45c:	97ae                	add	a5,a5,a1
	y = y0;
     45e:	01061313          	sll	t1,a2,0x10
		ystep = -1;
     462:	c43a                	sw	a4,8(sp)
	error = deltax/2;
     464:	8785                	sra	a5,a5,0x1
	y = y0;
     466:	41035313          	sra	t1,t1,0x10
	if(y0 < y1)
     46a:	00a67463          	bgeu	a2,a0,472 <ssd1306_drawLine.constprop.0+0xa8>
		ystep = 1;
     46e:	4705                	li	a4,1
     470:	c43a                	sw	a4,8(sp)
	for(x=x0;x<=x1;x++)
     472:	01069413          	sll	s0,a3,0x10
     476:	8441                	sra	s0,s0,0x10
     478:	0084d863          	bge	s1,s0,488 <ssd1306_drawLine.constprop.0+0xbe>
}
     47c:	5092                	lw	ra,36(sp)
     47e:	5402                	lw	s0,32(sp)
     480:	44f2                	lw	s1,28(sp)
     482:	02810113          	add	sp,sp,40
     486:	8082                	ret
		if(steep)
     488:	4702                	lw	a4,0(sp)
     48a:	4692                	lw	a3,4(sp)
     48c:	cc3e                	sw	a5,24(sp)
     48e:	ca1a                	sw	t1,20(sp)
     490:	0ff47513          	zext.b	a0,s0
			ssd1306_drawPixel(y, x, color);
     494:	0ff37293          	zext.b	t0,t1
     498:	4605                	li	a2,1
		if(steep)
     49a:	02e6dc63          	bge	a3,a4,4d2 <ssd1306_drawLine.constprop.0+0x108>
			ssd1306_drawPixel(y, x, color);
     49e:	85aa                	mv	a1,a0
     4a0:	8516                	mv	a0,t0
     4a2:	3db1                	jal	2fe <ssd1306_drawPixel>
     4a4:	4352                	lw	t1,20(sp)
     4a6:	47e2                	lw	a5,24(sp)
		error = error - deltay;
     4a8:	4742                	lw	a4,16(sp)
     4aa:	8f99                	sub	a5,a5,a4
     4ac:	01079613          	sll	a2,a5,0x10
     4b0:	07c2                	sll	a5,a5,0x10
     4b2:	87c1                	sra	a5,a5,0x10
     4b4:	8241                	srl	a2,a2,0x10
		if(error < 0)
     4b6:	0007db63          	bgez	a5,4cc <ssd1306_drawLine.constprop.0+0x102>
			y = y + ystep;
     4ba:	47a2                	lw	a5,8(sp)
     4bc:	933e                	add	t1,t1,a5
			error = error + deltax;
     4be:	47b2                	lw	a5,12(sp)
			y = y + ystep;
     4c0:	0342                	sll	t1,t1,0x10
     4c2:	41035313          	sra	t1,t1,0x10
			error = error + deltax;
     4c6:	97b2                	add	a5,a5,a2
     4c8:	07c2                	sll	a5,a5,0x10
     4ca:	87c1                	sra	a5,a5,0x10
     4cc:	00140693          	add	a3,s0,1
     4d0:	b74d                	j	472 <ssd1306_drawLine.constprop.0+0xa8>
			ssd1306_drawPixel(x, y, color);
     4d2:	8596                	mv	a1,t0
     4d4:	352d                	jal	2fe <ssd1306_drawPixel>
     4d6:	47e2                	lw	a5,24(sp)
     4d8:	4352                	lw	t1,20(sp)
     4da:	b7f9                	j	4a8 <ssd1306_drawLine.constprop.0+0xde>

000004dc <ssd1306_drawImage.constprop.0>:
void ssd1306_drawImage(int x, int y, const unsigned char* input, uint8_t width, uint8_t height, uint8_t color_mode) {
     4dc:	fcc10113          	add	sp,sp,-52
	uint8_t bytes_to_draw = width / 8;
     4e0:	0036d793          	srl	a5,a3,0x3
     4e4:	0f86f693          	and	a3,a3,248
     4e8:	c43e                	sw	a5,8(sp)
     4ea:	00a687b3          	add	a5,a3,a0
     4ee:	c83e                	sw	a5,16(sp)
						ssd1306_buffer[buffer_addr] = (ssd1306_buffer[buffer_addr] & ~v_mask) | (input_pixel ? v_mask : 0);
     4f0:	200007b7          	lui	a5,0x20000
     4f4:	00078793          	mv	a5,a5
void ssd1306_drawImage(int x, int y, const unsigned char* input, uint8_t width, uint8_t height, uint8_t color_mode) {
     4f8:	d622                	sw	s0,44(sp)
     4fa:	d806                	sw	ra,48(sp)
     4fc:	d426                	sw	s1,40(sp)
     4fe:	c02a                	sw	a0,0(sp)
     500:	cc2e                	sw	a1,24(sp)
     502:	ce32                	sw	a2,28(sp)
     504:	d03a                	sw	a4,32(sp)
	for (uint8_t line = 0; line < height; line++) {
     506:	4401                	li	s0,0
						ssd1306_buffer[buffer_addr] = (ssd1306_buffer[buffer_addr] & ~v_mask) | (input_pixel ? v_mask : 0);
     508:	c23e                	sw	a5,4(sp)
		y_absolute = y + line;
     50a:	47e2                	lw	a5,24(sp)
     50c:	97a2                	add	a5,a5,s0
    if (y_absolute < 0) {
     50e:	0a07c563          	bltz	a5,5b8 <ssd1306_drawImage.constprop.0+0xdc>
		if (y_absolute >= SSD1306_H || y_absolute < 0) {
     512:	03f00713          	li	a4,63
     516:	0af76763          	bltu	a4,a5,5c4 <ssd1306_drawImage.constprop.0+0xe8>
		uint8_t v_mask = 1 << (y_absolute & 7);
     51a:	0077f713          	and	a4,a5,7
				buffer_addr = x_absolute + SSD1306_W * (y_absolute / 8);
     51e:	878d                	sra	a5,a5,0x3
			uint8_t input_byte = input[byte + line * bytes_to_draw];
     520:	45a2                	lw	a1,8(sp)
				buffer_addr = x_absolute + SSD1306_W * (y_absolute / 8);
     522:	079e                	sll	a5,a5,0x7
     524:	07c2                	sll	a5,a5,0x10
		uint8_t v_mask = 1 << (y_absolute & 7);
     526:	4685                	li	a3,1
				buffer_addr = x_absolute + SSD1306_W * (y_absolute / 8);
     528:	83c1                	srl	a5,a5,0x10
			uint8_t input_byte = input[byte + line * bytes_to_draw];
     52a:	8522                	mv	a0,s0
		uint8_t v_mask = 1 << (y_absolute & 7);
     52c:	00e694b3          	sll	s1,a3,a4
				buffer_addr = x_absolute + SSD1306_W * (y_absolute / 8);
     530:	c63e                	sw	a5,12(sp)
			uint8_t input_byte = input[byte + line * bytes_to_draw];
     532:	36bd                	jal	a0 <__mulsi3>
     534:	47f2                	lw	a5,28(sp)
						ssd1306_buffer[buffer_addr] = (ssd1306_buffer[buffer_addr] & ~v_mask) | (input_pixel ? v_mask : 0);
     536:	01849693          	sll	a3,s1,0x18
     53a:	86e1                	sra	a3,a3,0x18
				buffer_addr = x_absolute + SSD1306_W * (y_absolute / 8);
     53c:	4742                	lw	a4,16(sp)
     53e:	953e                	add	a0,a0,a5
						ssd1306_buffer[buffer_addr] = (ssd1306_buffer[buffer_addr] & ~v_mask) | (input_pixel ? v_mask : 0);
     540:	fff6c793          	not	a5,a3
     544:	d23e                	sw	a5,36(sp)
			uint8_t input_byte = input[byte + line * bytes_to_draw];
     546:	00054783          	lbu	a5,0(a0)
     54a:	83be                	mv	t2,a5
				if (x_absolute >= SSD1306_W) {
     54c:	07f00793          	li	a5,127
     550:	04e7cf63          	blt	a5,a4,5ae <ssd1306_drawImage.constprop.0+0xd2>
     554:	47b2                	lw	a5,12(sp)
				x_absolute = x + 8 * (bytes_to_draw - byte) + pixel;
     556:	4601                	li	a2,0
     558:	97ba                	add	a5,a5,a4
     55a:	07c2                	sll	a5,a5,0x10
     55c:	83c1                	srl	a5,a5,0x10
     55e:	ca3e                	sw	a5,20(sp)
				if (x_absolute >= SSD1306_W) {
     560:	08000793          	li	a5,128
     564:	40e784b3          	sub	s1,a5,a4
				buffer_addr = x_absolute + SSD1306_W * (y_absolute / 8);
     568:	47d2                	lw	a5,20(sp)
						ssd1306_buffer[buffer_addr] = (ssd1306_buffer[buffer_addr] & ~v_mask) | (input_pixel ? v_mask : 0);
     56a:	5312                	lw	t1,36(sp)
     56c:	82b6                	mv	t0,a3
				buffer_addr = x_absolute + SSD1306_W * (y_absolute / 8);
     56e:	00c785b3          	add	a1,a5,a2
						ssd1306_buffer[buffer_addr] = (ssd1306_buffer[buffer_addr] & ~v_mask) | (input_pixel ? v_mask : 0);
     572:	4792                	lw	a5,4(sp)
     574:	05c2                	sll	a1,a1,0x10
     576:	81c1                	srl	a1,a1,0x10
     578:	97ae                	add	a5,a5,a1
     57a:	0007c783          	lbu	a5,0(a5) # 20000000 <ssd1306_buffer>
     57e:	0067f7b3          	and	a5,a5,t1
				uint8_t input_pixel = input_byte & (1 << pixel);
     582:	4305                	li	t1,1
     584:	00c31333          	sll	t1,t1,a2
						ssd1306_buffer[buffer_addr] = (ssd1306_buffer[buffer_addr] & ~v_mask) | (input_pixel ? v_mask : 0);
     588:	07e2                	sll	a5,a5,0x18
     58a:	0063f333          	and	t1,t2,t1
     58e:	87e1                	sra	a5,a5,0x18
     590:	00031363          	bnez	t1,596 <ssd1306_drawImage.constprop.0+0xba>
     594:	4281                	li	t0,0
     596:	4312                	lw	t1,4(sp)
     598:	0057e7b3          	or	a5,a5,t0
     59c:	959a                	add	a1,a1,t1
     59e:	00f58023          	sb	a5,0(a1)
			for (pixel = 0; pixel < 8; pixel++) {
     5a2:	479d                	li	a5,7
     5a4:	00f60563          	beq	a2,a5,5ae <ssd1306_drawImage.constprop.0+0xd2>
				x_absolute = x + 8 * (bytes_to_draw - byte) + pixel;
     5a8:	0605                	add	a2,a2,1
				if (x_absolute >= SSD1306_W) {
     5aa:	fa961fe3          	bne	a2,s1,568 <ssd1306_drawImage.constprop.0+0x8c>
		for (uint8_t byte = 0; byte < bytes_to_draw; byte++) {
     5ae:	4782                	lw	a5,0(sp)
     5b0:	1761                	add	a4,a4,-8
     5b2:	0505                	add	a0,a0,1
     5b4:	f8e799e3          	bne	a5,a4,546 <ssd1306_drawImage.constprop.0+0x6a>
	for (uint8_t line = 0; line < height; line++) {
     5b8:	5782                	lw	a5,32(sp)
     5ba:	0405                	add	s0,s0,1
     5bc:	0ff47413          	zext.b	s0,s0
     5c0:	f4f465e3          	bltu	s0,a5,50a <ssd1306_drawImage.constprop.0+0x2e>
}
     5c4:	50c2                	lw	ra,48(sp)
     5c6:	5432                	lw	s0,44(sp)
     5c8:	54a2                	lw	s1,40(sp)
     5ca:	03410113          	add	sp,sp,52
     5ce:	8082                	ret

000005d0 <internal_handle_input.constprop.0>:
     5d0:	e00007b7          	lui	a5,0xe0000
     5d4:	0f478793          	add	a5,a5,244 # e00000f4 <__global_pointer$+0xbffff8f4>
     5d8:	439c                	lw	a5,0(a5)
     5da:	8082                	ret

000005dc <_write.constprop.0>:
     5dc:	1101                	add	sp,sp,-32
     5de:	cc22                	sw	s0,24(sp)
     5e0:	ce06                	sw	ra,28(sp)
     5e2:	ca26                	sw	s1,20(sp)
     5e4:	c02a                	sw	a0,0(sp)
     5e6:	c802                	sw	zero,16(sp)
     5e8:	842e                	mv	s0,a1
     5ea:	e1f9                	bnez	a1,6b0 <_write.constprop.0+0xd4>
     5ec:	e00007b7          	lui	a5,0xe0000
     5f0:	0f478793          	add	a5,a5,244 # e00000f4 <__global_pointer$+0xbffff8f4>
     5f4:	439c                	lw	a5,0(a5)
     5f6:	c789                	beqz	a5,600 <_write.constprop.0+0x24>
     5f8:	0807f793          	and	a5,a5,128
     5fc:	e391                	bnez	a5,600 <_write.constprop.0+0x24>
     5fe:	3fc9                	jal	5d0 <internal_handle_input.constprop.0>
     600:	40f2                	lw	ra,28(sp)
     602:	8522                	mv	a0,s0
     604:	4462                	lw	s0,24(sp)
     606:	44d2                	lw	s1,20(sp)
     608:	6105                	add	sp,sp,32
     60a:	8082                	ret
     60c:	409406b3          	sub	a3,s0,s1
     610:	461d                	li	a2,7
     612:	8736                	mv	a4,a3
     614:	00d65363          	bge	a2,a3,61a <_write.constprop.0+0x3e>
     618:	471d                	li	a4,7
     61a:	00027637          	lui	a2,0x27
     61e:	10160613          	add	a2,a2,257 # 27101 <main.c.41c1edcd+0x248f6>
     622:	00032583          	lw	a1,0(t1) # 1000 <main+0x466>
     626:	0805f513          	and	a0,a1,128
     62a:	ed3d                	bnez	a0,6a8 <_write.constprop.0+0xcc>
     62c:	c981                	beqz	a1,63c <_write.constprop.0+0x60>
     62e:	c61a                	sw	t1,12(sp)
     630:	c43a                	sw	a4,8(sp)
     632:	c236                	sw	a3,4(sp)
     634:	3f71                	jal	5d0 <internal_handle_input.constprop.0>
     636:	4332                	lw	t1,12(sp)
     638:	4722                	lw	a4,8(sp)
     63a:	4692                	lw	a3,4(sp)
     63c:	0036a693          	slti	a3,a3,3
     640:	4601                	li	a2,0
     642:	e299                	bnez	a3,648 <_write.constprop.0+0x6c>
     644:	ffd70613          	add	a2,a4,-3
     648:	4782                	lw	a5,0(sp)
     64a:	00348593          	add	a1,s1,3
     64e:	0808                	add	a0,sp,16
     650:	95be                	add	a1,a1,a5
     652:	c41a                	sw	t1,8(sp)
     654:	c23a                	sw	a4,4(sp)
     656:	219d                	jal	abc <memcpy>
     658:	4642                	lw	a2,16(sp)
     65a:	4782                	lw	a5,0(sp)
     65c:	e00006b7          	lui	a3,0xe0000
     660:	4322                	lw	t1,8(sp)
     662:	4712                	lw	a4,4(sp)
     664:	0f868693          	add	a3,a3,248 # e00000f8 <__global_pointer$+0xbffff8f8>
     668:	c290                	sw	a2,0(a3)
     66a:	458d                	li	a1,3
     66c:	00978633          	add	a2,a5,s1
     670:	4681                	li	a3,0
     672:	00064283          	lbu	t0,0(a2)
     676:	0685                	add	a3,a3,1
     678:	01068793          	add	a5,a3,16
     67c:	00278533          	add	a0,a5,sp
     680:	00550023          	sb	t0,0(a0)
     684:	00d70563          	beq	a4,a3,68e <_write.constprop.0+0xb2>
     688:	0605                	add	a2,a2,1
     68a:	feb694e3          	bne	a3,a1,672 <_write.constprop.0+0x96>
     68e:	00470693          	add	a3,a4,4
     692:	f806e693          	or	a3,a3,-128
     696:	00d10823          	sb	a3,16(sp)
     69a:	46c2                	lw	a3,16(sp)
     69c:	94ba                	add	s1,s1,a4
     69e:	00d32023          	sw	a3,0(t1)
     6a2:	f684c5e3          	blt	s1,s0,60c <_write.constprop.0+0x30>
     6a6:	bfa9                	j	600 <_write.constprop.0+0x24>
     6a8:	167d                	add	a2,a2,-1
     6aa:	fe25                	bnez	a2,622 <_write.constprop.0+0x46>
     6ac:	8426                	mv	s0,s1
     6ae:	bf89                	j	600 <_write.constprop.0+0x24>
     6b0:	e0000337          	lui	t1,0xe0000
     6b4:	4481                	li	s1,0
     6b6:	0f430313          	add	t1,t1,244 # e00000f4 <__global_pointer$+0xbffff8f4>
     6ba:	b7e5                	j	6a2 <_write.constprop.0+0xc6>

000006bc <__puts_uart>:
     6bc:	1151                	add	sp,sp,-12
     6be:	c222                	sw	s0,4(sp)
     6c0:	c406                	sw	ra,8(sp)
     6c2:	842e                	mv	s0,a1
     6c4:	3f21                	jal	5dc <_write.constprop.0>
     6c6:	40a2                	lw	ra,8(sp)
     6c8:	8522                	mv	a0,s0
     6ca:	4412                	lw	s0,4(sp)
     6cc:	0131                	add	sp,sp,12
     6ce:	8082                	ret

000006d0 <handle_reset>:
     6d0:	20000197          	auipc	gp,0x20000
     6d4:	13018193          	add	gp,gp,304 # 20000800 <__global_pointer$>
     6d8:	00018113          	mv	sp,gp
     6dc:	08000513          	li	a0,128
     6e0:	30051073          	csrw	mstatus,a0
     6e4:	468d                	li	a3,3
     6e6:	00000517          	auipc	a0,0x0
     6ea:	91a50513          	add	a0,a0,-1766 # 0 <InterruptVector>
     6ee:	8d55                	or	a0,a0,a3
     6f0:	30551073          	csrw	mtvec,a0
     6f4:	20000517          	auipc	a0,0x20000
     6f8:	90c50513          	add	a0,a0,-1780 # 20000000 <ssd1306_buffer>
     6fc:	c0018593          	add	a1,gp,-1024 # 20000400 <_ebss>
     700:	4601                	li	a2,0
     702:	00b55663          	bge	a0,a1,70e <handle_reset+0x3e>
     706:	c110                	sw	a2,0(a0)
     708:	0511                	add	a0,a0,4
     70a:	feb54ee3          	blt	a0,a1,706 <handle_reset+0x36>
     70e:	00001517          	auipc	a0,0x1
     712:	62e50513          	add	a0,a0,1582 # 1d3c <_data_lma>
     716:	20000597          	auipc	a1,0x20000
     71a:	8ea58593          	add	a1,a1,-1814 # 20000000 <ssd1306_buffer>
     71e:	20000617          	auipc	a2,0x20000
     722:	8e260613          	add	a2,a2,-1822 # 20000000 <ssd1306_buffer>
     726:	00c58863          	beq	a1,a2,736 <handle_reset+0x66>
     72a:	4114                	lw	a3,0(a0)
     72c:	c194                	sw	a3,0(a1)
     72e:	0511                	add	a0,a0,4
     730:	0591                	add	a1,a1,4
     732:	fec59ae3          	bne	a1,a2,726 <handle_reset+0x56>
     736:	e000f7b7          	lui	a5,0xe000f
     73a:	4705                	li	a4,1
     73c:	c398                	sw	a4,0(a5)
     73e:	6785                	lui	a5,0x1
     740:	b9a78793          	add	a5,a5,-1126 # b9a <main>
     744:	34179073          	csrw	mepc,a5
     748:	30200073          	mret

0000074c <ADC1_IRQHandler>:
     74c:	a001                	j	74c <ADC1_IRQHandler>

0000074e <NMI_Handler>:
     74e:	40021737          	lui	a4,0x40021
     752:	471c                	lw	a5,8(a4)
     754:	008006b7          	lui	a3,0x800
     758:	8fd5                	or	a5,a5,a3
     75a:	c71c                	sw	a5,8(a4)

0000075c <strlen>:
     75c:	87aa                	mv	a5,a0
     75e:	0007c703          	lbu	a4,0(a5)
     762:	e701                	bnez	a4,76a <strlen+0xe>
     764:	40a78533          	sub	a0,a5,a0
     768:	8082                	ret
     76a:	0785                	add	a5,a5,1
     76c:	bfcd                	j	75e <strlen+0x2>

0000076e <mini_vpprintf>:
     76e:	fa410113          	add	sp,sp,-92
     772:	caa2                	sw	s0,84(sp)
     774:	c8a6                	sw	s1,80(sp)
     776:	cc86                	sw	ra,88(sp)
     778:	c02a                	sw	a0,0(sp)
     77a:	c22e                	sw	a1,4(sp)
     77c:	8432                	mv	s0,a2
     77e:	84b6                	mv	s1,a3
     780:	ca02                	sw	zero,20(sp)
     782:	00044783          	lbu	a5,0(s0)
     786:	00140693          	add	a3,s0,1
     78a:	00f10fa3          	sb	a5,31(sp)
     78e:	eb81                	bnez	a5,79e <mini_vpprintf+0x30>
     790:	40e6                	lw	ra,88(sp)
     792:	4456                	lw	s0,84(sp)
     794:	4552                	lw	a0,20(sp)
     796:	44c6                	lw	s1,80(sp)
     798:	05c10113          	add	sp,sp,92
     79c:	8082                	ret
     79e:	c636                	sw	a3,12(sp)
     7a0:	02500713          	li	a4,37
     7a4:	02e78063          	beq	a5,a4,7c4 <mini_vpprintf+0x56>
     7a8:	4612                	lw	a2,4(sp)
     7aa:	4782                	lw	a5,0(sp)
     7ac:	4585                	li	a1,1
     7ae:	01f10513          	add	a0,sp,31
     7b2:	9782                	jalr	a5
     7b4:	46b2                	lw	a3,12(sp)
     7b6:	c426                	sw	s1,8(sp)
     7b8:	8436                	mv	s0,a3
     7ba:	47d2                	lw	a5,20(sp)
     7bc:	44a2                	lw	s1,8(sp)
     7be:	97aa                	add	a5,a5,a0
     7c0:	ca3e                	sw	a5,20(sp)
     7c2:	b7c1                	j	782 <mini_vpprintf+0x14>
     7c4:	00144703          	lbu	a4,1(s0)
     7c8:	03000613          	li	a2,48
     7cc:	03000693          	li	a3,48
     7d0:	00e10fa3          	sb	a4,31(sp)
     7d4:	c632                	sw	a2,12(sp)
     7d6:	00240793          	add	a5,s0,2
     7da:	08d71263          	bne	a4,a3,85e <mini_vpprintf+0xf0>
     7de:	843e                	mv	s0,a5
     7e0:	4681                	li	a3,0
     7e2:	4781                	li	a5,0
     7e4:	45a5                	li	a1,9
     7e6:	a811                	j	7fa <mini_vpprintf+0x8c>
     7e8:	00279713          	sll	a4,a5,0x2
     7ec:	0405                	add	s0,s0,1
     7ee:	97ba                	add	a5,a5,a4
     7f0:	fff44703          	lbu	a4,-1(s0)
     7f4:	0786                	sll	a5,a5,0x1
     7f6:	97b2                	add	a5,a5,a2
     7f8:	4685                	li	a3,1
     7fa:	fd070613          	add	a2,a4,-48 # 40020fd0 <__global_pointer$+0x200207d0>
     7fe:	0ff67513          	zext.b	a0,a2
     802:	fea5f3e3          	bgeu	a1,a0,7e8 <mini_vpprintf+0x7a>
     806:	c299                	beqz	a3,80c <mini_vpprintf+0x9e>
     808:	00e10fa3          	sb	a4,31(sp)
     80c:	c83e                	sw	a5,16(sp)
     80e:	46e1                	li	a3,24
     810:	00f6d363          	bge	a3,a5,816 <mini_vpprintf+0xa8>
     814:	c836                	sw	a3,16(sp)
     816:	06c00613          	li	a2,108
     81a:	4681                	li	a3,0
     81c:	00c71863          	bne	a4,a2,82c <mini_vpprintf+0xbe>
     820:	00044703          	lbu	a4,0(s0)
     824:	4685                	li	a3,1
     826:	0405                	add	s0,s0,1
     828:	00e10fa3          	sb	a4,31(sp)
     82c:	01f14603          	lbu	a2,31(sp)
     830:	06400713          	li	a4,100
     834:	06e60563          	beq	a2,a4,89e <mini_vpprintf+0x130>
     838:	02c76763          	bltu	a4,a2,866 <mini_vpprintf+0xf8>
     83c:	05800793          	li	a5,88
     840:	0af60063          	beq	a2,a5,8e0 <mini_vpprintf+0x172>
     844:	06300793          	li	a5,99
     848:	0af60d63          	beq	a2,a5,902 <mini_vpprintf+0x194>
     84c:	d231                	beqz	a2,790 <mini_vpprintf+0x22>
     84e:	4612                	lw	a2,4(sp)
     850:	4782                	lw	a5,0(sp)
     852:	4585                	li	a1,1
     854:	01f10513          	add	a0,sp,31
     858:	9782                	jalr	a5
     85a:	c426                	sw	s1,8(sp)
     85c:	bfb9                	j	7ba <mini_vpprintf+0x4c>
     85e:	02000693          	li	a3,32
     862:	c636                	sw	a3,12(sp)
     864:	bfad                	j	7de <mini_vpprintf+0x70>
     866:	07500713          	li	a4,117
     86a:	02e60a63          	beq	a2,a4,89e <mini_vpprintf+0x130>
     86e:	07800713          	li	a4,120
     872:	06e60763          	beq	a2,a4,8e0 <mini_vpprintf+0x172>
     876:	07300713          	li	a4,115
     87a:	fce61ae3          	bne	a2,a4,84e <mini_vpprintf+0xe0>
     87e:	cc3e                	sw	a5,24(sp)
     880:	00448793          	add	a5,s1,4
     884:	4084                	lw	s1,0(s1)
     886:	c43e                	sw	a5,8(sp)
     888:	8526                	mv	a0,s1
     88a:	3dc9                	jal	75c <strlen>
     88c:	47e2                	lw	a5,24(sp)
     88e:	85aa                	mv	a1,a0
     890:	08f05663          	blez	a5,91c <mini_vpprintf+0x1ae>
     894:	46c2                	lw	a3,16(sp)
     896:	4632                	lw	a2,12(sp)
     898:	1838                	add	a4,sp,56
     89a:	8526                	mv	a0,s1
     89c:	a01d                	j	8c2 <mini_vpprintf+0x154>
     89e:	00448793          	add	a5,s1,4
     8a2:	c43e                	sw	a5,8(sp)
     8a4:	c695                	beqz	a3,8d0 <mini_vpprintf+0x162>
     8a6:	f8b60613          	add	a2,a2,-117
     8aa:	1018                	add	a4,sp,32
     8ac:	00163693          	seqz	a3,a2
     8b0:	4088                	lw	a0,0(s1)
     8b2:	4601                	li	a2,0
     8b4:	45a9                	li	a1,10
     8b6:	3a15                	jal	1ea <mini_itoa.part.0>
     8b8:	46c2                	lw	a3,16(sp)
     8ba:	4632                	lw	a2,12(sp)
     8bc:	1838                	add	a4,sp,56
     8be:	85aa                	mv	a1,a0
     8c0:	1008                	add	a0,sp,32
     8c2:	3895                	jal	136 <mini_pad>
     8c4:	4612                	lw	a2,4(sp)
     8c6:	85aa                	mv	a1,a0
     8c8:	1828                	add	a0,sp,56
     8ca:	4782                	lw	a5,0(sp)
     8cc:	9782                	jalr	a5
     8ce:	b5f5                	j	7ba <mini_vpprintf+0x4c>
     8d0:	07500793          	li	a5,117
     8d4:	1018                	add	a4,sp,32
     8d6:	4685                	li	a3,1
     8d8:	fcf60ce3          	beq	a2,a5,8b0 <mini_vpprintf+0x142>
     8dc:	4681                	li	a3,0
     8de:	bfc9                	j	8b0 <mini_vpprintf+0x142>
     8e0:	4088                	lw	a0,0(s1)
     8e2:	fa860613          	add	a2,a2,-88
     8e6:	00448793          	add	a5,s1,4
     8ea:	1018                	add	a4,sp,32
     8ec:	4685                	li	a3,1
     8ee:	00163613          	seqz	a2,a2
     8f2:	45c1                	li	a1,16
     8f4:	c43e                	sw	a5,8(sp)
     8f6:	38d5                	jal	1ea <mini_itoa.part.0>
     8f8:	46c2                	lw	a3,16(sp)
     8fa:	4632                	lw	a2,12(sp)
     8fc:	85aa                	mv	a1,a0
     8fe:	1838                	add	a4,sp,56
     900:	b7c1                	j	8c0 <mini_vpprintf+0x152>
     902:	00448793          	add	a5,s1,4
     906:	c43e                	sw	a5,8(sp)
     908:	409c                	lw	a5,0(s1)
     90a:	46c2                	lw	a3,16(sp)
     90c:	4632                	lw	a2,12(sp)
     90e:	00f10fa3          	sb	a5,31(sp)
     912:	1838                	add	a4,sp,56
     914:	4585                	li	a1,1
     916:	01f10513          	add	a0,sp,31
     91a:	b765                	j	8c2 <mini_vpprintf+0x154>
     91c:	4612                	lw	a2,4(sp)
     91e:	8526                	mv	a0,s1
     920:	b76d                	j	8ca <mini_vpprintf+0x15c>

00000922 <printf>:
     922:	fdc10113          	add	sp,sp,-36
     926:	ca32                	sw	a2,20(sp)
     928:	862a                	mv	a2,a0
     92a:	c82e                	sw	a1,16(sp)
     92c:	cc36                	sw	a3,24(sp)
     92e:	4581                	li	a1,0
     930:	0814                	add	a3,sp,16
     932:	6bc00513          	li	a0,1724
     936:	c606                	sw	ra,12(sp)
     938:	ce3a                	sw	a4,28(sp)
     93a:	d03e                	sw	a5,32(sp)
     93c:	c036                	sw	a3,0(sp)
     93e:	3d05                	jal	76e <mini_vpprintf>
     940:	40b2                	lw	ra,12(sp)
     942:	02410113          	add	sp,sp,36
     946:	8082                	ret

00000948 <ssd1306_i2c_error.isra.0>:
 * error handler
 */
uint8_t ssd1306_i2c_error(uint8_t err)
{
	// report error
	printf("ssd1306_i2c_error - timeout waiting for %s\n\r", errstr[err]);
     948:	6785                	lui	a5,0x1
     94a:	050a                	sll	a0,a0,0x2
     94c:	03478793          	add	a5,a5,52 # 1034 <errstr>
     950:	97aa                	add	a5,a5,a0
     952:	438c                	lw	a1,0(a5)
     954:	6505                	lui	a0,0x1
uint8_t ssd1306_i2c_error(uint8_t err)
     956:	1151                	add	sp,sp,-12
	printf("ssd1306_i2c_error - timeout waiting for %s\n\r", errstr[err]);
     958:	fa850513          	add	a0,a0,-88 # fa8 <main+0x40e>
uint8_t ssd1306_i2c_error(uint8_t err)
     95c:	c406                	sw	ra,8(sp)
	printf("ssd1306_i2c_error - timeout waiting for %s\n\r", errstr[err]);
     95e:	37d1                	jal	922 <printf>
	
	// reset & initialize I2C
	ssd1306_i2c_setup();

	return 1;
}
     960:	40a2                	lw	ra,8(sp)
     962:	0131                	add	sp,sp,12
	ssd1306_i2c_setup();
     964:	b299                	j	2aa <ssd1306_i2c_setup>

00000966 <ssd1306_i2c_send.constprop.0.isra.0>:
uint8_t ssd1306_i2c_send(uint8_t addr, uint8_t *data, uint8_t sz)
{
	int32_t timeout;
	
	// wait for not busy
	timeout = TIMEOUT_MAX;
     966:	6761                	lui	a4,0x18
	while((I2C1->STAR2 & I2C_STAR2_BUSY) && (timeout--));
     968:	400057b7          	lui	a5,0x40005
	timeout = TIMEOUT_MAX;
     96c:	6a070713          	add	a4,a4,1696 # 186a0 <main.c.41c1edcd+0x15e95>
	while((I2C1->STAR2 & I2C_STAR2_BUSY) && (timeout--));
     970:	40078793          	add	a5,a5,1024 # 40005400 <__global_pointer$+0x20004c00>
     974:	567d                	li	a2,-1
     976:	0187d683          	lhu	a3,24(a5)
     97a:	8a89                	and	a3,a3,2
     97c:	c2f1                	beqz	a3,a40 <ssd1306_i2c_send.constprop.0.isra.0+0xda>
     97e:	177d                	add	a4,a4,-1
     980:	fec71be3          	bne	a4,a2,976 <ssd1306_i2c_send.constprop.0.isra.0+0x10>
	if(timeout==-1)
		return ssd1306_i2c_error(0);
     984:	4501                	li	a0,0
     986:	a01d                	j	9ac <ssd1306_i2c_send.constprop.0.isra.0+0x46>
	// send data one byte at a time
	while(sz--)
	{
		// wait for TX Empty
		timeout = TIMEOUT_MAX;
		while(!(I2C1->STAR1 & I2C_STAR1_TXE) && (timeout--));
     988:	40005737          	lui	a4,0x40005
	while(sz--)
     98c:	95aa                	add	a1,a1,a0
		while(!(I2C1->STAR1 & I2C_STAR1_TXE) && (timeout--));
     98e:	40070713          	add	a4,a4,1024 # 40005400 <__global_pointer$+0x20004c00>
	while(sz--)
     992:	0ff5f593          	zext.b	a1,a1
     996:	67e1                	lui	a5,0x18
     998:	6a178793          	add	a5,a5,1697 # 186a1 <main.c.41c1edcd+0x15e96>
		while(!(I2C1->STAR1 & I2C_STAR1_TXE) && (timeout--));
     99c:	01475683          	lhu	a3,20(a4)
     9a0:	0806f693          	and	a3,a3,128
     9a4:	e689                	bnez	a3,9ae <ssd1306_i2c_send.constprop.0.isra.0+0x48>
     9a6:	17fd                	add	a5,a5,-1
     9a8:	fbf5                	bnez	a5,99c <ssd1306_i2c_send.constprop.0.isra.0+0x36>
		if(timeout==-1)
			return ssd1306_i2c_error(3);
     9aa:	450d                	li	a0,3
		return ssd1306_i2c_error(0);
     9ac:	bf71                	j	948 <ssd1306_i2c_error.isra.0>
		
		// send command
		I2C1->DATAR = *data++;
     9ae:	00054783          	lbu	a5,0(a0)
     9b2:	0505                	add	a0,a0,1
     9b4:	00f71823          	sh	a5,16(a4)
	while(sz--)
     9b8:	0ff57793          	zext.b	a5,a0
     9bc:	fcf59de3          	bne	a1,a5,996 <ssd1306_i2c_send.constprop.0.isra.0+0x30>
	}

	// wait for tx complete
	timeout = TIMEOUT_MAX;
     9c0:	66e1                	lui	a3,0x18
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
     9c2:	40005737          	lui	a4,0x40005
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_BYTE_TRANSMITTED)) && (timeout--));
     9c6:	00070637          	lui	a2,0x70
	timeout = TIMEOUT_MAX;
     9ca:	6a068693          	add	a3,a3,1696 # 186a0 <main.c.41c1edcd+0x15e95>
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
     9ce:	40070713          	add	a4,a4,1024 # 40005400 <__global_pointer$+0x20004c00>
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_BYTE_TRANSMITTED)) && (timeout--));
     9d2:	08460613          	add	a2,a2,132 # 70084 <main.c.41c1edcd+0x6d879>
     9d6:	55fd                	li	a1,-1
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
     9d8:	01475503          	lhu	a0,20(a4)
     9dc:	01875783          	lhu	a5,24(a4)
     9e0:	07c2                	sll	a5,a5,0x10
     9e2:	8fc9                	or	a5,a5,a0
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_BYTE_TRANSMITTED)) && (timeout--));
     9e4:	8ff1                	and	a5,a5,a2
     9e6:	00c78763          	beq	a5,a2,9f4 <ssd1306_i2c_send.constprop.0.isra.0+0x8e>
     9ea:	16fd                	add	a3,a3,-1
     9ec:	feb696e3          	bne	a3,a1,9d8 <ssd1306_i2c_send.constprop.0.isra.0+0x72>
	if(timeout==-1)
		return ssd1306_i2c_error(4);
     9f0:	4511                	li	a0,4
     9f2:	bf6d                	j	9ac <ssd1306_i2c_send.constprop.0.isra.0+0x46>

	// set STOP condition
	I2C1->CTLR1 |= I2C_CTLR1_STOP;
     9f4:	00075783          	lhu	a5,0(a4)
     9f8:	2007e793          	or	a5,a5,512
     9fc:	00f71023          	sh	a5,0(a4)
	
	// we're happy
	return 0;
}
     a00:	8082                	ret
	I2C1->DATAR = addr<<1;
     a02:	07800793          	li	a5,120
     a06:	00f71823          	sh	a5,16(a4)
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
     a0a:	40005637          	lui	a2,0x40005
	timeout = TIMEOUT_MAX;
     a0e:	6761                	lui	a4,0x18
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_TRANSMITTER_MODE_SELECTED)) && (timeout--));
     a10:	000706b7          	lui	a3,0x70
	timeout = TIMEOUT_MAX;
     a14:	6a070713          	add	a4,a4,1696 # 186a0 <main.c.41c1edcd+0x15e95>
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
     a18:	40060613          	add	a2,a2,1024 # 40005400 <__global_pointer$+0x20004c00>
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_TRANSMITTER_MODE_SELECTED)) && (timeout--));
     a1c:	08268693          	add	a3,a3,130 # 70082 <main.c.41c1edcd+0x6d877>
     a20:	537d                	li	t1,-1
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
     a22:	01465283          	lhu	t0,20(a2)
     a26:	01865783          	lhu	a5,24(a2)
     a2a:	07c2                	sll	a5,a5,0x10
     a2c:	0057e7b3          	or	a5,a5,t0
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_TRANSMITTER_MODE_SELECTED)) && (timeout--));
     a30:	8ff5                	and	a5,a5,a3
     a32:	f4d78be3          	beq	a5,a3,988 <ssd1306_i2c_send.constprop.0.isra.0+0x22>
     a36:	177d                	add	a4,a4,-1
     a38:	fe6715e3          	bne	a4,t1,a22 <ssd1306_i2c_send.constprop.0.isra.0+0xbc>
		return ssd1306_i2c_error(2);
     a3c:	4509                	li	a0,2
     a3e:	b7bd                	j	9ac <ssd1306_i2c_send.constprop.0.isra.0+0x46>
	I2C1->CTLR1 |= I2C_CTLR1_START;
     a40:	0007d703          	lhu	a4,0(a5)
	timeout = TIMEOUT_MAX;
     a44:	66e1                	lui	a3,0x18
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_MODE_SELECT)) && (timeout--));
     a46:	00030637          	lui	a2,0x30
	I2C1->CTLR1 |= I2C_CTLR1_START;
     a4a:	10076713          	or	a4,a4,256
     a4e:	00e79023          	sh	a4,0(a5)
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
     a52:	40005737          	lui	a4,0x40005
	timeout = TIMEOUT_MAX;
     a56:	6a068693          	add	a3,a3,1696 # 186a0 <main.c.41c1edcd+0x15e95>
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
     a5a:	40070713          	add	a4,a4,1024 # 40005400 <__global_pointer$+0x20004c00>
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_MODE_SELECT)) && (timeout--));
     a5e:	0605                	add	a2,a2,1 # 30001 <main.c.41c1edcd+0x2d7f6>
     a60:	537d                	li	t1,-1
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
     a62:	01475283          	lhu	t0,20(a4)
     a66:	01875783          	lhu	a5,24(a4)
     a6a:	07c2                	sll	a5,a5,0x10
     a6c:	0057e7b3          	or	a5,a5,t0
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_MODE_SELECT)) && (timeout--));
     a70:	8ff1                	and	a5,a5,a2
     a72:	f8c788e3          	beq	a5,a2,a02 <ssd1306_i2c_send.constprop.0.isra.0+0x9c>
     a76:	16fd                	add	a3,a3,-1
     a78:	fe6695e3          	bne	a3,t1,a62 <ssd1306_i2c_send.constprop.0.isra.0+0xfc>
		return ssd1306_i2c_error(1);
     a7c:	4505                	li	a0,1
     a7e:	b73d                	j	9ac <ssd1306_i2c_send.constprop.0.isra.0+0x46>

00000a80 <ssd1306_cmd>:
{
     a80:	7179                	add	sp,sp,-48
	
	/* build command or data packets */
	if(cmd)
	{
		pkt[0] = 0;
		pkt[1] = *data;
     a82:	00a100a3          	sb	a0,1(sp)
	else
	{
		pkt[0] = 0x40;
		memcpy(&pkt[1], data, sz);
	}
	return ssd1306_i2c_send(SSD1306_I2C_ADDR, pkt, sz+1);
     a86:	4589                	li	a1,2
     a88:	850a                	mv	a0,sp
     a8a:	d606                	sw	ra,44(sp)
		pkt[0] = 0;
     a8c:	00010023          	sb	zero,0(sp)
	return ssd1306_i2c_send(SSD1306_I2C_ADDR, pkt, sz+1);
     a90:	3dd9                	jal	966 <ssd1306_i2c_send.constprop.0.isra.0>
}
     a92:	50b2                	lw	ra,44(sp)
     a94:	4501                	li	a0,0
     a96:	6145                	add	sp,sp,48
     a98:	8082                	ret

00000a9a <memset>:
     a9a:	962a                	add	a2,a2,a0
     a9c:	87aa                	mv	a5,a0
     a9e:	00c79363          	bne	a5,a2,aa4 <memset+0xa>
     aa2:	8082                	ret
     aa4:	00b78023          	sb	a1,0(a5)
     aa8:	0785                	add	a5,a5,1
     aaa:	bfd5                	j	a9e <memset+0x4>

00000aac <ssd1306_setbuf.constprop.0>:
	memset(ssd1306_buffer, color ? 0xFF : 0x00, sizeof(ssd1306_buffer));
     aac:	20000537          	lui	a0,0x20000
     ab0:	40000613          	li	a2,1024
     ab4:	4581                	li	a1,0
     ab6:	00050513          	mv	a0,a0
     aba:	b7c5                	j	a9a <memset>

00000abc <memcpy>:
     abc:	4781                	li	a5,0
     abe:	00f61363          	bne	a2,a5,ac4 <memcpy+0x8>
     ac2:	8082                	ret
     ac4:	00f58733          	add	a4,a1,a5
     ac8:	00074683          	lbu	a3,0(a4)
     acc:	00f50733          	add	a4,a0,a5
     ad0:	0785                	add	a5,a5,1
     ad2:	00d70023          	sb	a3,0(a4)
     ad6:	b7e5                	j	abe <memcpy+0x2>

00000ad8 <ssd1306_refresh>:
{
     ad8:	7179                	add	sp,sp,-48
	ssd1306_cmd(SSD1306_COLUMNADDR);
     ada:	02100513          	li	a0,33
{
     ade:	d606                	sw	ra,44(sp)
     ae0:	d422                	sw	s0,40(sp)
     ae2:	d226                	sw	s1,36(sp)
	ssd1306_cmd(SSD1306_COLUMNADDR);
     ae4:	3f71                	jal	a80 <ssd1306_cmd>
	ssd1306_cmd(SSD1306_OFFSET);   // Column start address (0 = reset)
     ae6:	4501                	li	a0,0
     ae8:	3f61                	jal	a80 <ssd1306_cmd>
	ssd1306_cmd(SSD1306_OFFSET+SSD1306_W-1); // Column end address (127 = reset)
     aea:	07f00513          	li	a0,127
     aee:	3f49                	jal	a80 <ssd1306_cmd>
	ssd1306_cmd(SSD1306_PAGEADDR);
     af0:	02200513          	li	a0,34
     af4:	3771                	jal	a80 <ssd1306_cmd>
	ssd1306_cmd(0); // Page start address (0 = reset)
     af6:	4501                	li	a0,0
     af8:	3761                	jal	a80 <ssd1306_cmd>
	ssd1306_cmd(7); // Page end address
     afa:	20000437          	lui	s0,0x20000
     afe:	451d                	li	a0,7
     b00:	00040413          	mv	s0,s0
     b04:	3fb5                	jal	a80 <ssd1306_cmd>
    for(i=0;i<sizeof(ssd1306_buffer);i+=SSD1306_PSZ)
     b06:	40040493          	add	s1,s0,1024 # 20000400 <_ebss>
		pkt[0] = 0x40;
     b0a:	04000793          	li	a5,64
		memcpy(&pkt[1], data, sz);
     b0e:	85a2                	mv	a1,s0
     b10:	02000613          	li	a2,32
     b14:	00110513          	add	a0,sp,1
		pkt[0] = 0x40;
     b18:	00f10023          	sb	a5,0(sp)
		memcpy(&pkt[1], data, sz);
     b1c:	3745                	jal	abc <memcpy>
	return ssd1306_i2c_send(SSD1306_I2C_ADDR, pkt, sz+1);
     b1e:	02100593          	li	a1,33
     b22:	850a                	mv	a0,sp
     b24:	02040413          	add	s0,s0,32
     b28:	3d3d                	jal	966 <ssd1306_i2c_send.constprop.0.isra.0>
     b2a:	fe9410e3          	bne	s0,s1,b0a <ssd1306_refresh+0x32>
}
     b2e:	50b2                	lw	ra,44(sp)
     b30:	5422                	lw	s0,40(sp)
     b32:	5492                	lw	s1,36(sp)
     b34:	6145                	add	sp,sp,48
     b36:	8082                	ret

00000b38 <SystemInit>:
     b38:	400227b7          	lui	a5,0x40022
     b3c:	4705                	li	a4,1
     b3e:	c398                	sw	a4,0(a5)
     b40:	400217b7          	lui	a5,0x40021
     b44:	01080737          	lui	a4,0x1080
     b48:	0007a223          	sw	zero,4(a5) # 40021004 <__global_pointer$+0x20020804>
     b4c:	08170713          	add	a4,a4,129 # 1080081 <main.c.41c1edcd+0x107d876>
     b50:	c398                	sw	a4,0(a5)
     b52:	009f0737          	lui	a4,0x9f0
     b56:	c798                	sw	a4,8(a5)
     b58:	40021737          	lui	a4,0x40021
     b5c:	431c                	lw	a5,0(a4)
     b5e:	00679693          	sll	a3,a5,0x6
     b62:	fe06dde3          	bgez	a3,b5c <SystemInit+0x24>
     b66:	435c                	lw	a5,4(a4)
     b68:	400216b7          	lui	a3,0x40021
     b6c:	9bf1                	and	a5,a5,-4
     b6e:	0027e793          	or	a5,a5,2
     b72:	c35c                	sw	a5,4(a4)
     b74:	4721                	li	a4,8
     b76:	42dc                	lw	a5,4(a3)
     b78:	8bb1                	and	a5,a5,12
     b7a:	fee79ee3          	bne	a5,a4,b76 <SystemInit+0x3e>
     b7e:	e00007b7          	lui	a5,0xe0000
     b82:	0f878793          	add	a5,a5,248 # e00000f8 <__global_pointer$+0xbffff8f8>
     b86:	0007a023          	sw	zero,0(a5)
     b8a:	e00007b7          	lui	a5,0xe0000
     b8e:	0f478793          	add	a5,a5,244 # e00000f4 <__global_pointer$+0xbffff8f4>
     b92:	08000713          	li	a4,128
     b96:	c398                	sw	a4,0(a5)
     b98:	8082                	ret

00000b9a <main>:
    ssd1306_refresh();
  }
}

int main()
{
     b9a:	7119                	add	sp,sp,-128
     b9c:	de86                	sw	ra,124(sp)
     b9e:	dca2                	sw	s0,120(sp)
     ba0:	daa6                	sw	s1,116(sp)
	// 48MHz internal clock
	SystemInit();
     ba2:	3f59                	jal	b38 <SystemInit>
    GPIO_port_enable(GPIO_port_A);
     ba4:	400214b7          	lui	s1,0x40021
     ba8:	4c9c                	lw	a5,24(s1)
    GPIO_pinMode(BZR_PIN, GPIO_pinMode_O_pushPull, GPIO_Speed_10MHz);
     baa:	f10006b7          	lui	a3,0xf1000
     bae:	16fd                	add	a3,a3,-1 # f0ffffff <__global_pointer$+0xd0fff7ff>
    GPIO_port_enable(GPIO_port_A);
     bb0:	0047e793          	or	a5,a5,4
     bb4:	cc9c                	sw	a5,24(s1)
    GPIO_port_enable(GPIO_port_D);
     bb6:	4c9c                	lw	a5,24(s1)
    GPIO_pinMode(BZR_PIN, GPIO_pinMode_O_pushPull, GPIO_Speed_10MHz);
     bb8:	40011437          	lui	s0,0x40011
    GPIO_pinMode(ROT_B_PIN, GPIO_pinMode_I_pullUp, GPIO_Speed_10MHz);
     bbc:	6605                	lui	a2,0x1
    GPIO_port_enable(GPIO_port_D);
     bbe:	0207e793          	or	a5,a5,32
     bc2:	cc9c                	sw	a5,24(s1)
    GPIO_port_enable(GPIO_port_C);
     bc4:	4c9c                	lw	a5,24(s1)
    GPIO_pinMode(ROT_B_PIN, GPIO_pinMode_I_pullUp, GPIO_Speed_10MHz);
     bc6:	80060613          	add	a2,a2,-2048 # 800 <mini_vpprintf+0x92>

  init_gpio();

	Delay_Ms( 200 );
     bca:	00125537          	lui	a0,0x125
    GPIO_port_enable(GPIO_port_C);
     bce:	0107e793          	or	a5,a5,16
     bd2:	cc9c                	sw	a5,24(s1)
    GPIO_pinMode(BZR_PIN, GPIO_pinMode_O_pushPull, GPIO_Speed_10MHz);
     bd4:	400117b7          	lui	a5,0x40011
     bd8:	40078793          	add	a5,a5,1024 # 40011400 <__global_pointer$+0x20010c00>
     bdc:	4398                	lw	a4,0(a5)
	Delay_Ms( 200 );
     bde:	f8050513          	add	a0,a0,-128 # 124f80 <main.c.41c1edcd+0x122775>
    GPIO_pinMode(BZR_PIN, GPIO_pinMode_O_pushPull, GPIO_Speed_10MHz);
     be2:	8f75                	and	a4,a4,a3
     be4:	c398                	sw	a4,0(a5)
     be6:	4398                	lw	a4,0(a5)
     be8:	010006b7          	lui	a3,0x1000
     bec:	8f55                	or	a4,a4,a3
     bee:	c398                	sw	a4,0(a5)
    GPIO_pinMode(BTN_PIN, GPIO_pinMode_I_pullUp, GPIO_Speed_10MHz);
     bf0:	4018                	lw	a4,0(s0)
     bf2:	fff106b7          	lui	a3,0xfff10
     bf6:	16fd                	add	a3,a3,-1 # fff0ffff <__global_pointer$+0xdff0f7ff>
     bf8:	8f75                	and	a4,a4,a3
     bfa:	c018                	sw	a4,0(s0)
     bfc:	4018                	lw	a4,0(s0)
     bfe:	000806b7          	lui	a3,0x80
     c02:	8f55                	or	a4,a4,a3
     c04:	c018                	sw	a4,0(s0)
     c06:	4741                	li	a4,16
     c08:	c818                	sw	a4,16(s0)
    GPIO_pinMode(ROT_A_PIN, GPIO_pinMode_I_pullUp, GPIO_Speed_10MHz);
     c0a:	4398                	lw	a4,0(a5)
     c0c:	ff1006b7          	lui	a3,0xff100
     c10:	16fd                	add	a3,a3,-1 # ff0fffff <__global_pointer$+0xdf0ff7ff>
     c12:	8f75                	and	a4,a4,a3
     c14:	c398                	sw	a4,0(a5)
     c16:	4398                	lw	a4,0(a5)
     c18:	008006b7          	lui	a3,0x800
     c1c:	8f55                	or	a4,a4,a3
     c1e:	c398                	sw	a4,0(a5)
     c20:	02000713          	li	a4,32
     c24:	cb98                	sw	a4,16(a5)
    GPIO_pinMode(ROT_B_PIN, GPIO_pinMode_I_pullUp, GPIO_Speed_10MHz);
     c26:	400117b7          	lui	a5,0x40011
     c2a:	80078793          	add	a5,a5,-2048 # 40010800 <__global_pointer$+0x20010000>
     c2e:	4394                	lw	a3,0(a5)
     c30:	777d                	lui	a4,0xfffff
     c32:	0ff70713          	add	a4,a4,255 # fffff0ff <__global_pointer$+0xdfffe8ff>
     c36:	c03a                	sw	a4,0(sp)
     c38:	8ef9                	and	a3,a3,a4
     c3a:	c394                	sw	a3,0(a5)
     c3c:	4394                	lw	a3,0(a5)
     c3e:	8ed1                	or	a3,a3,a2
     c40:	c394                	sw	a3,0(a5)
     c42:	4691                	li	a3,4
     c44:	cb94                	sw	a3,16(a5)
	Delay_Ms( 200 );
     c46:	d8eff0ef          	jal	1d4 <DelaySysTick>
 * init I2C and GPIO
 */
uint8_t ssd1306_i2c_init(void)
{
	// Enable GPIOC and I2C
	RCC->APB2PCENR |= RCC_APB2Periph_GPIOC;
     c4a:	4c9c                	lw	a5,24(s1)
	RCC->APB1PCENR |= RCC_APB1Periph_I2C1;
     c4c:	002006b7          	lui	a3,0x200
	// PC1 is SDA, 10MHz Output, alt func, open-drain
	GPIOC->CFGLR &= ~(0xf<<(4*1));
	GPIOC->CFGLR |= (GPIO_Speed_10MHz | GPIO_CNF_OUT_OD_AF)<<(4*1);
	
	// PC2 is SCL, 10MHz Output, alt func, open-drain
	GPIOC->CFGLR &= ~(0xf<<(4*2));
     c50:	4702                	lw	a4,0(sp)
	RCC->APB2PCENR |= RCC_APB2Periph_GPIOC;
     c52:	0107e793          	or	a5,a5,16
     c56:	cc9c                	sw	a5,24(s1)
	RCC->APB1PCENR |= RCC_APB1Periph_I2C1;
     c58:	4cdc                	lw	a5,28(s1)
     c5a:	8fd5                	or	a5,a5,a3
     c5c:	ccdc                	sw	a5,28(s1)
	GPIOC->CFGLR &= ~(0xf<<(4*1));
     c5e:	401c                	lw	a5,0(s0)
     c60:	f0f7f793          	and	a5,a5,-241
     c64:	c01c                	sw	a5,0(s0)
	GPIOC->CFGLR |= (GPIO_Speed_10MHz | GPIO_CNF_OUT_OD_AF)<<(4*1);
     c66:	401c                	lw	a5,0(s0)
     c68:	0d07e793          	or	a5,a5,208
     c6c:	c01c                	sw	a5,0(s0)
	GPIOC->CFGLR &= ~(0xf<<(4*2));
     c6e:	401c                	lw	a5,0(s0)
     c70:	8ff9                	and	a5,a5,a4
     c72:	c01c                	sw	a5,0(s0)
	GPIOC->CFGLR |= (GPIO_Speed_10MHz | GPIO_CNF_OUT_OD_AF)<<(4*2);
     c74:	401c                	lw	a5,0(s0)
     c76:	6705                	lui	a4,0x1
     c78:	d0070713          	add	a4,a4,-768 # d00 <main+0x166>
     c7c:	8fd9                	or	a5,a5,a4
     c7e:	c01c                	sw	a5,0(s0)
{
	// pulse reset
	ssd1306_rst();
	
	// initialize OLED
	uint8_t *cmd_list = (uint8_t *)ssd1306_init_array;
     c80:	6409                	lui	s0,0x2
	GPIOC->CFGLR |= (GPIO_Speed_10MHz | GPIO_CNF_OUT_PP)<<(4*4);
	GPIOC->BSHR = (1<<(16+4));
#endif

	// load I2C regs
	ssd1306_i2c_setup();
     c82:	e28ff0ef          	jal	2aa <ssd1306_i2c_setup>
     c86:	84840413          	add	s0,s0,-1976 # 1848 <ssd1306_init_array>
	while(*cmd_list != SSD1306_TERMINATE_CMDS)
     c8a:	00044503          	lbu	a0,0(s0)
     c8e:	0ff00793          	li	a5,255
     c92:	00f51563          	bne	a0,a5,c9c <main+0x102>
		if(ssd1306_cmd(*cmd_list++))
			return 1;
	}
	
	// clear display
	ssd1306_setbuf(0);
     c96:	3d19                	jal	aac <ssd1306_setbuf.constprop.0>
	ssd1306_refresh();
     c98:	3581                	jal	ad8 <ssd1306_refresh>
     c9a:	a021                	j	ca2 <main+0x108>
		if(ssd1306_cmd(*cmd_list++))
     c9c:	0405                	add	s0,s0,1
     c9e:	33cd                	jal	a80 <ssd1306_cmd>
     ca0:	d56d                	beqz	a0,c8a <main+0xf0>
    ssd1306_setbuf(0);
     ca2:	3529                	jal	aac <ssd1306_setbuf.constprop.0>
    ssd1306_drawImage(0, 0, movoid_title, 128, 64, 0);
     ca4:	6609                	lui	a2,0x2
     ca6:	04000713          	li	a4,64
     caa:	08000693          	li	a3,128
     cae:	86460613          	add	a2,a2,-1948 # 1864 <movoid_title>
     cb2:	4581                	li	a1,0
     cb4:	4501                	li	a0,0
     cb6:	827ff0ef          	jal	4dc <ssd1306_drawImage.constprop.0>
    ssd1306_refresh();
     cba:	3d39                	jal	ad8 <ssd1306_refresh>
	  Delay_Ms(2000);
     cbc:	00b72537          	lui	a0,0xb72
     cc0:	b0050513          	add	a0,a0,-1280 # b71b00 <main.c.41c1edcd+0xb6f2f5>
     cc4:	d10ff0ef          	jal	1d4 <DelaySysTick>
  uint8_t rot_a_pre_state = GPIO_digitalRead(ROT_A_PIN);
     cc8:	400117b7          	lui	a5,0x40011
     ccc:	40078793          	add	a5,a5,1024 # 40011400 <__global_pointer$+0x20010c00>
     cd0:	c03e                	sw	a5,0(sp)
     cd2:	4782                	lw	a5,0(sp)
  uint8_t rot_b_pre_state = GPIO_digitalRead(ROT_B_PIN);
     cd4:	40011737          	lui	a4,0x40011
  car_state_data car_s[] = {
     cd8:	6585                	lui	a1,0x1
  uint8_t rot_a_pre_state = GPIO_digitalRead(ROT_A_PIN);
     cda:	479c                	lw	a5,8(a5)
  uint8_t rot_b_pre_state = GPIO_digitalRead(ROT_B_PIN);
     cdc:	80070713          	add	a4,a4,-2048 # 40010800 <__global_pointer$+0x20010000>
  car_state_data car_s[] = {
     ce0:	04000613          	li	a2,64
  uint8_t rot_a_pre_state = GPIO_digitalRead(ROT_A_PIN);
     ce4:	8395                	srl	a5,a5,0x5
     ce6:	8b85                	and	a5,a5,1
  car_state_data car_s[] = {
     ce8:	f6858593          	add	a1,a1,-152 # f68 <main+0x3ce>
     cec:	1848                	add	a0,sp,52
  uint8_t rot_b_pre_state = GPIO_digitalRead(ROT_B_PIN);
     cee:	4704                	lw	s1,8(a4)
  uint8_t rot_a_pre_state = GPIO_digitalRead(ROT_A_PIN);
     cf0:	c63e                	sw	a5,12(sp)
  car_state_data car_s[] = {
     cf2:	33e9                	jal	abc <memcpy>
  int newt_x = 100;
     cf4:	06400793          	li	a5,100
     cf8:	c23e                	sw	a5,4(sp)
     cfa:	47b2                	lw	a5,12(sp)
  uint8_t rot_b_pre_state = GPIO_digitalRead(ROT_B_PIN);
     cfc:	8089                	srl	s1,s1,0x2
     cfe:	8885                	and	s1,s1,1
  bool flip_flag = false;
     d00:	c802                	sw	zero,16(sp)
  int flip_c = 0;
     d02:	c402                	sw	zero,8(sp)
  int newt_y = 20;
     d04:	4451                	li	s0,20
  bool button_state = false;
     d06:	ca02                	sw	zero,20(sp)
    uint8_t button_is_pressed = !GPIO_digitalRead(BTN_PIN);
     d08:	40011737          	lui	a4,0x40011
     d0c:	4718                	lw	a4,8(a4)
     d0e:	46d2                	lw	a3,20(sp)
     d10:	8b41                	and	a4,a4,16
     d12:	00173613          	seqz	a2,a4
     d16:	ca32                	sw	a2,20(sp)
    if (button_is_pressed)
     d18:	eb15                	bnez	a4,d4c <main+0x1b2>
        GPIO_digitalWrite(BZR_PIN, high);
     d1a:	4682                	lw	a3,0(sp)
     d1c:	04000713          	li	a4,64
     d20:	ca98                	sw	a4,16(a3)
    uint8_t rot_a_state = GPIO_digitalRead(ROT_A_PIN);
     d22:	4702                	lw	a4,0(sp)
     d24:	4718                	lw	a4,8(a4)
     d26:	8315                	srl	a4,a4,0x5
     d28:	8b05                	and	a4,a4,1
     d2a:	cc3a                	sw	a4,24(sp)
    uint8_t rot_b_state = GPIO_digitalRead(ROT_B_PIN);
     d2c:	40011737          	lui	a4,0x40011
     d30:	80070713          	add	a4,a4,-2048 # 40010800 <__global_pointer$+0x20010000>
     d34:	4718                	lw	a4,8(a4)
     d36:	8309                	srl	a4,a4,0x2
     d38:	8b05                	and	a4,a4,1
     d3a:	c63a                	sw	a4,12(sp)
    if (rot_a_state && rot_b_state) {
     d3c:	4762                	lw	a4,24(sp)
     d3e:	c31d                	beqz	a4,d64 <main+0x1ca>
     d40:	4732                	lw	a4,12(sp)
     d42:	c715                	beqz	a4,d6e <main+0x1d4>
      if (!rot_a_pre_state && rot_b_pre_state) {
     d44:	ef89                	bnez	a5,d5e <main+0x1c4>
     d46:	c485                	beqz	s1,d6e <main+0x1d4>
        newt_y += 4;
     d48:	0411                	add	s0,s0,4
     d4a:	a015                	j	d6e <main+0x1d4>
        GPIO_digitalWrite(BZR_PIN, low);
     d4c:	4602                	lw	a2,0(sp)
     d4e:	00400737          	lui	a4,0x400
     d52:	ca18                	sw	a4,16(a2)
    if (button_state && !button_is_pressed){
     d54:	d6f9                	beqz	a3,d22 <main+0x188>
      newt_x -= newt_step;
     d56:	4712                	lw	a4,4(sp)
     d58:	171d                	add	a4,a4,-25 # 3fffe7 <main.c.41c1edcd+0x3fd7dc>
     d5a:	c23a                	sw	a4,4(sp)
     d5c:	b7d9                	j	d22 <main+0x188>
      } else if (rot_a_pre_state && !rot_b_pre_state) {
     d5e:	e881                	bnez	s1,d6e <main+0x1d4>
        newt_y -= 4;
     d60:	1471                	add	s0,s0,-4
     d62:	a031                	j	d6e <main+0x1d4>
    if (!rot_a_state && !rot_b_state) {
     d64:	4732                	lw	a4,12(sp)
     d66:	e701                	bnez	a4,d6e <main+0x1d4>
      if (!rot_a_pre_state && rot_b_pre_state) {
     d68:	1c079663          	bnez	a5,f34 <main+0x39a>
     d6c:	f8f5                	bnez	s1,d60 <main+0x1c6>
    else if (newt_y > 40) {
     d6e:	02800793          	li	a5,40
     d72:	1c87d463          	bge	a5,s0,f3a <main+0x3a0>
     d76:	02800413          	li	s0,40
    ssd1306_setbuf(0);
     d7a:	3b0d                	jal	aac <ssd1306_setbuf.constprop.0>
    flip_c ++;
     d7c:	47a2                	lw	a5,8(sp)
     d7e:	0785                	add	a5,a5,1
     d80:	c43e                	sw	a5,8(sp)
    if (flip_c > 100) {
     d82:	4722                	lw	a4,8(sp)
     d84:	06500793          	li	a5,101
     d88:	00f71763          	bne	a4,a5,d96 <main+0x1fc>
      flip_flag = !flip_flag;
     d8c:	47c2                	lw	a5,16(sp)
      flip_c = 0;
     d8e:	c402                	sw	zero,8(sp)
      flip_flag = !flip_flag;
     d90:	0017c793          	xor	a5,a5,1
     d94:	c83e                	sw	a5,16(sp)
    if(flip_flag){
     d96:	47c2                	lw	a5,16(sp)
      ssd1306_drawImage(newt_x, newt_y, newt_left, 24, 24, 0);
     d98:	4761                	li	a4,24
     d9a:	46e1                	li	a3,24
    if(flip_flag){
     d9c:	1a078363          	beqz	a5,f42 <main+0x3a8>
      ssd1306_drawImage(newt_x, newt_y, newt_left, 24, 24, 0);
     da0:	6609                	lui	a2,0x2
     da2:	cf460613          	add	a2,a2,-780 # 1cf4 <newt_left>
      ssd1306_drawImage(newt_x, newt_y, newt_right, 24, 24, 0);
     da6:	4512                	lw	a0,4(sp)
     da8:	85a2                	mv	a1,s0
     daa:	1844                	add	s1,sp,52
     dac:	f30ff0ef          	jal	4dc <ssd1306_drawImage.constprop.0>
      if (flip_c % 25 == 0) {
     db0:	4522                	lw	a0,8(sp)
     db2:	45e5                	li	a1,25
     db4:	b5cff0ef          	jal	110 <__modsi3>
     db8:	832a                	mv	t1,a0
      ssd1306_drawImage(car_s[i].car_x, car_s[i].car_y, car, 24, 24, 0);
     dba:	6289                	lui	t0,0x2
     dbc:	4088                	lw	a0,0(s1)
     dbe:	40cc                	lw	a1,4(s1)
     dc0:	c6428613          	add	a2,t0,-924 # 1c64 <car>
     dc4:	4761                	li	a4,24
     dc6:	46e1                	li	a3,24
     dc8:	d21a                	sw	t1,36(sp)
     dca:	ce2a                	sw	a0,28(sp)
     dcc:	d02e                	sw	a1,32(sp)
     dce:	f0eff0ef          	jal	4dc <ssd1306_drawImage.constprop.0>
      if (flip_c % 25 == 0) {
     dd2:	5312                	lw	t1,36(sp)
     dd4:	4572                	lw	a0,28(sp)
     dd6:	6289                	lui	t0,0x2
     dd8:	00031a63          	bnez	t1,dec <main+0x252>
        if (car_s[i].dest) {
     ddc:	00c4c703          	lbu	a4,12(s1) # 4002100c <__global_pointer$+0x2002080c>
          car_s[i].car_y += car_s[i].car_step;
     de0:	449c                	lw	a5,8(s1)
        if (car_s[i].dest) {
     de2:	5582                	lw	a1,32(sp)
     de4:	16070363          	beqz	a4,f4a <main+0x3b0>
          car_s[i].car_y += car_s[i].car_step;
     de8:	97ae                	add	a5,a5,a1
     dea:	c0dc                	sw	a5,4(s1)
      if (car_s[i].car_y > 61) {
     dec:	40dc                	lw	a5,4(s1)
     dee:	03d00713          	li	a4,61
     df2:	14f74f63          	blt	a4,a5,f50 <main+0x3b6>
      if (car_s[i].car_y < -21) {
     df6:	572d                	li	a4,-21
     df8:	00e7d463          	bge	a5,a4,e00 <main+0x266>
        car_s[i].car_y = 61;
     dfc:	03d00793          	li	a5,61
      if (car_s[i].car_x == newt_x) {
     e00:	4712                	lw	a4,4(sp)
     e02:	c0dc                	sw	a5,4(s1)
     e04:	14a71c63          	bne	a4,a0,f5c <main+0x3c2>
          (car_s[i].car_y + 3) <= newt_y && (car_s[i].car_y + 21) >= newt_y 
     e08:	00278713          	add	a4,a5,2
        if (
     e0c:	14875463          	bge	a4,s0,f54 <main+0x3ba>
          (car_s[i].car_y + 3) <= newt_y && (car_s[i].car_y + 21) >= newt_y 
     e10:	07d5                	add	a5,a5,21
          (car_s[i].car_y + 3) <= (newt_y + 21) && (car_s[i].car_y + 21) >= (newt_y + 21)
     e12:	1487c563          	blt	a5,s0,f5c <main+0x3c2>
    ssd1306_setbuf(0);
     e16:	3959                	jal	aac <ssd1306_setbuf.constprop.0>
    ssd1306_drawstr_sz(0,16, "GAME OVER", 1, fontsize_8x8);
     e18:	6505                	lui	a0,0x1
     e1a:	fd850513          	add	a0,a0,-40 # fd8 <main+0x43e>
     e1e:	d22ff0ef          	jal	340 <ssd1306_drawstr_sz.constprop.0>
    ssd1306_refresh();
     e22:	1f400493          	li	s1,500
     e26:	394d                	jal	ad8 <ssd1306_refresh>
      GPIO_digitalWrite(BZR_PIN, high);
     e28:	4702                	lw	a4,0(sp)
     e2a:	04000793          	li	a5,64
      Delay_Ms(1);
     e2e:	6505                	lui	a0,0x1
      GPIO_digitalWrite(BZR_PIN, high);
     e30:	cb1c                	sw	a5,16(a4)
      Delay_Ms(1);
     e32:	77050513          	add	a0,a0,1904 # 1770 <fontdata+0x728>
     e36:	b9eff0ef          	jal	1d4 <DelaySysTick>
      GPIO_digitalWrite(BZR_PIN, low);
     e3a:	4702                	lw	a4,0(sp)
     e3c:	004007b7          	lui	a5,0x400
      Delay_Ms(1);
     e40:	6505                	lui	a0,0x1
      GPIO_digitalWrite(BZR_PIN, low);
     e42:	cb1c                	sw	a5,16(a4)
      Delay_Ms(1);
     e44:	77050513          	add	a0,a0,1904 # 1770 <fontdata+0x728>
    for (int i = 0; i < 500; i++) {
     e48:	14fd                	add	s1,s1,-1
      Delay_Ms(1);
     e4a:	b8aff0ef          	jal	1d4 <DelaySysTick>
    for (int i = 0; i < 500; i++) {
     e4e:	fce9                	bnez	s1,e28 <main+0x28e>
	  Delay_Ms(2000);
     e50:	00b72537          	lui	a0,0xb72
     e54:	b0050513          	add	a0,a0,-1280 # b71b00 <main.c.41c1edcd+0xb6f2f5>
     e58:	b7cff0ef          	jal	1d4 <DelaySysTick>
    if (newt_x < 0) {
     e5c:	4792                	lw	a5,4(sp)
     e5e:	0607d063          	bgez	a5,ebe <main+0x324>
    ssd1306_setbuf(0);
     e62:	31a9                	jal	aac <ssd1306_setbuf.constprop.0>
    ssd1306_drawstr_sz(0,16, "CLEAR!!", 1, fontsize_8x8);
     e64:	6505                	lui	a0,0x1
     e66:	fe450513          	add	a0,a0,-28 # fe4 <main+0x44a>
     e6a:	cd6ff0ef          	jal	340 <ssd1306_drawstr_sz.constprop.0>
    ssd1306_refresh();
     e6e:	31ad                	jal	ad8 <ssd1306_refresh>
    GPIO_digitalWrite(BZR_PIN, high);
     e70:	4702                	lw	a4,0(sp)
     e72:	04000793          	li	a5,64
    Delay_Ms(300);
     e76:	001b7537          	lui	a0,0x1b7
    GPIO_digitalWrite(BZR_PIN, high);
     e7a:	cb1c                	sw	a5,16(a4)
    Delay_Ms(300);
     e7c:	74050513          	add	a0,a0,1856 # 1b7740 <main.c.41c1edcd+0x1b4f35>
     e80:	b54ff0ef          	jal	1d4 <DelaySysTick>
    GPIO_digitalWrite(BZR_PIN, low);
     e84:	4782                	lw	a5,0(sp)
     e86:	004004b7          	lui	s1,0x400
    Delay_Ms(300);
     e8a:	001b7537          	lui	a0,0x1b7
    GPIO_digitalWrite(BZR_PIN, low);
     e8e:	cb84                	sw	s1,16(a5)
    Delay_Ms(300);
     e90:	74050513          	add	a0,a0,1856 # 1b7740 <main.c.41c1edcd+0x1b4f35>
     e94:	b40ff0ef          	jal	1d4 <DelaySysTick>
    GPIO_digitalWrite(BZR_PIN, high);
     e98:	4702                	lw	a4,0(sp)
     e9a:	04000793          	li	a5,64
    Delay_Ms(800);
     e9e:	00494537          	lui	a0,0x494
    GPIO_digitalWrite(BZR_PIN, high);
     ea2:	cb1c                	sw	a5,16(a4)
    Delay_Ms(800);
     ea4:	e0050513          	add	a0,a0,-512 # 493e00 <main.c.41c1edcd+0x4915f5>
     ea8:	b2cff0ef          	jal	1d4 <DelaySysTick>
    GPIO_digitalWrite(BZR_PIN, low);
     eac:	4782                	lw	a5,0(sp)
	  Delay_Ms(2000);
     eae:	00b72537          	lui	a0,0xb72
     eb2:	b0050513          	add	a0,a0,-1280 # b71b00 <main.c.41c1edcd+0xb6f2f5>
    GPIO_digitalWrite(BZR_PIN, low);
     eb6:	cb84                	sw	s1,16(a5)
	  Delay_Ms(2000);
     eb8:	b1cff0ef          	jal	1d4 <DelaySysTick>
      run_flag = false;
     ebc:	4481                	li	s1,0
    int dot_line[] = {85,60,35};
     ebe:	05500793          	li	a5,85
     ec2:	d43e                	sw	a5,40(sp)
     ec4:	03c00793          	li	a5,60
     ec8:	d63e                	sw	a5,44(sp)
      ssd1306_drawLine(road_line[i], 0, road_line[i], SSD1306_H, 1);
     eca:	04000693          	li	a3,64
    int dot_line[] = {85,60,35};
     ece:	02300793          	li	a5,35
      ssd1306_drawLine(road_line[i], 0, road_line[i], SSD1306_H, 1);
     ed2:	06900613          	li	a2,105
     ed6:	4581                	li	a1,0
     ed8:	06900513          	li	a0,105
    int dot_line[] = {85,60,35};
     edc:	d83e                	sw	a5,48(sp)
      ssd1306_drawLine(road_line[i], 0, road_line[i], SSD1306_H, 1);
     ede:	cecff0ef          	jal	3ca <ssd1306_drawLine.constprop.0>
     ee2:	04000693          	li	a3,64
     ee6:	4629                	li	a2,10
     ee8:	4581                	li	a1,0
     eea:	4529                	li	a0,10
     eec:	cdeff0ef          	jal	3ca <ssd1306_drawLine.constprop.0>
    for (int i = 0; i < 3; i++) {
     ef0:	1038                	add	a4,sp,40
      for (int j = 0; j < SSD1306_H; j+=10) {
     ef2:	4781                	li	a5,0
        ssd1306_drawLine(dot_line[i], j, dot_line[i], j+7, 1);
     ef4:	01079593          	sll	a1,a5,0x10
     ef8:	00075603          	lhu	a2,0(a4)
     efc:	81c1                	srl	a1,a1,0x10
     efe:	00758693          	add	a3,a1,7
     f02:	06c2                	sll	a3,a3,0x10
     f04:	82c1                	srl	a3,a3,0x10
     f06:	8532                	mv	a0,a2
     f08:	d03a                	sw	a4,32(sp)
     f0a:	ce3e                	sw	a5,28(sp)
     f0c:	cbeff0ef          	jal	3ca <ssd1306_drawLine.constprop.0>
      for (int j = 0; j < SSD1306_H; j+=10) {
     f10:	47f2                	lw	a5,28(sp)
     f12:	04600693          	li	a3,70
     f16:	5702                	lw	a4,32(sp)
     f18:	07a9                	add	a5,a5,10 # 40000a <main.c.41c1edcd+0x3fd7ff>
     f1a:	03410313          	add	t1,sp,52
     f1e:	fcd79be3          	bne	a5,a3,ef4 <main+0x35a>
    for (int i = 0; i < 3; i++) {
     f22:	0711                	add	a4,a4,4
     f24:	fc6717e3          	bne	a4,t1,ef2 <main+0x358>
    ssd1306_refresh();
     f28:	3e45                	jal	ad8 <ssd1306_refresh>
  while (run_flag) {
     f2a:	da0484e3          	beqz	s1,cd2 <main+0x138>
     f2e:	44b2                	lw	s1,12(sp)
     f30:	47e2                	lw	a5,24(sp)
     f32:	bbd9                	j	d08 <main+0x16e>
      } else if (rot_a_pre_state && !rot_b_pre_state) {
     f34:	e2049de3          	bnez	s1,d6e <main+0x1d4>
     f38:	bd01                	j	d48 <main+0x1ae>
     f3a:	e40450e3          	bgez	s0,d7a <main+0x1e0>
     f3e:	4401                	li	s0,0
     f40:	bd2d                	j	d7a <main+0x1e0>
      ssd1306_drawImage(newt_x, newt_y, newt_right, 24, 24, 0);
     f42:	6609                	lui	a2,0x2
     f44:	cac60613          	add	a2,a2,-852 # 1cac <newt_right>
     f48:	bdb9                	j	da6 <main+0x20c>
          car_s[i].car_y -= car_s[i].car_step;
     f4a:	8d9d                	sub	a1,a1,a5
     f4c:	c0cc                	sw	a1,4(s1)
     f4e:	bd79                	j	dec <main+0x252>
        car_s[i].car_y = 61;
     f50:	57ad                	li	a5,-21
     f52:	b57d                	j	e00 <main+0x266>
          (car_s[i].car_y + 3) <= (newt_y + 21) && (car_s[i].car_y + 21) >= (newt_y + 21)
     f54:	01240713          	add	a4,s0,18
          ||
     f58:	eaf75de3          	bge	a4,a5,e12 <main+0x278>
    for (int i = 0; i < 4; i++){
     f5c:	04c1                	add	s1,s1,16 # 400010 <main.c.41c1edcd+0x3fd805>
     f5e:	18dc                	add	a5,sp,116
     f60:	e4979ee3          	bne	a5,s1,dbc <main+0x222>
     f64:	4485                	li	s1,1
     f66:	bddd                	j	e5c <main+0x2c2>
     f68:	0000004b          	.insn	4, 0x004b
     f6c:	000a                	c.slli	zero,0x2
     f6e:	0000                	unimp
     f70:	0002                	c.slli64	zero
     f72:	0000                	unimp
     f74:	0001                	nop
     f76:	0000                	unimp
     f78:	0032                	c.slli	zero,0xc
     f7a:	0000                	unimp
     f7c:	0032                	c.slli	zero,0xc
     f7e:	0000                	unimp
     f80:	0002                	c.slli64	zero
     f82:	0000                	unimp
     f84:	0000                	unimp
     f86:	0000                	unimp
     f88:	0019                	c.nop	6
     f8a:	0000                	unimp
     f8c:	0014                	.insn	2, 0x0014
     f8e:	0000                	unimp
     f90:	0004                	.insn	2, 0x0004
     f92:	0000                	unimp
     f94:	0001                	nop
     f96:	0000                	unimp
     f98:	0000                	unimp
     f9a:	0000                	unimp
     f9c:	000a                	c.slli	zero,0x2
     f9e:	0000                	unimp
     fa0:	0002                	c.slli64	zero
     fa2:	0000                	unimp
     fa4:	0000                	unimp
     fa6:	0000                	unimp
     fa8:	31647373          	csrrc	t1,0x316,8
     fac:	5f363033          	.insn	4, 0x5f363033
     fb0:	3269                	jal	93a <printf+0x18>
     fb2:	72655f63          	bge	a0,t1,16f0 <fontdata+0x6a8>
     fb6:	6f72                	.insn	2, 0x6f72
     fb8:	2072                	.insn	2, 0x2072
     fba:	202d                	jal	fe4 <main+0x44a>
     fbc:	6974                	.insn	2, 0x6974
     fbe:	656d                	lui	a0,0x1b
     fc0:	2074756f          	jal	a0,489c6 <main.c.41c1edcd+0x461bb>
     fc4:	74696177          	.insn	4, 0x74696177
     fc8:	6e69                	lui	t3,0x1a
     fca:	6f662067          	.insn	4, 0x6f662067
     fce:	2072                	.insn	2, 0x2072
     fd0:	7325                	lui	t1,0xfffe9
     fd2:	0d0a                	sll	s10,s10,0x2
     fd4:	0000                	unimp
     fd6:	0000                	unimp
     fd8:	454d4147          	.insn	4, 0x454d4147
     fdc:	4f20                	lw	s0,88(a4)
     fde:	4556                	lw	a0,84(sp)
     fe0:	0052                	c.slli	zero,0x14
     fe2:	0000                	unimp
     fe4:	41454c43          	.insn	4, 0x41454c43
     fe8:	2152                	.insn	2, 0x2152
     fea:	0021                	c.nop	8
     fec:	6f6e                	.insn	2, 0x6f6e
     fee:	2074                	.insn	2, 0x2074
     ff0:	7562                	.insn	2, 0x7562
     ff2:	00007973          	csrrc	s2,ustatus,0
     ff6:	0000                	unimp
     ff8:	616d                	add	sp,sp,240
     ffa:	72657473          	csrrc	s0,mhpmevent6h,10
     ffe:	6d20                	.insn	2, 0x6d20
    1000:	0065646f          	jal	s0,57006 <main.c.41c1edcd+0x547fb>
    1004:	7274                	.insn	2, 0x7274
    1006:	6e61                	lui	t3,0x18
    1008:	74696d73          	csrrs	s10,0x746,18
    100c:	6d20                	.insn	2, 0x6d20
    100e:	0065646f          	jal	s0,57014 <main.c.41c1edcd+0x54809>
    1012:	0000                	unimp
    1014:	7874                	.insn	2, 0x7874
    1016:	6520                	.insn	2, 0x6520
    1018:	706d                	c.lui	zero,0xffffb
    101a:	7974                	.insn	2, 0x7974
    101c:	0000                	unimp
    101e:	0000                	unimp
    1020:	7274                	.insn	2, 0x7274
    1022:	6e61                	lui	t3,0x18
    1024:	74696d73          	csrrs	s10,0x746,18
    1028:	6320                	.insn	2, 0x6320
    102a:	6c706d6f          	jal	s10,7ef0 <main.c.41c1edcd+0x56e5>
    102e:	7465                	lui	s0,0xffff9
    1030:	0065                	c.nop	25
	...

00001034 <errstr>:
    1034:	0fec 0000 0ff8 0000 1004 0000 1014 0000     ................
    1044:	1020 0000                                    ...

00001048 <fontdata>:
	...
    1050:	817e 81a5 99bd 7e81 ff7e ffdb e7c3 7eff     ~......~~......~
    1060:	fe6c fefe 387c 0010 3810 fe7c 387c 0010     l...|8...8|.|8..
    1070:	7c38 fe38 d6fe 3810 3810 fe7c 7cfe 3810     8|8....8.8|..|.8
    1080:	0000 3c18 183c 0000 ffff c3e7 e7c3 ffff     ...<<...........
    1090:	3c00 4266 6642 003c c3ff bd99 99bd ffc3     .<fBBf<.........
    10a0:	070f 7d0f cccc 78cc 663c 6666 183c 187e     ...}...x<fff<.~.
    10b0:	333f 303f 7030 e0f0 637f 637f 6763 c0e6     ?3?00p...c.ccg..
    10c0:	db18 e73c 3ce7 18db e080 fef8 e0f8 0080     ..<..<..........
    10d0:	0e02 fe3e 0e3e 0002 3c18 187e 7e18 183c     ..>.>....<~..~<.
    10e0:	6666 6666 0066 0066 db7f 7bdb 1b1b 001b     fffff.f....{....
    10f0:	613e 663c 3c66 7c86 0000 0000 7e7e 007e     >a<ff<.|....~~~.
    1100:	3c18 187e 3c7e ff18 3c18 187e 1818 0018     .<~.~<...<~.....
    1110:	1818 1818 3c7e 0018 1800 fe0c 180c 0000     ....~<..........
    1120:	3000 fe60 3060 0000 0000 c0c0 fec0 0000     .0`.`0..........
    1130:	2400 ff66 2466 0000 1800 7e3c ffff 0000     .$f.f$....<~....
    1140:	ff00 7eff 183c 0000 0000 0000 0000 0000     ...~<...........
    1150:	3c18 183c 0018 0018 6666 0024 0000 0000     .<<.....ff$.....
    1160:	6c6c 6cfe 6cfe 006c 3e18 3c60 7c06 0018     ll.l.ll..>`<.|..
    1170:	c600 18cc 6630 00c6 6c38 7638 ccdc 0076     ....0f..8l8v..v.
    1180:	1818 0030 0000 0000 180c 3030 1830 000c     ..0.......000...
    1190:	1830 0c0c 180c 0030 6600 ff3c 663c 0000     0.....0..f<.<f..
    11a0:	1800 7e18 1818 0000 0000 0000 1800 3018     ...~...........0
    11b0:	0000 7e00 0000 0000 0000 0000 1800 0018     ...~............
    11c0:	0c06 3018 c060 0080 6c38 d6c6 6cc6 0038     ...0`...8l...l8.
    11d0:	3818 1818 1818 007e c67c 1c06 6630 00fe     .8....~.|...0f..
    11e0:	c67c 3c06 c606 007c 3c1c cc6c 0cfe 001e     |..<..|..<l.....
    11f0:	c0fe fcc0 c606 007c 6038 fcc0 c6c6 007c     ......|.8`....|.
    1200:	c6fe 180c 3030 0030 c67c 7cc6 c6c6 007c     ....000.|..|..|.
    1210:	c67c 7ec6 0c06 0078 1800 0018 1800 0018     |..~..x.........
    1220:	1800 0018 1800 3018 0c06 3018 0c18 0006     .......0...0....
    1230:	0000 007e 7e00 0000 3060 0c18 3018 0060     ..~..~..`0...0`.
    1240:	c67c 180c 0018 0018 c67c dede c0de 0078     |.......|.....x.
    1250:	6c38 fec6 c6c6 00c6 66fc 7c66 6666 00fc     8l.......ff|ff..
    1260:	663c c0c0 66c0 003c 6cf8 6666 6c66 00f8     <f...f<..lfffl..
    1270:	62fe 7868 6268 00fe 62fe 7868 6068 00f0     .bhxhb...bhxh`..
    1280:	663c c0c0 66ce 003a c6c6 fec6 c6c6 00c6     <f...f:.........
    1290:	183c 1818 1818 003c 0c1e 0c0c cccc 0078     <.....<.......x.
    12a0:	66e6 786c 666c 00e6 60f0 6060 6662 00fe     .flxlf...```bf..
    12b0:	eec6 fefe c6d6 00c6 e6c6 def6 c6ce 00c6     ................
    12c0:	c67c c6c6 c6c6 007c 66fc 7c66 6060 00f0     |.....|..ff|``..
    12d0:	c67c c6c6 cec6 0e7c 66fc 7c66 666c 00e6     |.....|..ff|lf..
    12e0:	663c 1830 660c 003c 7e7e 185a 1818 003c     <f0..f<.~~Z...<.
    12f0:	c6c6 c6c6 c6c6 007c c6c6 c6c6 6cc6 0038     ......|......l8.
    1300:	c6c6 d6c6 fed6 006c c6c6 386c c66c 00c6     ......l...l8l...
    1310:	6666 3c66 1818 003c c6fe 188c 6632 00fe     fff<..<.....2f..
    1320:	303c 3030 3030 003c 60c0 1830 060c 0002     <00000<..`0.....
    1330:	0c3c 0c0c 0c0c 003c 3810 c66c 0000 0000     <.....<..8l.....
    1340:	0000 0000 0000 ff00 1830 000c 0000 0000     ........0.......
    1350:	0000 0c78 cc7c 0076 60e0 667c 6666 00dc     ..x.|.v..`|fff..
    1360:	0000 c67c c6c0 007c 0c1c cc7c cccc 0076     ..|...|...|...v.
    1370:	0000 c67c c0fe 007c 663c f860 6060 00f0     ..|...|.<f`.``..
    1380:	0000 cc76 7ccc f80c 60e0 766c 6666 00e6     ..v..|...`lvff..
    1390:	0018 1838 1818 003c 0006 0606 6606 3c66     ..8...<......ff<
    13a0:	60e0 6c66 6c78 00e6 1838 1818 1818 003c     .`flxl..8.....<.
    13b0:	0000 feec d6d6 00d6 0000 66dc 6666 0066     ...........ffff.
    13c0:	0000 c67c c6c6 007c 0000 66dc 7c66 f060     ..|...|....ff|`.
    13d0:	0000 cc76 7ccc 1e0c 0000 76dc 6060 00f0     ..v..|.....v``..
    13e0:	0000 c07e 067c 00fc 3030 30fc 3630 001c     ..~.|...00.006..
    13f0:	0000 cccc cccc 0076 0000 c6c6 6cc6 0038     ......v......l8.
    1400:	0000 d6c6 fed6 006c 0000 6cc6 6c38 00c6     ......l....l8l..
    1410:	0000 c6c6 7ec6 fc06 0000 4c7e 3218 007e     .....~....~L.2~.
    1420:	180e 7018 1818 000e 1818 1818 1818 0018     ...p............
    1430:	1870 0e18 1818 0070 dc76 0000 0000 0000     p.....p.v.......
    1440:	1000 6c38 c6c6 00fe c67c c0c0 7cc6 780c     ..8l....|....|.x
    1450:	00cc cccc cccc 0076 180c c67c c0fe 007c     ......v...|...|.
    1460:	827c 0c78 cc7c 0076 00c6 0c78 cc7c 0076     |.x.|.v...x.|.v.
    1470:	1830 0c78 cc7c 0076 3030 0c78 cc7c 0076     0.x.|.v.00x.|.v.
    1480:	0000 c07e 7ec0 380c 827c c67c c0fe 007c     ..~..~.8|.|...|.
    1490:	00c6 c67c c0fe 007c 1830 c67c c0fe 007c     ..|...|.0.|...|.
    14a0:	0066 1838 1818 003c 827c 1838 1818 003c     f.8...<.|.8...<.
    14b0:	1830 3800 1818 003c 38c6 c66c c6fe 00c6     0..8..<..8l.....
    14c0:	6c38 c67c c6fe 00c6 3018 c0fe c0f8 00fe     8l|......0......
    14d0:	0000 187e d87e 007e 6c3e fecc cccc 00ce     ..~.~.~.>l......
    14e0:	827c c67c c6c6 007c 00c6 c67c c6c6 007c     |.|...|...|...|.
    14f0:	1830 c67c c6c6 007c 8478 cc00 cccc 0076     0.|...|.x.....v.
    1500:	3060 cccc cccc 0076 00c6 c6c6 7ec6 fc06     `0....v......~..
    1510:	38c6 c66c 6cc6 0038 00c6 c6c6 c6c6 007c     .8l..l8.......|.
    1520:	1818 c07e 7ec0 1818 6c38 f064 6660 00fc     ..~..~..8ld.`f..
    1530:	6666 7e3c 7e18 1818 ccf8 facc cfc6 c7c6     ff<~.~..........
    1540:	1b0e 3c18 d818 0070 3018 0c78 cc7c 0076     ...<..p..0x.|.v.
    1550:	180c 3800 1818 003c 180c c67c c6c6 007c     ...8..<...|...|.
    1560:	3018 cccc cccc 0076 dc76 dc00 6666 0066     .0....v.v...fff.
    1570:	dc76 e600 def6 00ce 6c3c 3e6c 7e00 0000     v.......<ll>.~..
    1580:	6c38 386c 7c00 0000 0018 1818 6330 003e     8ll8.|......0c>.
    1590:	0000 fe00 c0c0 0000 0000 fe00 0606 0000     ................
    15a0:	e663 7e6c 6633 0fcc e663 7a6c 6a36 06df     c.l~3f..c.lz6j..
    15b0:	0018 1818 3c3c 0018 3300 cc66 3366 0000     ....<<...3f.f3..
    15c0:	cc00 3366 cc66 0000 8822 8822 8822 8822     ..f3f...".".".".
    15d0:	aa55 aa55 aa55 aa55 dd77 dd77 dd77 dd77     U.U.U.U.w.w.w.w.
    15e0:	1818 1818 1818 1818 1818 1818 18f8 1818     ................
    15f0:	1818 18f8 18f8 1818 3636 3636 36f6 3636     ........6666.666
    1600:	0000 0000 36fe 3636 0000 18f8 18f8 1818     .....666........
    1610:	3636 06f6 36f6 3636 3636 3636 3636 3636     66...66666666666
    1620:	0000 06fe 36f6 3636 3636 06f6 00fe 0000     .....66666......
    1630:	3636 3636 00fe 0000 1818 18f8 00f8 0000     6666............
    1640:	0000 0000 18f8 1818 1818 1818 001f 0000     ................
    1650:	1818 1818 00ff 0000 0000 0000 18ff 1818     ................
    1660:	1818 1818 181f 1818 0000 0000 00ff 0000     ................
    1670:	1818 1818 18ff 1818 1818 181f 181f 1818     ................
    1680:	3636 3636 3637 3636 3636 3037 003f 0000     666676666670?...
    1690:	0000 303f 3637 3636 3636 00f7 00ff 0000     ..?0766666......
    16a0:	0000 00ff 36f7 3636 3636 3037 3637 3636     .....66666707666
    16b0:	0000 00ff 00ff 0000 3636 00f7 36f7 3636     ........66...666
    16c0:	1818 00ff 00ff 0000 3636 3636 00ff 0000     ........6666....
    16d0:	0000 00ff 18ff 1818 0000 0000 36ff 3636     .............666
    16e0:	3636 3636 003f 0000 1818 181f 001f 0000     6666?...........
    16f0:	0000 181f 181f 1818 0000 0000 363f 3636     ............?666
    1700:	3636 3636 36ff 3636 1818 18ff 18ff 1818     6666.666........
    1710:	1818 1818 00f8 0000 0000 0000 181f 1818     ................
    1720:	ffff ffff ffff ffff 0000 0000 ffff ffff     ................
    1730:	f0f0 f0f0 f0f0 f0f0 0f0f 0f0f 0f0f 0f0f     ................
    1740:	ffff ffff 0000 0000 0000 dc76 dcc8 0076     ..........v...v.
    1750:	cc78 d8cc c6cc 00cc c6fe c0c0 c0c0 00c0     x...............
    1760:	0000 6cfe 6c6c 006c c6fe 3060 c660 00fe     ...llll...`0`...
    1770:	0000 d87e d8d8 0070 0000 6666 6666 c07c     ..~...p...ffff|.
    1780:	7600 18dc 1818 0018 187e 663c 3c66 7e18     .v......~.<ff<.~
    1790:	6c38 fec6 6cc6 0038 6c38 c6c6 6c6c 00ee     8l...l8.8l..ll..
    17a0:	180e 3e0c 6666 003c 0000 db7e 7edb 0000     ...>ff<...~..~..
    17b0:	0c06 db7e 7edb c060 301e 7e60 3060 001e     ..~..~`..0`~`0..
    17c0:	7c00 c6c6 c6c6 00c6 fe00 fe00 fe00 0000     .|..............
    17d0:	1818 187e 0018 007e 1830 180c 0030 007e     ..~...~.0...0.~.
    17e0:	180c 1830 000c 007e 1b0e 181b 1818 1818     ..0...~.........
    17f0:	1818 1818 d818 70d8 1800 7e00 1800 0000     .......p...~....
    1800:	7600 00dc dc76 0000 6c38 386c 0000 0000     .v..v...8ll8....
    1810:	0000 1800 0018 0000 0000 1800 0000 0000     ................
    1820:	0c0f 0c0c 6cec 1c3c 366c 3636 0036 0000     .....l<.l6666...
    1830:	0c78 3018 007c 0000 0000 3c3c 3c3c 0000     x..0|.....<<<<..
	...

00001848 <ssd1306_init_array>:
    1848:	d5ae a880 d33f 4000 148d 0020 c8a1 12da     ....?..@.. .....
    1858:	8f81 f1d9 40db a6a4 ffaf 0000               .....@......

00001864 <movoid_title>:
    1864:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
    1874:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
    1884:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
    1894:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
    18a4:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
    18b4:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
    18c4:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
    18d4:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
    18e4:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
    18f4:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
    1904:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
    1914:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
    1924:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
    1934:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
    1944:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
    1954:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
    1964:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
    1974:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
    1984:	f8ff ff7f ffff ffff ffff ffff ffff ffff     ................
    1994:	f8ff ff7f ffff ffff ffff ffff ffff ffff     ................
    19a4:	f8ff ff3f ffff ffff ffff ffff ffff ffff     ..?.............
    19b4:	f8ff fe3f ff0f ffff ffff f0ff e0ff ffff     ..?.............
    19c4:	f8ff fe3f ff0f ffff ffff f0ff e07f ffff     ..?.............
    19d4:	fcff fe3f ff0f ffff ffff f0ff c03f ffff     ..?.........?...
    19e4:	fcff fe3f ff0f ffff ffff f0ff c03f ffff     ..?.........?...
    19f4:	fcff ff3f ffff ffff ffff f0ff c01f ffff     ..?.............
    1a04:	fcff ff3f ffff ffff ffff f0ff 901f ffff     ..?.............
    1a14:	fcff ff3f ffff ffff ffff f0ff 904f ffff     ..?.........O...
    1a24:	fcff 0f00 800f 8003 60f0 f800 904f ffff     .........`..O...
    1a34:	fcff 0f1e 8707 83c3 60f0 78f0 3067 ff7f     .........`.xg0..
    1a44:	fcff 0f1f 8707 c3c3 e0f0 78f0 3067 ff7f     ...........xg0..
    1a54:	feff 0f1f 8787 c1c3 e0f0 78f8 3073 ff7f     ...........xs0..
    1a64:	feff 0f1f 8387 c1c1 f0f0 78f8 707b ff7f     ...........x{p..
    1a74:	feff 0f1f 8387 e1c1 f0f0 78f8 7838 ff7f     ...........x8x..
    1a84:	feff 071f 8387 e0e1 f0f0 78f8 783c ff7f     ...........x<x..
    1a94:	feff 071f c387 f0e1 f0f0 78f8 f83c ff7f     ...........x<...
    1aa4:	feff 071f c387 f0e1 f0e0 78f8 f83f ff7f     ...........x?...
    1ab4:	feff 870f c383 f0e1 f060 38f8 f83f ff3f     ........`..8?.?.
    1ac4:	feff 870f c383 f8e1 f061 3c78 f83f ff3f     ........a.x<?.?.
    1ad4:	feff 870f c3c3 f8e1 f061 3c7c f83f ff3f     ........a.|<?.?.
    1ae4:	ffff 870f c3c3 f8e0 f821 3c7c f83f ff3f     ........!.|<?.?.
    1af4:	ffff 870f c1c3 fce0 f821 3c7c f81f ff3f     ........!.|<..?.
    1b04:	ffff 0300 c0c3 fc00 f801 3c00 fc1f ff3f     ...........<..?.
    1b14:	ffff 0700 e0c3 fe00 f803 3c00 fc3f ff3f     ...........<?.?.
    1b24:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
    1b34:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
    1b44:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
    1b54:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
    1b64:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
    1b74:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
    1b84:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
    1b94:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
    1ba4:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
    1bb4:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
    1bc4:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
    1bd4:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
    1be4:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
    1bf4:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
    1c04:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
    1c14:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
    1c24:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
    1c34:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
    1c44:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
    1c54:	ffff ffff ffff ffff ffff ffff ffff ffff     ................

00001c64 <car>:
	...
    1c6c:	0000 007c 7c00 0000 007c ff03 03c0 c0ff     ..|..|..|.......
    1c7c:	ff03 00c0 c07f 7f00 00c0 c07f 7c00 0040     .............|@.
    1c8c:	407c 7c00 0340 40fc ff03 03c0 00fc 7c00     |@.|@..@.......|
    1c9c:	0000 0074 7c00 0000 0000 0000 0000 0000     ..t..|..........

00001cac <newt_right>:
    1cac:	0000 0000 0000 f00f 0f00 00f0 3c3c 3c00     ............<<.<
    1cbc:	003c 00f0 f0c0 c000 03f3 f30f 0f03 c3fc     <...............
    1ccc:	fc3f 3fc3 ff3f 3fff ffff ff00 00f0 f0ff     ?..??..?........
    1cdc:	c003 033c 3cc0 0000 0000 0000 0000 0000     ..<..<..........
	...

00001cf4 <newt_left>:
	...
    1d04:	0000 c003 033c 3cc0 ff00 00f0 f0ff ff3f     ....<..<......?.
    1d14:	3fff ffff c3fc fc3f 3fc3 03f3 f30f 0f03     .?....?..?......
    1d24:	00f0 f0c0 c000 3c3c 3c00 003c f00f 0f00     ......<<.<<.....
    1d34:	00f0 0000 0000 0000                         ........
