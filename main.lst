
main.elf:     file format elf32-littleriscv


Disassembly of section .init:

00000000 <InterruptVector>:
   0:	5e40006f          	j	5e4 <handle_reset>
   4:	00000000          	.word	0x00000000
   8:	0000065a          	.word	0x0000065a
   c:	00000658          	.word	0x00000658
	...
  30:	00000658          	.word	0x00000658
  34:	00000000          	.word	0x00000000
  38:	00000658          	.word	0x00000658
  3c:	00000000          	.word	0x00000000
  40:	00000658          	.word	0x00000658
  44:	00000658          	.word	0x00000658
  48:	00000658          	.word	0x00000658
  4c:	00000658          	.word	0x00000658
  50:	00000658          	.word	0x00000658
  54:	00000658          	.word	0x00000658
  58:	00000658          	.word	0x00000658
  5c:	00000658          	.word	0x00000658
  60:	00000658          	.word	0x00000658
  64:	00000658          	.word	0x00000658
  68:	00000658          	.word	0x00000658
  6c:	00000658          	.word	0x00000658
  70:	00000658          	.word	0x00000658
  74:	00000658          	.word	0x00000658
  78:	00000658          	.word	0x00000658
  7c:	00000658          	.word	0x00000658
  80:	00000658          	.word	0x00000658
  84:	00000658          	.word	0x00000658
  88:	00000658          	.word	0x00000658
  8c:	00000658          	.word	0x00000658
  90:	00000658          	.word	0x00000658
  94:	00000658          	.word	0x00000658
  98:	00000658          	.word	0x00000658
  9c:	0000                	unimp
	...

Disassembly of section .text:

000000a0 <__mulsi3>:
      a0:	862a                	mv	a2,a0
      a2:	4501                	li	a0,0
      a4:	0015f693          	andi	a3,a1,1
      a8:	c291                	beqz	a3,ac <__mulsi3+0xc>
      aa:	9532                	add	a0,a0,a2
      ac:	8185                	srli	a1,a1,0x1
      ae:	0606                	slli	a2,a2,0x1
      b0:	f9f5                	bnez	a1,a4 <__mulsi3+0x4>
      b2:	8082                	ret
      b4:	0000                	unimp
	...

000000b8 <__divsi3>:
      b8:	02054e63          	bltz	a0,f4 <__umodsi3+0x8>
      bc:	0405c363          	bltz	a1,102 <__umodsi3+0x16>

000000c0 <__hidden___udivsi3>:
      c0:	862e                	mv	a2,a1
      c2:	85aa                	mv	a1,a0
      c4:	557d                	li	a0,-1
      c6:	c215                	beqz	a2,ea <__hidden___udivsi3+0x2a>
      c8:	4685                	li	a3,1
      ca:	00b67863          	bgeu	a2,a1,da <__hidden___udivsi3+0x1a>
      ce:	00c05663          	blez	a2,da <__hidden___udivsi3+0x1a>
      d2:	0606                	slli	a2,a2,0x1
      d4:	0686                	slli	a3,a3,0x1
      d6:	feb66ce3          	bltu	a2,a1,ce <__hidden___udivsi3+0xe>
      da:	4501                	li	a0,0
      dc:	00c5e463          	bltu	a1,a2,e4 <__hidden___udivsi3+0x24>
      e0:	8d91                	sub	a1,a1,a2
      e2:	8d55                	or	a0,a0,a3
      e4:	8285                	srli	a3,a3,0x1
      e6:	8205                	srli	a2,a2,0x1
      e8:	faf5                	bnez	a3,dc <__hidden___udivsi3+0x1c>
      ea:	8082                	ret

000000ec <__umodsi3>:
      ec:	8286                	mv	t0,ra
      ee:	3fc9                	jal	c0 <__hidden___udivsi3>
      f0:	852e                	mv	a0,a1
      f2:	8282                	jr	t0
      f4:	40a00533          	neg	a0,a0
      f8:	00b04763          	bgtz	a1,106 <__umodsi3+0x1a>
      fc:	40b005b3          	neg	a1,a1
     100:	b7c1                	j	c0 <__hidden___udivsi3>
     102:	40b005b3          	neg	a1,a1
     106:	8286                	mv	t0,ra
     108:	3f65                	jal	c0 <__hidden___udivsi3>
     10a:	40a00533          	neg	a0,a0
     10e:	8282                	jr	t0

00000110 <__modsi3>:
     110:	8286                	mv	t0,ra
     112:	0005c763          	bltz	a1,120 <__modsi3+0x10>
     116:	00054963          	bltz	a0,128 <__modsi3+0x18>
     11a:	375d                	jal	c0 <__hidden___udivsi3>
     11c:	852e                	mv	a0,a1
     11e:	8282                	jr	t0
     120:	40b005b3          	neg	a1,a1
     124:	fe055be3          	bgez	a0,11a <__modsi3+0xa>
     128:	40a00533          	neg	a0,a0
     12c:	3f51                	jal	c0 <__hidden___udivsi3>
     12e:	40b00533          	neg	a0,a1
     132:	8282                	jr	t0
	...

00000136 <_puts>:
     136:	832a                	mv	t1,a0
     138:	852e                	mv	a0,a1
     13a:	ce01                	beqz	a2,152 <_puts+0x1c>
     13c:	00062283          	lw	t0,0(a2)
     140:	4701                	li	a4,0
     142:	425c                	lw	a5,4(a2)
     144:	00a74863          	blt	a4,a0,154 <_puts+0x1e>
     148:	00078023          	sb	zero,0(a5)
     14c:	4248                	lw	a0,4(a2)
     14e:	40550533          	sub	a0,a0,t0
     152:	8082                	ret
     154:	460c                	lw	a1,8(a2)
     156:	4214                	lw	a3,0(a2)
     158:	15fd                	addi	a1,a1,-1
     15a:	96ae                	add	a3,a3,a1
     15c:	fed786e3          	beq	a5,a3,148 <_puts+0x12>
     160:	00178693          	addi	a3,a5,1
     164:	c254                	sw	a3,4(a2)
     166:	00e306b3          	add	a3,t1,a4
     16a:	0006c683          	lbu	a3,0(a3)
     16e:	0705                	addi	a4,a4,1
     170:	00d78023          	sb	a3,0(a5)
     174:	b7f9                	j	142 <_puts+0xc>

00000176 <mini_pad>:
     176:	c699                	beqz	a3,184 <mini_pad+0xe>
     178:	4301                	li	t1,0
     17a:	00b6d763          	bge	a3,a1,188 <mini_pad+0x12>
     17e:	85b6                	mv	a1,a3
     180:	4305                	li	t1,1
     182:	a019                	j	188 <mini_pad+0x12>
     184:	4301                	li	t1,0
     186:	86ae                	mv	a3,a1
     188:	8e8d                	sub	a3,a3,a1
     18a:	87ba                	mv	a5,a4
     18c:	00e683b3          	add	t2,a3,a4
     190:	40f382b3          	sub	t0,t2,a5
     194:	04504a63          	bgtz	t0,1e8 <mini_pad+0x72>
     198:	fff6c793          	not	a5,a3
     19c:	87fd                	srai	a5,a5,0x1f
     19e:	8efd                	and	a3,a3,a5
     1a0:	96ba                	add	a3,a3,a4
     1a2:	4781                	li	a5,0
     1a4:	40f58633          	sub	a2,a1,a5
     1a8:	00f682b3          	add	t0,a3,a5
     1ac:	04c04263          	bgtz	a2,1f0 <mini_pad+0x7a>
     1b0:	fff5c793          	not	a5,a1
     1b4:	87fd                	srai	a5,a5,0x1f
     1b6:	8dfd                	and	a1,a1,a5
     1b8:	95b6                	add	a1,a1,a3
     1ba:	40e58533          	sub	a0,a1,a4
     1be:	02030463          	beqz	t1,1e6 <mini_pad+0x70>
     1c2:	02b77263          	bgeu	a4,a1,1e6 <mini_pad+0x70>
     1c6:	02a00793          	li	a5,42
     1ca:	fef58fa3          	sb	a5,-1(a1)
     1ce:	fff58693          	addi	a3,a1,-1
     1d2:	00d77a63          	bgeu	a4,a3,1e6 <mini_pad+0x70>
     1d6:	fef58f23          	sb	a5,-2(a1)
     1da:	ffe58693          	addi	a3,a1,-2
     1de:	00d77463          	bgeu	a4,a3,1e6 <mini_pad+0x70>
     1e2:	fef58ea3          	sb	a5,-3(a1)
     1e6:	8082                	ret
     1e8:	0785                	addi	a5,a5,1
     1ea:	fec78fa3          	sb	a2,-1(a5)
     1ee:	b74d                	j	190 <mini_pad+0x1a>
     1f0:	00f50633          	add	a2,a0,a5
     1f4:	00064603          	lbu	a2,0(a2)
     1f8:	0785                	addi	a5,a5,1
     1fa:	00c28023          	sb	a2,0(t0)
     1fe:	b75d                	j	1a4 <mini_pad+0x2e>

00000200 <DelaySysTick>:
     200:	e000f737          	lui	a4,0xe000f
     204:	471c                	lw	a5,8(a4)
     206:	953e                	add	a0,a0,a5
     208:	471c                	lw	a5,8(a4)
     20a:	8f89                	sub	a5,a5,a0
     20c:	fe07cee3          	bltz	a5,208 <DelaySysTick+0x8>
     210:	8082                	ret

00000212 <mini_itoa.part.0>:
     212:	1101                	addi	sp,sp,-32
     214:	ce06                	sw	ra,28(sp)
     216:	cc22                	sw	s0,24(sp)
     218:	ca26                	sw	s1,20(sp)
     21a:	c002                	sw	zero,0(sp)
     21c:	832a                	mv	t1,a0
     21e:	00055763          	bgez	a0,22c <mini_itoa.part.0+0x1a>
     222:	e689                	bnez	a3,22c <mini_itoa.part.0+0x1a>
     224:	4785                	li	a5,1
     226:	40a00333          	neg	t1,a0
     22a:	c03e                	sw	a5,0(sp)
     22c:	8a05                	andi	a2,a2,1
     22e:	06100413          	li	s0,97
     232:	c219                	beqz	a2,238 <mini_itoa.part.0+0x26>
     234:	04100413          	li	s0,65
     238:	84ba                	mv	s1,a4
     23a:	1459                	addi	s0,s0,-10
     23c:	851a                	mv	a0,t1
     23e:	c83a                	sw	a4,16(sp)
     240:	c21a                	sw	t1,4(sp)
     242:	c62e                	sw	a1,12(sp)
     244:	c41a                	sw	t1,8(sp)
     246:	355d                	jal	ec <__umodsi3>
     248:	47a5                	li	a5,9
     24a:	4322                	lw	t1,8(sp)
     24c:	45b2                	lw	a1,12(sp)
     24e:	4742                	lw	a4,16(sp)
     250:	0ff57693          	zext.b	a3,a0
     254:	06a7e163          	bltu	a5,a0,2b6 <mini_itoa.part.0+0xa4>
     258:	03068693          	addi	a3,a3,48
     25c:	0ff6f693          	zext.b	a3,a3
     260:	00148793          	addi	a5,s1,1
     264:	00d48023          	sb	a3,0(s1)
     268:	851a                	mv	a0,t1
     26a:	c83a                	sw	a4,16(sp)
     26c:	c63e                	sw	a5,12(sp)
     26e:	c42e                	sw	a1,8(sp)
     270:	3d81                	jal	c0 <__hidden___udivsi3>
     272:	4692                	lw	a3,4(sp)
     274:	45a2                	lw	a1,8(sp)
     276:	47b2                	lw	a5,12(sp)
     278:	4742                	lw	a4,16(sp)
     27a:	832a                	mv	t1,a0
     27c:	02b6fb63          	bgeu	a3,a1,2b2 <mini_itoa.part.0+0xa0>
     280:	4682                	lw	a3,0(sp)
     282:	c699                	beqz	a3,290 <mini_itoa.part.0+0x7e>
     284:	02d00693          	li	a3,45
     288:	00d78023          	sb	a3,0(a5)
     28c:	00248793          	addi	a5,s1,2
     290:	40e78533          	sub	a0,a5,a4
     294:	01f55693          	srli	a3,a0,0x1f
     298:	96aa                	add	a3,a3,a0
     29a:	00078023          	sb	zero,0(a5)
     29e:	8685                	srai	a3,a3,0x1
     2a0:	4601                	li	a2,0
     2a2:	17fd                	addi	a5,a5,-1
     2a4:	00d64b63          	blt	a2,a3,2ba <mini_itoa.part.0+0xa8>
     2a8:	40f2                	lw	ra,28(sp)
     2aa:	4462                	lw	s0,24(sp)
     2ac:	44d2                	lw	s1,20(sp)
     2ae:	6105                	addi	sp,sp,32
     2b0:	8082                	ret
     2b2:	84be                	mv	s1,a5
     2b4:	b761                	j	23c <mini_itoa.part.0+0x2a>
     2b6:	96a2                	add	a3,a3,s0
     2b8:	b755                	j	25c <mini_itoa.part.0+0x4a>
     2ba:	00c705b3          	add	a1,a4,a2
     2be:	0007c283          	lbu	t0,0(a5)
     2c2:	0005c303          	lbu	t1,0(a1)
     2c6:	0605                	addi	a2,a2,1
     2c8:	00558023          	sb	t0,0(a1)
     2cc:	00678023          	sb	t1,0(a5)
     2d0:	bfc9                	j	2a2 <mini_itoa.part.0+0x90>

000002d2 <ssd1306_i2c_setup>:
void ssd1306_i2c_setup(void)
{
	uint16_t tempreg;
	
	// Reset I2C1 to init all regs
	RCC->APB1PRSTR |= RCC_APB1Periph_I2C1;
     2d2:	400217b7          	lui	a5,0x40021
     2d6:	4b98                	lw	a4,16(a5)
     2d8:	002006b7          	lui	a3,0x200
     2dc:	8f55                	or	a4,a4,a3
     2de:	cb98                	sw	a4,16(a5)
	RCC->APB1PRSTR &= ~RCC_APB1Periph_I2C1;
     2e0:	4b98                	lw	a4,16(a5)
     2e2:	ffe006b7          	lui	a3,0xffe00
     2e6:	16fd                	addi	a3,a3,-1 # ffdfffff <__global_pointer$+0xdfdff7ff>
     2e8:	8f75                	and	a4,a4,a3
     2ea:	cb98                	sw	a4,16(a5)
	
	// set freq
	tempreg = I2C1->CTLR2;
     2ec:	400057b7          	lui	a5,0x40005
     2f0:	4047d703          	lhu	a4,1028(a5) # 40005404 <__global_pointer$+0x20004c04>
	tempreg &= ~I2C_CTLR2_FREQ;
     2f4:	66c1                	lui	a3,0x10
     2f6:	fc068693          	addi	a3,a3,-64 # ffc0 <main.c.2fcf61dc+0xd802>
     2fa:	8f75                	and	a4,a4,a3
	tempreg |= (FUNCONF_SYSTEM_CORE_CLOCK/SSD1306_I2C_PRERATE)&I2C_CTLR2_FREQ;
     2fc:	01876713          	ori	a4,a4,24
	I2C1->CTLR2 = tempreg;
     300:	40e79223          	sh	a4,1028(a5)
	tempreg = (FUNCONF_SYSTEM_CORE_CLOCK/(25*SSD1306_I2C_CLKRATE))&I2C_CKCFGR_CCR;
	tempreg |= I2C_CKCFGR_DUTY;
#endif
	tempreg |= I2C_CKCFGR_FS;
#endif
	I2C1->CKCFGR = tempreg;
     304:	7771                	lui	a4,0xffffc
     306:	0705                	addi	a4,a4,1 # ffffc001 <__global_pointer$+0xdfffb801>
     308:	40e79e23          	sh	a4,1052(a5)
	// initialize the state
	ssd1306_i2c_irq_state = 0;
#endif
	
	// Enable I2C
	I2C1->CTLR1 |= I2C_CTLR1_PE;
     30c:	4007d703          	lhu	a4,1024(a5)
     310:	00176713          	ori	a4,a4,1
     314:	40e79023          	sh	a4,1024(a5)

	// set ACK mode
	I2C1->CTLR1 |= I2C_CTLR1_ACK;
     318:	4007d703          	lhu	a4,1024(a5)
     31c:	40076713          	ori	a4,a4,1024
     320:	40e79023          	sh	a4,1024(a5)
}
     324:	8082                	ret

00000326 <get_random>:
int get_random(int num)
{
	uint8_t bit;
	uint32_t new_data;
	
	for(bit=0;bit<NOISE_BITS;bit++)
     326:	20000637          	lui	a2,0x20000
     32a:	00062783          	lw	a5,0(a2) # 20000000 <lfsr>
{
     32e:	1171                	addi	sp,sp,-4
     330:	c006                	sw	ra,0(sp)
     332:	46a1                	li	a3,8
	{
		new_data = ((lfsr>>NOISE_POLY_TAP0) ^
					(lfsr>>NOISE_POLY_TAP1) ^
     334:	0157d593          	srli	a1,a5,0x15
		new_data = ((lfsr>>NOISE_POLY_TAP0) ^
     338:	01f7d713          	srli	a4,a5,0x1f
     33c:	8f2d                	xor	a4,a4,a1
     33e:	8f3d                	xor	a4,a4,a5
					(lfsr>>NOISE_POLY_TAP2) ^
     340:	0017d593          	srli	a1,a5,0x1
		new_data = ((lfsr>>NOISE_POLY_TAP0) ^
     344:	8f2d                	xor	a4,a4,a1
	for(bit=0;bit<NOISE_BITS;bit++)
     346:	16fd                	addi	a3,a3,-1
					(lfsr>>NOISE_POLY_TAP3));
		lfsr = (lfsr<<1) | (new_data&1);
     348:	8b05                	andi	a4,a4,1
     34a:	0786                	slli	a5,a5,0x1
	for(bit=0;bit<NOISE_BITS;bit++)
     34c:	0ff6f693          	zext.b	a3,a3
		lfsr = (lfsr<<1) | (new_data&1);
     350:	8fd9                	or	a5,a5,a4
	for(bit=0;bit<NOISE_BITS;bit++)
     352:	f2ed                	bnez	a3,334 <get_random+0xe>
	}

  int random_8 = lfsr&NOISE_MASK;
	return random_8 % (num + 1);
     354:	00150593          	addi	a1,a0,1
     358:	0ff7f513          	zext.b	a0,a5
     35c:	00f62023          	sw	a5,0(a2)
     360:	3b45                	jal	110 <__modsi3>
}
     362:	4082                	lw	ra,0(sp)
     364:	0111                	addi	sp,sp,4
     366:	8082                	ret

00000368 <ssd1306_drawstr_sz.constprop.0>:
}

/*
 * draw a string to the display buffer, scaled to size
 */
void ssd1306_drawstr_sz(uint8_t x, uint8_t y, char *str, uint8_t color, font_size_t font_size)
     368:	1121                	addi	sp,sp,-24
     36a:	0016c793          	xori	a5,a3,1
     36e:	c826                	sw	s1,16(sp)
     370:	ca22                	sw	s0,20(sp)
     372:	c22e                	sw	a1,4(sp)
     374:	84b6                	mv	s1,a3
     376:	c63e                	sw	a5,12(sp)
{
	uint8_t c;
	
	while((c=*str++))
     378:	00064783          	lbu	a5,0(a2)
     37c:	0605                	addi	a2,a2,1
     37e:	c3d5                	beqz	a5,422 <ssd1306_drawstr_sz.constprop.0+0xba>
        d = fontdata[(chr << 3) + i];
     380:	078e                	slli	a5,a5,0x3
     382:	4581                	li	a1,0
     384:	c43e                	sw	a5,8(sp)
     386:	47a2                	lw	a5,8(sp)
     388:	6705                	lui	a4,0x1
     38a:	21c70713          	addi	a4,a4,540 # 121c <fontdata>
     38e:	97ae                	add	a5,a5,a1
     390:	97ba                	add	a5,a5,a4
     392:	0007c303          	lbu	t1,0(a5)
                    ssd1306_drawPixel(x + (j * font_scale) + k, y + (i * font_scale) + l, col);
     396:	4792                	lw	a5,4(sp)
     398:	200006b7          	lui	a3,0x20000
     39c:	02068693          	addi	a3,a3,32 # 20000020 <ssd1306_buffer>
     3a0:	00b78733          	add	a4,a5,a1
     3a4:	0ff77713          	zext.b	a4,a4
	addr = x + SSD1306_W*(y/8);
     3a8:	00375793          	srli	a5,a4,0x3
     3ac:	079e                	slli	a5,a5,0x7
     3ae:	97aa                	add	a5,a5,a0
     3b0:	07c2                	slli	a5,a5,0x10
     3b2:	83c1                	srli	a5,a5,0x10
		ssd1306_buffer[addr] |= (1<<(y&7));
     3b4:	8b1d                	andi	a4,a4,7
     3b6:	97b6                	add	a5,a5,a3
     3b8:	4685                	li	a3,1
     3ba:	00e696b3          	sll	a3,a3,a4
		ssd1306_buffer[addr] &= ~(1<<(y&7));
     3be:	fff6c713          	not	a4,a3
     3c2:	0ff77713          	zext.b	a4,a4
     3c6:	c03a                	sw	a4,0(sp)
     3c8:	0ff6f693          	zext.b	a3,a3
        for (j = 0; j < 8; j++)
     3cc:	4701                	li	a4,0
            if (d & 0x80)
     3ce:	01831293          	slli	t0,t1,0x18
     3d2:	4182d293          	srai	t0,t0,0x18
     3d6:	8426                	mv	s0,s1
     3d8:	0002c363          	bltz	t0,3de <ssd1306_drawstr_sz.constprop.0+0x76>
     3dc:	4432                	lw	s0,12(sp)
		ssd1306_buffer[addr] |= (1<<(y&7));
     3de:	0007c383          	lbu	t2,0(a5)
		ssd1306_buffer[addr] &= ~(1<<(y&7));
     3e2:	4282                	lw	t0,0(sp)
     3e4:	0072f2b3          	and	t0,t0,t2
	if(color)
     3e8:	c019                	beqz	s0,3ee <ssd1306_drawstr_sz.constprop.0+0x86>
		ssd1306_buffer[addr] |= (1<<(y&7));
     3ea:	0076e2b3          	or	t0,a3,t2
        for (j = 0; j < 8; j++)
     3ee:	0705                	addi	a4,a4,1
     3f0:	0742                	slli	a4,a4,0x10
		ssd1306_buffer[addr] |= (1<<(y&7));
     3f2:	00578023          	sb	t0,0(a5)
            d <<= 1;
     3f6:	0306                	slli	t1,t1,0x1
        for (j = 0; j < 8; j++)
     3f8:	8341                	srli	a4,a4,0x10
     3fa:	4421                	li	s0,8
            d <<= 1;
     3fc:	0ff37313          	zext.b	t1,t1
        for (j = 0; j < 8; j++)
     400:	0785                	addi	a5,a5,1
     402:	fc8716e3          	bne	a4,s0,3ce <ssd1306_drawstr_sz.constprop.0+0x66>
    for (i = 0; i < 8; i++)
     406:	0585                	addi	a1,a1,1
     408:	f6e59fe3          	bne	a1,a4,386 <ssd1306_drawstr_sz.constprop.0+0x1e>
	{
		ssd1306_drawchar_sz(x, y, c, color, font_size);
		x += 8 * font_size;
		if(x>128 - 8 * font_size)
     40c:	008507b3          	add	a5,a0,s0
     410:	01079513          	slli	a0,a5,0x10
     414:	07800713          	li	a4,120
     418:	0ff7f793          	zext.b	a5,a5
     41c:	8141                	srli	a0,a0,0x10
     41e:	f4f77de3          	bgeu	a4,a5,378 <ssd1306_drawstr_sz.constprop.0+0x10>
			break;
	}
}
     422:	4452                	lw	s0,20(sp)
     424:	44c2                	lw	s1,16(sp)
     426:	0161                	addi	sp,sp,24
     428:	8082                	ret

0000042a <ssd1306_drawImage.constprop.0>:
void ssd1306_drawImage(int x, int y, const unsigned char* input, uint8_t width, uint8_t height, uint8_t color_mode) {
     42a:	fd810113          	addi	sp,sp,-40
     42e:	0036d793          	srli	a5,a3,0x3
     432:	0f86f693          	andi	a3,a3,248
     436:	c63e                	sw	a5,12(sp)
     438:	00a687b3          	add	a5,a3,a0
     43c:	d022                	sw	s0,32(sp)
     43e:	d206                	sw	ra,36(sp)
     440:	ce26                	sw	s1,28(sp)
     442:	c02a                	sw	a0,0(sp)
     444:	c82e                	sw	a1,16(sp)
     446:	ca32                	sw	a2,20(sp)
     448:	cc3a                	sw	a4,24(sp)
     44a:	c43e                	sw	a5,8(sp)
	for (uint8_t line = 0; line < height; line++) {
     44c:	4401                	li	s0,0
     44e:	47e2                	lw	a5,24(sp)
     450:	00f46863          	bltu	s0,a5,460 <ssd1306_drawImage.constprop.0+0x36>
}
     454:	5092                	lw	ra,36(sp)
     456:	5402                	lw	s0,32(sp)
     458:	44f2                	lw	s1,28(sp)
     45a:	02810113          	addi	sp,sp,40
     45e:	8082                	ret
		y_absolute = y + line;
     460:	47c2                	lw	a5,16(sp)
     462:	00f404b3          	add	s1,s0,a5
    if (y_absolute < 0) {
     466:	0004d663          	bgez	s1,472 <ssd1306_drawImage.constprop.0+0x48>
	for (uint8_t line = 0; line < height; line++) {
     46a:	0405                	addi	s0,s0,1
     46c:	0ff47413          	zext.b	s0,s0
     470:	bff9                	j	44e <ssd1306_drawImage.constprop.0+0x24>
		if (y_absolute >= SSD1306_H || y_absolute < 0) {
     472:	03f00793          	li	a5,63
     476:	fc97efe3          	bltu	a5,s1,454 <ssd1306_drawImage.constprop.0+0x2a>
			uint8_t input_byte = input[byte + line * bytes_to_draw];
     47a:	45b2                	lw	a1,12(sp)
		uint8_t v_mask = 1 << (y_absolute & 7);
     47c:	0074f793          	andi	a5,s1,7
     480:	4705                	li	a4,1
     482:	00f717b3          	sll	a5,a4,a5
			uint8_t input_byte = input[byte + line * bytes_to_draw];
     486:	8522                	mv	a0,s0
		uint8_t v_mask = 1 << (y_absolute & 7);
     488:	c23e                	sw	a5,4(sp)
			uint8_t input_byte = input[byte + line * bytes_to_draw];
     48a:	3919                	jal	a0 <__mulsi3>
     48c:	47d2                	lw	a5,20(sp)
		for (uint8_t byte = 0; byte < bytes_to_draw; byte++) {
     48e:	4622                	lw	a2,8(sp)
				buffer_addr = x_absolute + SSD1306_W * (y_absolute / 8);
     490:	848d                	srai	s1,s1,0x3
     492:	953e                	add	a0,a0,a5
     494:	049e                	slli	s1,s1,0x7
		for (uint8_t byte = 0; byte < bytes_to_draw; byte++) {
     496:	4782                	lw	a5,0(sp)
     498:	fcc789e3          	beq	a5,a2,46a <ssd1306_drawImage.constprop.0+0x40>
			uint8_t input_byte = input[byte + line * bytes_to_draw];
     49c:	00054383          	lbu	t2,0(a0)
     4a0:	4701                	li	a4,0
			for (pixel = 0; pixel < 8; pixel++) {
     4a2:	42a1                	li	t0,8
				if (x_absolute >= SSD1306_W) {
     4a4:	00e607b3          	add	a5,a2,a4
     4a8:	07f00693          	li	a3,127
     4ac:	04f6c363          	blt	a3,a5,4f2 <ssd1306_drawImage.constprop.0+0xc8>
				buffer_addr = x_absolute + SSD1306_W * (y_absolute / 8);
     4b0:	97a6                	add	a5,a5,s1
						ssd1306_buffer[buffer_addr] = (ssd1306_buffer[buffer_addr] & ~v_mask) | (input_pixel ? v_mask : 0);
     4b2:	200006b7          	lui	a3,0x20000
     4b6:	07c2                	slli	a5,a5,0x10
     4b8:	83c1                	srli	a5,a5,0x10
     4ba:	02068593          	addi	a1,a3,32 # 20000020 <ssd1306_buffer>
     4be:	95be                	add	a1,a1,a5
     4c0:	00410303          	lb	t1,4(sp)
     4c4:	0005c683          	lbu	a3,0(a1)
     4c8:	fff34793          	not	a5,t1
     4cc:	8efd                	and	a3,a3,a5
				uint8_t input_pixel = input_byte & (1 << pixel);
     4ce:	4785                	li	a5,1
     4d0:	00e797b3          	sll	a5,a5,a4
						ssd1306_buffer[buffer_addr] = (ssd1306_buffer[buffer_addr] & ~v_mask) | (input_pixel ? v_mask : 0);
     4d4:	00f3f7b3          	and	a5,t2,a5
     4d8:	00f037b3          	snez	a5,a5
     4dc:	40f007b3          	neg	a5,a5
     4e0:	00f37333          	and	t1,t1,a5
     4e4:	0066e6b3          	or	a3,a3,t1
     4e8:	00d58023          	sb	a3,0(a1)
			for (pixel = 0; pixel < 8; pixel++) {
     4ec:	0705                	addi	a4,a4,1
     4ee:	fa571be3          	bne	a4,t0,4a4 <ssd1306_drawImage.constprop.0+0x7a>
     4f2:	1661                	addi	a2,a2,-8
     4f4:	0505                	addi	a0,a0,1
     4f6:	b745                	j	496 <ssd1306_drawImage.constprop.0+0x6c>

000004f8 <internal_handle_input.constprop.0>:
     4f8:	e00007b7          	lui	a5,0xe0000
     4fc:	0f47a783          	lw	a5,244(a5) # e00000f4 <__global_pointer$+0xbffff8f4>
     500:	8082                	ret

00000502 <_write.constprop.0>:
     502:	1121                	addi	sp,sp,-24
     504:	c822                	sw	s0,16(sp)
     506:	ca06                	sw	ra,20(sp)
     508:	c626                	sw	s1,12(sp)
     50a:	c402                	sw	zero,8(sp)
     50c:	842e                	mv	s0,a1
     50e:	eddd                	bnez	a1,5cc <_write.constprop.0+0xca>
     510:	e00007b7          	lui	a5,0xe0000
     514:	0f47a783          	lw	a5,244(a5) # e00000f4 <__global_pointer$+0xbffff8f4>
     518:	c789                	beqz	a5,522 <_write.constprop.0+0x20>
     51a:	0807f793          	andi	a5,a5,128
     51e:	e391                	bnez	a5,522 <_write.constprop.0+0x20>
     520:	3fe1                	jal	4f8 <internal_handle_input.constprop.0>
     522:	40d2                	lw	ra,20(sp)
     524:	8522                	mv	a0,s0
     526:	4442                	lw	s0,16(sp)
     528:	44b2                	lw	s1,12(sp)
     52a:	0161                	addi	sp,sp,24
     52c:	8082                	ret
     52e:	409407b3          	sub	a5,s0,s1
     532:	471d                	li	a4,7
     534:	00f75363          	bge	a4,a5,53a <_write.constprop.0+0x38>
     538:	87ba                	mv	a5,a4
     53a:	00027737          	lui	a4,0x27
     53e:	e00006b7          	lui	a3,0xe0000
     542:	10170713          	addi	a4,a4,257 # 27101 <main.c.2fcf61dc+0x24943>
     546:	0f468693          	addi	a3,a3,244 # e00000f4 <__global_pointer$+0xbffff8f4>
     54a:	4290                	lw	a2,0(a3)
     54c:	08067593          	andi	a1,a2,128
     550:	e1a5                	bnez	a1,5b0 <_write.constprop.0+0xae>
     552:	c611                	beqz	a2,55e <_write.constprop.0+0x5c>
     554:	c22a                	sw	a0,4(sp)
     556:	c03e                	sw	a5,0(sp)
     558:	3745                	jal	4f8 <internal_handle_input.constprop.0>
     55a:	4512                	lw	a0,4(sp)
     55c:	4782                	lw	a5,0(sp)
     55e:	0034                	addi	a3,sp,8
     560:	470d                	li	a4,3
     562:	85b6                	mv	a1,a3
     564:	04f74a63          	blt	a4,a5,5b8 <_write.constprop.0+0xb6>
     568:	46a2                	lw	a3,8(sp)
     56a:	e0000737          	lui	a4,0xe0000
     56e:	460d                	li	a2,3
     570:	0ed72c23          	sw	a3,248(a4) # e00000f8 <__global_pointer$+0xbffff8f8>
     574:	009506b3          	add	a3,a0,s1
     578:	4701                	li	a4,0
     57a:	0006c283          	lbu	t0,0(a3)
     57e:	0705                	addi	a4,a4,1
     580:	00e58333          	add	t1,a1,a4
     584:	00530023          	sb	t0,0(t1)
     588:	00e78563          	beq	a5,a4,592 <_write.constprop.0+0x90>
     58c:	0685                	addi	a3,a3,1
     58e:	fec716e3          	bne	a4,a2,57a <_write.constprop.0+0x78>
     592:	00478713          	addi	a4,a5,4
     596:	f8076713          	ori	a4,a4,-128
     59a:	00e10423          	sb	a4,8(sp)
     59e:	46a2                	lw	a3,8(sp)
     5a0:	e0000737          	lui	a4,0xe0000
     5a4:	94be                	add	s1,s1,a5
     5a6:	0ed72a23          	sw	a3,244(a4) # e00000f4 <__global_pointer$+0xbffff8f4>
     5aa:	f884c2e3          	blt	s1,s0,52e <_write.constprop.0+0x2c>
     5ae:	bf95                	j	522 <_write.constprop.0+0x20>
     5b0:	177d                	addi	a4,a4,-1
     5b2:	ff41                	bnez	a4,54a <_write.constprop.0+0x48>
     5b4:	8426                	mv	s0,s1
     5b6:	b7b5                	j	522 <_write.constprop.0+0x20>
     5b8:	00e48633          	add	a2,s1,a4
     5bc:	962a                	add	a2,a2,a0
     5be:	00064603          	lbu	a2,0(a2)
     5c2:	0705                	addi	a4,a4,1
     5c4:	0685                	addi	a3,a3,1
     5c6:	fec68fa3          	sb	a2,-1(a3)
     5ca:	bf69                	j	564 <_write.constprop.0+0x62>
     5cc:	4481                	li	s1,0
     5ce:	bff1                	j	5aa <_write.constprop.0+0xa8>

000005d0 <__puts_uart>:
     5d0:	1161                	addi	sp,sp,-8
     5d2:	c022                	sw	s0,0(sp)
     5d4:	c206                	sw	ra,4(sp)
     5d6:	842e                	mv	s0,a1
     5d8:	372d                	jal	502 <_write.constprop.0>
     5da:	4092                	lw	ra,4(sp)
     5dc:	8522                	mv	a0,s0
     5de:	4402                	lw	s0,0(sp)
     5e0:	0121                	addi	sp,sp,8
     5e2:	8082                	ret

000005e4 <handle_reset>:
     5e4:	20000197          	auipc	gp,0x20000
     5e8:	21c18193          	addi	gp,gp,540 # 20000800 <__global_pointer$>
     5ec:	00018113          	mv	sp,gp
     5f0:	08000513          	li	a0,128
     5f4:	30051073          	csrw	mstatus,a0
     5f8:	468d                	li	a3,3
     5fa:	00000517          	auipc	a0,0x0
     5fe:	a0650513          	addi	a0,a0,-1530 # 0 <InterruptVector>
     602:	8d55                	or	a0,a0,a3
     604:	30551073          	csrw	mtvec,a0
     608:	82018513          	addi	a0,gp,-2016 # 20000020 <ssd1306_buffer>
     60c:	c2018593          	addi	a1,gp,-992 # 20000420 <_ebss>
     610:	4601                	li	a2,0
     612:	00b55663          	bge	a0,a1,61e <handle_reset+0x3a>
     616:	c110                	sw	a2,0(a0)
     618:	0511                	addi	a0,a0,4
     61a:	feb54ee3          	blt	a0,a1,616 <handle_reset+0x32>
     61e:	00001517          	auipc	a0,0x1
     622:	4ba50513          	addi	a0,a0,1210 # 1ad8 <_data_lma>
     626:	20000597          	auipc	a1,0x20000
     62a:	9da58593          	addi	a1,a1,-1574 # 20000000 <lfsr>
     62e:	82018613          	addi	a2,gp,-2016 # 20000020 <ssd1306_buffer>
     632:	00c58863          	beq	a1,a2,642 <handle_reset+0x5e>
     636:	4114                	lw	a3,0(a0)
     638:	c194                	sw	a3,0(a1)
     63a:	0511                	addi	a0,a0,4
     63c:	0591                	addi	a1,a1,4
     63e:	fec59ae3          	bne	a1,a2,632 <handle_reset+0x4e>
     642:	e000f7b7          	lui	a5,0xe000f
     646:	4705                	li	a4,1
     648:	c398                	sw	a4,0(a5)
     64a:	6785                	lui	a5,0x1
     64c:	df878793          	addi	a5,a5,-520 # df8 <main>
     650:	34179073          	csrw	mepc,a5
     654:	30200073          	mret

00000658 <ADC1_IRQHandler>:
     658:	a001                	j	658 <ADC1_IRQHandler>

0000065a <NMI_Handler>:
     65a:	40021737          	lui	a4,0x40021
     65e:	471c                	lw	a5,8(a4)
     660:	008006b7          	lui	a3,0x800
     664:	8fd5                	or	a5,a5,a3
     666:	c71c                	sw	a5,8(a4)

00000668 <strlen>:
     668:	87aa                	mv	a5,a0
     66a:	0007c703          	lbu	a4,0(a5)
     66e:	e701                	bnez	a4,676 <strlen+0xe>
     670:	40a78533          	sub	a0,a5,a0
     674:	8082                	ret
     676:	0785                	addi	a5,a5,1
     678:	bfcd                	j	66a <strlen+0x2>

0000067a <mini_vpprintf>:
     67a:	fa410113          	addi	sp,sp,-92
     67e:	caa2                	sw	s0,84(sp)
     680:	c8a6                	sw	s1,80(sp)
     682:	cc86                	sw	ra,88(sp)
     684:	c02a                	sw	a0,0(sp)
     686:	c22e                	sw	a1,4(sp)
     688:	8432                	mv	s0,a2
     68a:	84b6                	mv	s1,a3
     68c:	e509                	bnez	a0,696 <mini_vpprintf+0x1c>
     68e:	13600793          	li	a5,310
     692:	c202                	sw	zero,4(sp)
     694:	c03e                	sw	a5,0(sp)
     696:	ca02                	sw	zero,20(sp)
     698:	00044783          	lbu	a5,0(s0)
     69c:	00140713          	addi	a4,s0,1
     6a0:	00f10fa3          	sb	a5,31(sp)
     6a4:	eb81                	bnez	a5,6b4 <mini_vpprintf+0x3a>
     6a6:	40e6                	lw	ra,88(sp)
     6a8:	4456                	lw	s0,84(sp)
     6aa:	4552                	lw	a0,20(sp)
     6ac:	44c6                	lw	s1,80(sp)
     6ae:	05c10113          	addi	sp,sp,92
     6b2:	8082                	ret
     6b4:	c63a                	sw	a4,12(sp)
     6b6:	02500693          	li	a3,37
     6ba:	02d78063          	beq	a5,a3,6da <mini_vpprintf+0x60>
     6be:	4612                	lw	a2,4(sp)
     6c0:	4782                	lw	a5,0(sp)
     6c2:	4585                	li	a1,1
     6c4:	01f10513          	addi	a0,sp,31
     6c8:	9782                	jalr	a5
     6ca:	4732                	lw	a4,12(sp)
     6cc:	c426                	sw	s1,8(sp)
     6ce:	843a                	mv	s0,a4
     6d0:	47d2                	lw	a5,20(sp)
     6d2:	44a2                	lw	s1,8(sp)
     6d4:	97aa                	add	a5,a5,a0
     6d6:	ca3e                	sw	a5,20(sp)
     6d8:	b7c1                	j	698 <mini_vpprintf+0x1e>
     6da:	00144783          	lbu	a5,1(s0)
     6de:	03000693          	li	a3,48
     6e2:	00240713          	addi	a4,s0,2
     6e6:	00f10fa3          	sb	a5,31(sp)
     6ea:	c63e                	sw	a5,12(sp)
     6ec:	08d79363          	bne	a5,a3,772 <mini_vpprintf+0xf8>
     6f0:	843a                	mv	s0,a4
     6f2:	4681                	li	a3,0
     6f4:	4701                	li	a4,0
     6f6:	45a5                	li	a1,9
     6f8:	a819                	j	70e <mini_vpprintf+0x94>
     6fa:	00271793          	slli	a5,a4,0x2
     6fe:	97ba                	add	a5,a5,a4
     700:	0786                	slli	a5,a5,0x1
     702:	0405                	addi	s0,s0,1
     704:	00f60733          	add	a4,a2,a5
     708:	fff44783          	lbu	a5,-1(s0)
     70c:	4685                	li	a3,1
     70e:	fd078613          	addi	a2,a5,-48
     712:	0ff67513          	zext.b	a0,a2
     716:	fea5f2e3          	bgeu	a1,a0,6fa <mini_vpprintf+0x80>
     71a:	c299                	beqz	a3,720 <mini_vpprintf+0xa6>
     71c:	00f10fa3          	sb	a5,31(sp)
     720:	c83a                	sw	a4,16(sp)
     722:	46e1                	li	a3,24
     724:	00e6d363          	bge	a3,a4,72a <mini_vpprintf+0xb0>
     728:	c836                	sw	a3,16(sp)
     72a:	06c00613          	li	a2,108
     72e:	4681                	li	a3,0
     730:	00c79863          	bne	a5,a2,740 <mini_vpprintf+0xc6>
     734:	00044783          	lbu	a5,0(s0)
     738:	4685                	li	a3,1
     73a:	0405                	addi	s0,s0,1
     73c:	00f10fa3          	sb	a5,31(sp)
     740:	01f14603          	lbu	a2,31(sp)
     744:	06400793          	li	a5,100
     748:	06f60563          	beq	a2,a5,7b2 <mini_vpprintf+0x138>
     74c:	02c7e763          	bltu	a5,a2,77a <mini_vpprintf+0x100>
     750:	05800793          	li	a5,88
     754:	0af60063          	beq	a2,a5,7f4 <mini_vpprintf+0x17a>
     758:	06300793          	li	a5,99
     75c:	0af60d63          	beq	a2,a5,816 <mini_vpprintf+0x19c>
     760:	d239                	beqz	a2,6a6 <mini_vpprintf+0x2c>
     762:	4612                	lw	a2,4(sp)
     764:	4782                	lw	a5,0(sp)
     766:	4585                	li	a1,1
     768:	01f10513          	addi	a0,sp,31
     76c:	9782                	jalr	a5
     76e:	c426                	sw	s1,8(sp)
     770:	b785                	j	6d0 <mini_vpprintf+0x56>
     772:	02000693          	li	a3,32
     776:	c636                	sw	a3,12(sp)
     778:	bfa5                	j	6f0 <mini_vpprintf+0x76>
     77a:	07500793          	li	a5,117
     77e:	02f60a63          	beq	a2,a5,7b2 <mini_vpprintf+0x138>
     782:	07800793          	li	a5,120
     786:	06f60763          	beq	a2,a5,7f4 <mini_vpprintf+0x17a>
     78a:	07300793          	li	a5,115
     78e:	fcf61ae3          	bne	a2,a5,762 <mini_vpprintf+0xe8>
     792:	00448793          	addi	a5,s1,4
     796:	4084                	lw	s1,0(s1)
     798:	cc3a                	sw	a4,24(sp)
     79a:	c43e                	sw	a5,8(sp)
     79c:	8526                	mv	a0,s1
     79e:	35e9                	jal	668 <strlen>
     7a0:	4762                	lw	a4,24(sp)
     7a2:	85aa                	mv	a1,a0
     7a4:	08e05663          	blez	a4,830 <mini_vpprintf+0x1b6>
     7a8:	46c2                	lw	a3,16(sp)
     7aa:	4632                	lw	a2,12(sp)
     7ac:	1838                	addi	a4,sp,56
     7ae:	8526                	mv	a0,s1
     7b0:	a01d                	j	7d6 <mini_vpprintf+0x15c>
     7b2:	00448793          	addi	a5,s1,4
     7b6:	c43e                	sw	a5,8(sp)
     7b8:	c695                	beqz	a3,7e4 <mini_vpprintf+0x16a>
     7ba:	f8b60613          	addi	a2,a2,-117
     7be:	1018                	addi	a4,sp,32
     7c0:	00163693          	seqz	a3,a2
     7c4:	4088                	lw	a0,0(s1)
     7c6:	4601                	li	a2,0
     7c8:	45a9                	li	a1,10
     7ca:	34a1                	jal	212 <mini_itoa.part.0>
     7cc:	46c2                	lw	a3,16(sp)
     7ce:	4632                	lw	a2,12(sp)
     7d0:	1838                	addi	a4,sp,56
     7d2:	85aa                	mv	a1,a0
     7d4:	1008                	addi	a0,sp,32
     7d6:	3245                	jal	176 <mini_pad>
     7d8:	4612                	lw	a2,4(sp)
     7da:	85aa                	mv	a1,a0
     7dc:	1828                	addi	a0,sp,56
     7de:	4782                	lw	a5,0(sp)
     7e0:	9782                	jalr	a5
     7e2:	b5fd                	j	6d0 <mini_vpprintf+0x56>
     7e4:	07500793          	li	a5,117
     7e8:	1018                	addi	a4,sp,32
     7ea:	4685                	li	a3,1
     7ec:	fcf60ce3          	beq	a2,a5,7c4 <mini_vpprintf+0x14a>
     7f0:	4681                	li	a3,0
     7f2:	bfc9                	j	7c4 <mini_vpprintf+0x14a>
     7f4:	4088                	lw	a0,0(s1)
     7f6:	fa860613          	addi	a2,a2,-88
     7fa:	00448793          	addi	a5,s1,4
     7fe:	1018                	addi	a4,sp,32
     800:	4685                	li	a3,1
     802:	00163613          	seqz	a2,a2
     806:	45c1                	li	a1,16
     808:	c43e                	sw	a5,8(sp)
     80a:	3421                	jal	212 <mini_itoa.part.0>
     80c:	46c2                	lw	a3,16(sp)
     80e:	4632                	lw	a2,12(sp)
     810:	85aa                	mv	a1,a0
     812:	1838                	addi	a4,sp,56
     814:	b7c1                	j	7d4 <mini_vpprintf+0x15a>
     816:	00448793          	addi	a5,s1,4
     81a:	c43e                	sw	a5,8(sp)
     81c:	409c                	lw	a5,0(s1)
     81e:	46c2                	lw	a3,16(sp)
     820:	4632                	lw	a2,12(sp)
     822:	00f10fa3          	sb	a5,31(sp)
     826:	1838                	addi	a4,sp,56
     828:	4585                	li	a1,1
     82a:	01f10513          	addi	a0,sp,31
     82e:	b765                	j	7d6 <mini_vpprintf+0x15c>
     830:	4612                	lw	a2,4(sp)
     832:	8526                	mv	a0,s1
     834:	b76d                	j	7de <mini_vpprintf+0x164>

00000836 <printf>:
     836:	1111                	addi	sp,sp,-28
     838:	c632                	sw	a2,12(sp)
     83a:	862a                	mv	a2,a0
     83c:	c42e                	sw	a1,8(sp)
     83e:	c836                	sw	a3,16(sp)
     840:	4581                	li	a1,0
     842:	0034                	addi	a3,sp,8
     844:	5d000513          	li	a0,1488
     848:	c206                	sw	ra,4(sp)
     84a:	ca3a                	sw	a4,20(sp)
     84c:	cc3e                	sw	a5,24(sp)
     84e:	c036                	sw	a3,0(sp)
     850:	352d                	jal	67a <mini_vpprintf>
     852:	4092                	lw	ra,4(sp)
     854:	0171                	addi	sp,sp,28
     856:	8082                	ret

00000858 <ssd1306_i2c_error.isra.0>:
 * error handler
 */
uint8_t ssd1306_i2c_error(uint8_t err)
{
	// report error
	printf("ssd1306_i2c_error - timeout waiting for %s\n\r", errstr[err]);
     858:	6785                	lui	a5,0x1
     85a:	050a                	slli	a0,a0,0x2
     85c:	20878793          	addi	a5,a5,520 # 1208 <errstr>
     860:	97aa                	add	a5,a5,a0
     862:	438c                	lw	a1,0(a5)
     864:	6505                	lui	a0,0x1
uint8_t ssd1306_i2c_error(uint8_t err)
     866:	1171                	addi	sp,sp,-4
	printf("ssd1306_i2c_error - timeout waiting for %s\n\r", errstr[err]);
     868:	17050513          	addi	a0,a0,368 # 1170 <main+0x378>
uint8_t ssd1306_i2c_error(uint8_t err)
     86c:	c006                	sw	ra,0(sp)
	printf("ssd1306_i2c_error - timeout waiting for %s\n\r", errstr[err]);
     86e:	37e1                	jal	836 <printf>
	
	// reset & initialize I2C
	ssd1306_i2c_setup();

	return 1;
}
     870:	4082                	lw	ra,0(sp)
     872:	0111                	addi	sp,sp,4
	ssd1306_i2c_setup();
     874:	bcb9                	j	2d2 <ssd1306_i2c_setup>

00000876 <ssd1306_i2c_send.constprop.0.isra.0>:
uint8_t ssd1306_i2c_send(uint8_t addr, uint8_t *data, uint8_t sz)
{
	int32_t timeout;
	
	// wait for not busy
	timeout = TIMEOUT_MAX;
     876:	6761                	lui	a4,0x18
	while((I2C1->STAR2 & I2C_STAR2_BUSY) && (timeout--));
     878:	400057b7          	lui	a5,0x40005
	timeout = TIMEOUT_MAX;
     87c:	6a070713          	addi	a4,a4,1696 # 186a0 <main.c.2fcf61dc+0x15ee2>
	while((I2C1->STAR2 & I2C_STAR2_BUSY) && (timeout--));
     880:	40078793          	addi	a5,a5,1024 # 40005400 <__global_pointer$+0x20004c00>
     884:	567d                	li	a2,-1
     886:	0187d683          	lhu	a3,24(a5)
     88a:	8a89                	andi	a3,a3,2
     88c:	cedd                	beqz	a3,94a <ssd1306_i2c_send.constprop.0.isra.0+0xd4>
     88e:	177d                	addi	a4,a4,-1
     890:	fec71be3          	bne	a4,a2,886 <ssd1306_i2c_send.constprop.0.isra.0+0x10>
	if(timeout==-1)
		return ssd1306_i2c_error(0);
     894:	4501                	li	a0,0
     896:	a821                	j	8ae <ssd1306_i2c_send.constprop.0.isra.0+0x38>
     898:	67e1                	lui	a5,0x18
     89a:	6a178793          	addi	a5,a5,1697 # 186a1 <main.c.2fcf61dc+0x15ee3>
	// send data one byte at a time
	while(sz--)
	{
		// wait for TX Empty
		timeout = TIMEOUT_MAX;
		while(!(I2C1->STAR1 & I2C_STAR1_TXE) && (timeout--));
     89e:	01475683          	lhu	a3,20(a4)
     8a2:	0806f693          	andi	a3,a3,128
     8a6:	e689                	bnez	a3,8b0 <ssd1306_i2c_send.constprop.0.isra.0+0x3a>
     8a8:	17fd                	addi	a5,a5,-1
     8aa:	fbf5                	bnez	a5,89e <ssd1306_i2c_send.constprop.0.isra.0+0x28>
		if(timeout==-1)
			return ssd1306_i2c_error(3);
     8ac:	450d                	li	a0,3
		return ssd1306_i2c_error(0);
     8ae:	b76d                	j	858 <ssd1306_i2c_error.isra.0>
		
		// send command
		I2C1->DATAR = *data++;
     8b0:	00054783          	lbu	a5,0(a0)
     8b4:	0505                	addi	a0,a0,1
     8b6:	00f71823          	sh	a5,16(a4)
	while(sz--)
     8ba:	fcb51fe3          	bne	a0,a1,898 <ssd1306_i2c_send.constprop.0.isra.0+0x22>
	}

	// wait for tx complete
	timeout = TIMEOUT_MAX;
     8be:	66e1                	lui	a3,0x18
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
     8c0:	40005737          	lui	a4,0x40005
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_BYTE_TRANSMITTED)) && (timeout--));
     8c4:	00070637          	lui	a2,0x70
	timeout = TIMEOUT_MAX;
     8c8:	6a068693          	addi	a3,a3,1696 # 186a0 <main.c.2fcf61dc+0x15ee2>
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
     8cc:	40070713          	addi	a4,a4,1024 # 40005400 <__global_pointer$+0x20004c00>
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_BYTE_TRANSMITTED)) && (timeout--));
     8d0:	08460613          	addi	a2,a2,132 # 70084 <main.c.2fcf61dc+0x6d8c6>
     8d4:	55fd                	li	a1,-1
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
     8d6:	01475503          	lhu	a0,20(a4)
     8da:	01875783          	lhu	a5,24(a4)
     8de:	07c2                	slli	a5,a5,0x10
     8e0:	8fc9                	or	a5,a5,a0
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_BYTE_TRANSMITTED)) && (timeout--));
     8e2:	8ff1                	and	a5,a5,a2
     8e4:	00c78763          	beq	a5,a2,8f2 <ssd1306_i2c_send.constprop.0.isra.0+0x7c>
     8e8:	16fd                	addi	a3,a3,-1
     8ea:	feb696e3          	bne	a3,a1,8d6 <ssd1306_i2c_send.constprop.0.isra.0+0x60>
	if(timeout==-1)
		return ssd1306_i2c_error(4);
     8ee:	4511                	li	a0,4
     8f0:	bf7d                	j	8ae <ssd1306_i2c_send.constprop.0.isra.0+0x38>

	// set STOP condition
	I2C1->CTLR1 |= I2C_CTLR1_STOP;
     8f2:	00075783          	lhu	a5,0(a4)
     8f6:	2007e793          	ori	a5,a5,512
     8fa:	00f71023          	sh	a5,0(a4)
	
	// we're happy
	return 0;
}
     8fe:	8082                	ret
		while(!(I2C1->STAR1 & I2C_STAR1_TXE) && (timeout--));
     900:	40005737          	lui	a4,0x40005
     904:	95aa                	add	a1,a1,a0
     906:	40070713          	addi	a4,a4,1024 # 40005400 <__global_pointer$+0x20004c00>
     90a:	bf45                	j	8ba <ssd1306_i2c_send.constprop.0.isra.0+0x44>
	I2C1->DATAR = addr<<1;
     90c:	07800793          	li	a5,120
     910:	00f71823          	sh	a5,16(a4)
	timeout = TIMEOUT_MAX;
     914:	6661                	lui	a2,0x18
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
     916:	400056b7          	lui	a3,0x40005
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_TRANSMITTER_MODE_SELECTED)) && (timeout--));
     91a:	00070737          	lui	a4,0x70
	timeout = TIMEOUT_MAX;
     91e:	6a060613          	addi	a2,a2,1696 # 186a0 <main.c.2fcf61dc+0x15ee2>
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
     922:	40068693          	addi	a3,a3,1024 # 40005400 <__global_pointer$+0x20004c00>
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_TRANSMITTER_MODE_SELECTED)) && (timeout--));
     926:	08270713          	addi	a4,a4,130 # 70082 <main.c.2fcf61dc+0x6d8c4>
     92a:	537d                	li	t1,-1
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
     92c:	0146d283          	lhu	t0,20(a3)
     930:	0186d783          	lhu	a5,24(a3)
     934:	07c2                	slli	a5,a5,0x10
     936:	0057e7b3          	or	a5,a5,t0
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_TRANSMITTER_MODE_SELECTED)) && (timeout--));
     93a:	8ff9                	and	a5,a5,a4
     93c:	fce782e3          	beq	a5,a4,900 <ssd1306_i2c_send.constprop.0.isra.0+0x8a>
     940:	167d                	addi	a2,a2,-1
     942:	fe6615e3          	bne	a2,t1,92c <ssd1306_i2c_send.constprop.0.isra.0+0xb6>
		return ssd1306_i2c_error(2);
     946:	4509                	li	a0,2
     948:	b79d                	j	8ae <ssd1306_i2c_send.constprop.0.isra.0+0x38>
	I2C1->CTLR1 |= I2C_CTLR1_START;
     94a:	0007d703          	lhu	a4,0(a5)
	timeout = TIMEOUT_MAX;
     94e:	66e1                	lui	a3,0x18
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_MODE_SELECT)) && (timeout--));
     950:	00030637          	lui	a2,0x30
	I2C1->CTLR1 |= I2C_CTLR1_START;
     954:	10076713          	ori	a4,a4,256
     958:	00e79023          	sh	a4,0(a5)
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
     95c:	40005737          	lui	a4,0x40005
	timeout = TIMEOUT_MAX;
     960:	6a068693          	addi	a3,a3,1696 # 186a0 <main.c.2fcf61dc+0x15ee2>
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
     964:	40070713          	addi	a4,a4,1024 # 40005400 <__global_pointer$+0x20004c00>
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_MODE_SELECT)) && (timeout--));
     968:	0605                	addi	a2,a2,1 # 30001 <main.c.2fcf61dc+0x2d843>
     96a:	537d                	li	t1,-1
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
     96c:	01475283          	lhu	t0,20(a4)
     970:	01875783          	lhu	a5,24(a4)
     974:	07c2                	slli	a5,a5,0x10
     976:	0057e7b3          	or	a5,a5,t0
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_MODE_SELECT)) && (timeout--));
     97a:	8ff1                	and	a5,a5,a2
     97c:	f8c788e3          	beq	a5,a2,90c <ssd1306_i2c_send.constprop.0.isra.0+0x96>
     980:	16fd                	addi	a3,a3,-1
     982:	fe6695e3          	bne	a3,t1,96c <ssd1306_i2c_send.constprop.0.isra.0+0xf6>
		return ssd1306_i2c_error(1);
     986:	4505                	li	a0,1
     988:	b71d                	j	8ae <ssd1306_i2c_send.constprop.0.isra.0+0x38>

0000098a <ssd1306_cmd.isra.0>:
uint8_t ssd1306_cmd(uint8_t cmd)
     98a:	fd810113          	addi	sp,sp,-40
	
	/* build command or data packets */
	if(cmd)
	{
		pkt[0] = 0;
		pkt[1] = *data;
     98e:	00a100a3          	sb	a0,1(sp)
	else
	{
		pkt[0] = 0x40;
		memcpy(&pkt[1], data, sz);
	}
	return ssd1306_i2c_send(SSD1306_I2C_ADDR, pkt, sz+1);
     992:	4589                	li	a1,2
     994:	850a                	mv	a0,sp
     996:	d206                	sw	ra,36(sp)
		pkt[0] = 0;
     998:	00010023          	sb	zero,0(sp)
	return ssd1306_i2c_send(SSD1306_I2C_ADDR, pkt, sz+1);
     99c:	3de9                	jal	876 <ssd1306_i2c_send.constprop.0.isra.0>
}
     99e:	5092                	lw	ra,36(sp)
     9a0:	02810113          	addi	sp,sp,40
     9a4:	8082                	ret

000009a6 <memset>:
     9a6:	962a                	add	a2,a2,a0
     9a8:	87aa                	mv	a5,a0
     9aa:	00c79363          	bne	a5,a2,9b0 <memset+0xa>
     9ae:	8082                	ret
     9b0:	00b78023          	sb	a1,0(a5)
     9b4:	0785                	addi	a5,a5,1
     9b6:	bfd5                	j	9aa <memset+0x4>

000009b8 <ssd1306_setbuf.constprop.0>:
	memset(ssd1306_buffer, color ? 0xFF : 0x00, sizeof(ssd1306_buffer));
     9b8:	20000537          	lui	a0,0x20000
     9bc:	40000613          	li	a2,1024
     9c0:	4581                	li	a1,0
     9c2:	02050513          	addi	a0,a0,32 # 20000020 <ssd1306_buffer>
     9c6:	b7c5                	j	9a6 <memset>

000009c8 <memcpy>:
     9c8:	4781                	li	a5,0
     9ca:	00f61363          	bne	a2,a5,9d0 <memcpy+0x8>
     9ce:	8082                	ret
     9d0:	00f58733          	add	a4,a1,a5
     9d4:	00074683          	lbu	a3,0(a4)
     9d8:	00f50733          	add	a4,a0,a5
     9dc:	0785                	addi	a5,a5,1
     9de:	00d70023          	sb	a3,0(a4)
     9e2:	b7e5                	j	9ca <memcpy+0x2>

000009e4 <ssd1306_refresh>:
{
     9e4:	7179                	addi	sp,sp,-48
	ssd1306_cmd(SSD1306_COLUMNADDR);
     9e6:	02100513          	li	a0,33
{
     9ea:	d606                	sw	ra,44(sp)
     9ec:	d422                	sw	s0,40(sp)
     9ee:	d226                	sw	s1,36(sp)
	ssd1306_cmd(SSD1306_COLUMNADDR);
     9f0:	3f69                	jal	98a <ssd1306_cmd.isra.0>
	ssd1306_cmd(SSD1306_OFFSET);   // Column start address (0 = reset)
     9f2:	4501                	li	a0,0
     9f4:	3f59                	jal	98a <ssd1306_cmd.isra.0>
	ssd1306_cmd(SSD1306_OFFSET+SSD1306_W-1); // Column end address (127 = reset)
     9f6:	07f00513          	li	a0,127
     9fa:	3f41                	jal	98a <ssd1306_cmd.isra.0>
	ssd1306_cmd(SSD1306_PAGEADDR);
     9fc:	02200513          	li	a0,34
     a00:	3769                	jal	98a <ssd1306_cmd.isra.0>
	ssd1306_cmd(0); // Page start address (0 = reset)
     a02:	4501                	li	a0,0
     a04:	3759                	jal	98a <ssd1306_cmd.isra.0>
	ssd1306_cmd(7); // Page end address
     a06:	20000437          	lui	s0,0x20000
     a0a:	451d                	li	a0,7
     a0c:	02040413          	addi	s0,s0,32 # 20000020 <ssd1306_buffer>
     a10:	3fad                	jal	98a <ssd1306_cmd.isra.0>
    for(i=0;i<sizeof(ssd1306_buffer);i+=SSD1306_PSZ)
     a12:	40040493          	addi	s1,s0,1024
		pkt[0] = 0x40;
     a16:	04000793          	li	a5,64
		memcpy(&pkt[1], data, sz);
     a1a:	85a2                	mv	a1,s0
     a1c:	02000613          	li	a2,32
     a20:	00110513          	addi	a0,sp,1
		pkt[0] = 0x40;
     a24:	00f10023          	sb	a5,0(sp)
		memcpy(&pkt[1], data, sz);
     a28:	3745                	jal	9c8 <memcpy>
	return ssd1306_i2c_send(SSD1306_I2C_ADDR, pkt, sz+1);
     a2a:	02100593          	li	a1,33
     a2e:	850a                	mv	a0,sp
     a30:	02040413          	addi	s0,s0,32
     a34:	3589                	jal	876 <ssd1306_i2c_send.constprop.0.isra.0>
     a36:	fe9410e3          	bne	s0,s1,a16 <ssd1306_refresh+0x32>
}
     a3a:	50b2                	lw	ra,44(sp)
     a3c:	5422                	lw	s0,40(sp)
     a3e:	5492                	lw	s1,36(sp)
     a40:	6145                	addi	sp,sp,48
     a42:	8082                	ret

00000a44 <opening>:

    GPIO_pinMode(BTN_PIN, GPIO_pinMode_I_pullUp, GPIO_Speed_10MHz);
}

void opening()
{
     a44:	d4410113          	addi	sp,sp,-700
     a48:	2a812a23          	sw	s0,692(sp)
     a4c:	2a112c23          	sw	ra,696(sp)
     a50:	2a912823          	sw	s1,688(sp)
    bool button_state = false;
    int c = 0;

    for (int i = 0; i < 20; i+=1) {
     a54:	4401                	li	s0,0
      ssd1306_setbuf(0);
     a56:	378d                	jal	9b8 <ssd1306_setbuf.constprop.0>
			ssd1306_drawstr_sz(38,i, "MOPPING", 1, fontsize_8x8);
     a58:	6485                	lui	s1,0x1
     a5a:	0ff47593          	zext.b	a1,s0
     a5e:	4685                	li	a3,1
     a60:	1a048613          	addi	a2,s1,416 # 11a0 <main+0x3a8>
     a64:	02600513          	li	a0,38
     a68:	3201                	jal	368 <ssd1306_drawstr_sz.constprop.0>
      ssd1306_refresh();
     a6a:	3fad                	jal	9e4 <ssd1306_refresh>
      Delay_Ms(10);
     a6c:	653d                	lui	a0,0xf
     a6e:	a6050513          	addi	a0,a0,-1440 # ea60 <main.c.2fcf61dc+0xc2a2>
     a72:	f8eff0ef          	jal	200 <DelaySysTick>
    for (int i = 0; i < 20; i+=1) {
     a76:	0405                	addi	s0,s0,1
     a78:	47d1                	li	a5,20
     a7a:	fcf41ee3          	bne	s0,a5,a56 <opening+0x12>
    int c = 0;
     a7e:	4401                	li	s0,0
    bool button_state = false;
     a80:	c002                	sw	zero,0(sp)
    }
    
    while (1) {
      ssd1306_setbuf(0);
     a82:	3f1d                	jal	9b8 <ssd1306_setbuf.constprop.0>

			ssd1306_drawstr_sz(38,20, "MOPPING", 1, fontsize_8x8);
     a84:	4685                	li	a3,1
     a86:	1a048613          	addi	a2,s1,416
     a8a:	45d1                	li	a1,20
     a8c:	02600513          	li	a0,38
     a90:	38e1                	jal	368 <ssd1306_drawstr_sz.constprop.0>

      if (c > 50) {
     a92:	03200793          	li	a5,50
     a96:	6605                	lui	a2,0x1
			  ssd1306_drawstr_sz(45,45, "start", 1, fontsize_8x8);
     a98:	4685                	li	a3,1
      if (c > 50) {
     a9a:	0087c363          	blt	a5,s0,aa0 <opening+0x5c>
        // ssd1306_drawRect(50, 50, 40, 10, 0);
      } else {
			  ssd1306_drawstr_sz(45,45, "start", 0, fontsize_8x8);
     a9e:	4681                	li	a3,0
     aa0:	02d00593          	li	a1,45
     aa4:	1a860613          	addi	a2,a2,424 # 11a8 <main+0x3b0>
     aa8:	852e                	mv	a0,a1
     aaa:	8bfff0ef          	jal	368 <ssd1306_drawstr_sz.constprop.0>
        // ssd1306_drawRect(50, 50, 40, 10, 1);
      }

      ssd1306_refresh();
     aae:	3f1d                	jal	9e4 <ssd1306_refresh>

      uint8_t button_is_pressed = !GPIO_digitalRead(BTN_PIN);
     ab0:	400117b7          	lui	a5,0x40011
     ab4:	40078793          	addi	a5,a5,1024 # 40011400 <__global_pointer$+0x20010c00>
     ab8:	479c                	lw	a5,8(a5)
      
      // ボタンを押して離した後にゲームに移る
      if (button_state && !button_is_pressed){
     aba:	4702                	lw	a4,0(sp)
     abc:	8b89                	andi	a5,a5,2
     abe:	c311                	beqz	a4,ac2 <opening+0x7e>
     ac0:	eb99                	bnez	a5,ad6 <opening+0x92>
        break;
      }
      button_state = button_is_pressed;
     ac2:	0017b793          	seqz	a5,a5
     ac6:	c03e                	sw	a5,0(sp)
      
      c ++;      
     ac8:	0405                	addi	s0,s0,1
      if (c > 100) {
     aca:	06500793          	li	a5,101
     ace:	faf41ae3          	bne	s0,a5,a82 <opening+0x3e>
        c = 0;
     ad2:	4401                	li	s0,0
     ad4:	b77d                	j	a82 <opening+0x3e>
    }
   
    int kuina_x = -130;
    int kuina_y = 0;
    int kuina_num = 19;
    character kuinas[19] = {
     ad6:	f7e00793          	li	a5,-130
     ada:	f8800593          	li	a1,-120
     ade:	f9200513          	li	a0,-110
     ae2:	f9c00313          	li	t1,-100
     ae6:	6689                	lui	a3,0x2
     ae8:	6709                	lui	a4,0x2
     aea:	ab868693          	addi	a3,a3,-1352 # 1ab8 <kuina_1>
     aee:	a9870713          	addi	a4,a4,-1384 # 1a98 <kuina_2>
     af2:	4605                	li	a2,1
     af4:	43f9                	li	t2,30
     af6:	cc3e                	sw	a5,24(sp)
     af8:	de2e                	sw	a1,60(sp)
     afa:	47c1                	li	a5,16
     afc:	03200593          	li	a1,50
     b00:	d0aa                	sw	a0,96(sp)
     b02:	c31a                	sw	t1,132(sp)
     b04:	4529                	li	a0,10
     b06:	fa600313          	li	t1,-90
     b0a:	d51a                	sw	t1,168(sp)
     b0c:	c636                	sw	a3,12(sp)
     b0e:	fb000313          	li	t1,-80
     b12:	c83a                	sw	a4,16(sp)
     b14:	ca32                	sw	a2,20(sp)
     b16:	ce02                	sw	zero,28(sp)
     b18:	d03e                	sw	a5,32(sp)
     b1a:	d23e                	sw	a5,36(sp)
     b1c:	d836                	sw	a3,48(sp)
     b1e:	da3a                	sw	a4,52(sp)
     b20:	dc32                	sw	a2,56(sp)
     b22:	c0ae                	sw	a1,64(sp)
     b24:	c2be                	sw	a5,68(sp)
     b26:	c4be                	sw	a5,72(sp)
     b28:	cab6                	sw	a3,84(sp)
     b2a:	ccba                	sw	a4,88(sp)
     b2c:	ceb2                	sw	a2,92(sp)
     b2e:	d2aa                	sw	a0,100(sp)
     b30:	d4be                	sw	a5,104(sp)
     b32:	d6be                	sw	a5,108(sp)
     b34:	dcb6                	sw	a3,120(sp)
     b36:	deba                	sw	a4,124(sp)
     b38:	c132                	sw	a2,128(sp)
     b3a:	c51e                	sw	t2,136(sp)
     b3c:	c73e                	sw	a5,140(sp)
     b3e:	c93e                	sw	a5,144(sp)
     b40:	cf36                	sw	a3,156(sp)
     b42:	d13a                	sw	a4,160(sp)
     b44:	d332                	sw	a2,164(sp)
     b46:	d702                	sw	zero,172(sp)
     b48:	c79a                	sw	t1,204(sp)
     b4a:	fba00313          	li	t1,-70
     b4e:	d99a                	sw	t1,240(sp)
     b50:	fc400313          	li	t1,-60
     b54:	42d1                	li	t0,20
     b56:	10612a23          	sw	t1,276(sp)
     b5a:	fce00493          	li	s1,-50
     b5e:	02800313          	li	t1,40
     b62:	12912c23          	sw	s1,312(sp)
     b66:	d93e                	sw	a5,176(sp)
     b68:	fd800493          	li	s1,-40
     b6c:	db3e                	sw	a5,180(sp)
     b6e:	c1b6                	sw	a3,192(sp)
     b70:	c3ba                	sw	a4,196(sp)
     b72:	c5b2                	sw	a2,200(sp)
     b74:	c9ae                	sw	a1,208(sp)
     b76:	cbbe                	sw	a5,212(sp)
     b78:	cdbe                	sw	a5,216(sp)
     b7a:	d3b6                	sw	a3,228(sp)
     b7c:	d5ba                	sw	a4,232(sp)
     b7e:	d7b2                	sw	a2,236(sp)
     b80:	db96                	sw	t0,244(sp)
     b82:	ddbe                	sw	a5,248(sp)
     b84:	dfbe                	sw	a5,252(sp)
     b86:	10d12423          	sw	a3,264(sp)
     b8a:	10e12623          	sw	a4,268(sp)
     b8e:	10c12823          	sw	a2,272(sp)
     b92:	10612c23          	sw	t1,280(sp)
     b96:	10f12e23          	sw	a5,284(sp)
     b9a:	12f12023          	sw	a5,288(sp)
     b9e:	12d12623          	sw	a3,300(sp)
     ba2:	12e12823          	sw	a4,304(sp)
     ba6:	12c12a23          	sw	a2,308(sp)
     baa:	12a12e23          	sw	a0,316(sp)
     bae:	14f12023          	sw	a5,320(sp)
     bb2:	14f12223          	sw	a5,324(sp)
     bb6:	14d12823          	sw	a3,336(sp)
     bba:	14e12a23          	sw	a4,340(sp)
     bbe:	14c12c23          	sw	a2,344(sp)
     bc2:	14912e23          	sw	s1,348(sp)
     bc6:	5489                	li	s1,-30
     bc8:	18912023          	sw	s1,384(sp)
     bcc:	54b1                	li	s1,-20
     bce:	1a912223          	sw	s1,420(sp)
     bd2:	54d9                	li	s1,-10
     bd4:	16b12023          	sw	a1,352(sp)
     bd8:	16f12223          	sw	a5,356(sp)
     bdc:	16f12423          	sw	a5,360(sp)
     be0:	16d12a23          	sw	a3,372(sp)
     be4:	16e12c23          	sw	a4,376(sp)
     be8:	16c12e23          	sw	a2,380(sp)
     bec:	18012223          	sw	zero,388(sp)
     bf0:	18f12423          	sw	a5,392(sp)
     bf4:	18f12623          	sw	a5,396(sp)
     bf8:	18d12c23          	sw	a3,408(sp)
     bfc:	18e12e23          	sw	a4,412(sp)
     c00:	1ac12023          	sw	a2,416(sp)
     c04:	1ab12423          	sw	a1,424(sp)
     c08:	1af12623          	sw	a5,428(sp)
     c0c:	1af12823          	sw	a5,432(sp)
     c10:	1ad12e23          	sw	a3,444(sp)
     c14:	1ce12023          	sw	a4,448(sp)
     c18:	1cc12223          	sw	a2,452(sp)
     c1c:	1c912423          	sw	s1,456(sp)
     c20:	1ca12623          	sw	a0,460(sp)
     c24:	1cf12823          	sw	a5,464(sp)
     c28:	1cf12a23          	sw	a5,468(sp)
     c2c:	1ed12023          	sw	a3,480(sp)
     c30:	1ee12223          	sw	a4,484(sp)
     c34:	1ec12423          	sw	a2,488(sp)
     c38:	1e012623          	sw	zero,492(sp)
     c3c:	1e712823          	sw	t2,496(sp)
     c40:	1ef12a23          	sw	a5,500(sp)
     c44:	1ef12c23          	sw	a5,504(sp)
     c48:	20d12223          	sw	a3,516(sp)
     c4c:	20e12423          	sw	a4,520(sp)
     c50:	20c12623          	sw	a2,524(sp)
     c54:	20a12823          	sw	a0,528(sp)
     c58:	20012a23          	sw	zero,532(sp)
     c5c:	20f12c23          	sw	a5,536(sp)
     c60:	20f12e23          	sw	a5,540(sp)
     c64:	22d12423          	sw	a3,552(sp)
     c68:	22e12623          	sw	a4,556(sp)
     c6c:	22c12823          	sw	a2,560(sp)
     c70:	22512a23          	sw	t0,564(sp)
     c74:	22b12c23          	sw	a1,568(sp)
     c78:	22f12e23          	sw	a5,572(sp)
     c7c:	24f12023          	sw	a5,576(sp)
     c80:	24d12623          	sw	a3,588(sp)
     c84:	24e12823          	sw	a4,592(sp)
     c88:	24c12a23          	sw	a2,596(sp)
     c8c:	24712c23          	sw	t2,600(sp)
     c90:	24512e23          	sw	t0,604(sp)
     c94:	26f12023          	sw	a5,608(sp)
     c98:	26f12223          	sw	a5,612(sp)
     c9c:	26d12823          	sw	a3,624(sp)
     ca0:	26e12a23          	sw	a4,628(sp)
     ca4:	26c12c23          	sw	a2,632(sp)
     ca8:	26612e23          	sw	t1,636(sp)
     cac:	28612023          	sw	t1,640(sp)
     cb0:	28f12223          	sw	a5,644(sp)
     cb4:	28f12423          	sw	a5,648(sp)
     cb8:	28d12a23          	sw	a3,660(sp)
     cbc:	28e12c23          	sw	a4,664(sp)
     cc0:	28c12e23          	sw	a2,668(sp)
     cc4:	2ab12023          	sw	a1,672(sp)
     cc8:	2aa12223          	sw	a0,676(sp)
     ccc:	2af12423          	sw	a5,680(sp)
     cd0:	2af12623          	sw	a5,684(sp)
      {100,kuina_1,kuina_1,kuina_2,1,kuina_x+170,kuina_y+40,16,16},
      {100,kuina_1,kuina_1,kuina_2,1,kuina_x+180,kuina_y+10,16,16},
    };

    while (1) {
      ssd1306_setbuf(0);
     cd4:	31d5                	jal	9b8 <ssd1306_setbuf.constprop.0>
      
      if (kuinas[18].x < 64){
     cd6:	2a012703          	lw	a4,672(sp)
     cda:	03f00793          	li	a5,63
     cde:	02e7c463          	blt	a5,a4,d06 <opening+0x2c2>
        ssd1306_drawstr_sz(38,20, "MOPPING", 1, fontsize_8x8);
     ce2:	6605                	lui	a2,0x1
     ce4:	4685                	li	a3,1
     ce6:	1a060613          	addi	a2,a2,416 # 11a0 <main+0x3a8>
     cea:	45d1                	li	a1,20
     cec:	02600513          	li	a0,38
     cf0:	e78ff0ef          	jal	368 <ssd1306_drawstr_sz.constprop.0>
        ssd1306_drawstr_sz(45,45, "start", 1, fontsize_8x8); 
     cf4:	6605                	lui	a2,0x1
     cf6:	02d00593          	li	a1,45
     cfa:	4685                	li	a3,1
     cfc:	1a860613          	addi	a2,a2,424 # 11a8 <main+0x3b0>
     d00:	852e                	mv	a0,a1
     d02:	e66ff0ef          	jal	368 <ssd1306_drawstr_sz.constprop.0>
      }

      for (int i = 0; i < kuina_num; i++) {
     d06:	0044                	addi	s1,sp,4
        if (kuinas[i].x > 0){
     d08:	48c8                	lw	a0,20(s1)
     d0a:	00a05f63          	blez	a0,d28 <opening+0x2e4>
          if (c < 10){
     d0e:	47a5                	li	a5,9
     d10:	0487c063          	blt	a5,s0,d50 <opening+0x30c>
            kuinas[i].img = kuinas[i].img_1;
     d14:	4490                	lw	a2,8(s1)
          }
          else {
            kuinas[i].img = kuinas[i].img_2; 
          }
          ssd1306_drawImage(kuinas[i].x, kuinas[i].y, kuinas[i].img, kuinas[i].w, kuinas[i].h, 0);
     d16:	0204c703          	lbu	a4,32(s1)
     d1a:	01c4c683          	lbu	a3,28(s1)
     d1e:	4c8c                	lw	a1,24(s1)
     d20:	c02a                	sw	a0,0(sp)
     d22:	f08ff0ef          	jal	42a <ssd1306_drawImage.constprop.0>
     d26:	4502                	lw	a0,0(sp)
        }
        kuinas[i].x += kuinas[i].speed;
     d28:	489c                	lw	a5,16(s1)
     d2a:	97aa                	add	a5,a5,a0
     d2c:	c8dc                	sw	a5,20(s1)
      for (int i = 0; i < kuina_num; i++) {
     d2e:	02448493          	addi	s1,s1,36
     d32:	1d1c                	addi	a5,sp,688
     d34:	fcf49ae3          	bne	s1,a5,d08 <opening+0x2c4>
      }

      ssd1306_refresh();
     d38:	3175                	jal	9e4 <ssd1306_refresh>

     
      if (kuinas[0].x > 128) {
     d3a:	4762                	lw	a4,24(sp)
     d3c:	08000793          	li	a5,128
     d40:	04e7c363          	blt	a5,a4,d86 <opening+0x342>
        break;
      }
      
      c ++;      
     d44:	0405                	addi	s0,s0,1
      if (c > 20) {
     d46:	47d1                	li	a5,20
     d48:	f887d6e3          	bge	a5,s0,cd4 <opening+0x290>
        c = 0;
     d4c:	4401                	li	s0,0
     d4e:	b759                	j	cd4 <opening+0x290>
            kuinas[i].img = kuinas[i].img_2; 
     d50:	44d0                	lw	a2,12(s1)
     d52:	b7d1                	j	d16 <opening+0x2d2>
        break;
      }

      c ++;      
      if (c > 20) {
        c = 0;
     d54:	4401                	li	s0,0
     d56:	0485                	addi	s1,s1,1
      ssd1306_setbuf(0);
     d58:	3185                	jal	9b8 <ssd1306_setbuf.constprop.0>
      if (c < 10){
     d5a:	47a5                	li	a5,9
     d5c:	0287c763          	blt	a5,s0,d8a <opening+0x346>
        mongoose.img = mongoose.img_1;
     d60:	6609                	lui	a2,0x2
     d62:	a8860613          	addi	a2,a2,-1400 # 1a88 <mongoose_left_1>
      ssd1306_drawImage(mongoose.x, mongoose.y, mongoose.img, mongoose.w, mongoose.h, 0);
     d66:	4721                	li	a4,8
     d68:	46c1                	li	a3,16
     d6a:	45f9                	li	a1,30
     d6c:	8526                	mv	a0,s1
     d6e:	ebcff0ef          	jal	42a <ssd1306_drawImage.constprop.0>
      ssd1306_refresh();
     d72:	398d                	jal	9e4 <ssd1306_refresh>
      if (mongoose.x > 128) {
     d74:	08000793          	li	a5,128
     d78:	00f48d63          	beq	s1,a5,d92 <opening+0x34e>
      c ++;      
     d7c:	0405                	addi	s0,s0,1
      if (c > 20) {
     d7e:	47d1                	li	a5,20
     d80:	fc87cae3          	blt	a5,s0,d54 <opening+0x310>
     d84:	bfc9                	j	d56 <opening+0x312>
     d86:	4481                	li	s1,0
     d88:	bfc1                	j	d58 <opening+0x314>
        mongoose.img = mongoose.img_2; 
     d8a:	6609                	lui	a2,0x2
     d8c:	a7860613          	addi	a2,a2,-1416 # 1a78 <mongoose_left_2>
     d90:	bfd9                	j	d66 <opening+0x322>
      } 
    }    
}
     d92:	2b812083          	lw	ra,696(sp)
     d96:	2b412403          	lw	s0,692(sp)
     d9a:	2b012483          	lw	s1,688(sp)
     d9e:	2bc10113          	addi	sp,sp,700
     da2:	8082                	ret

00000da4 <SystemInit>:
     da4:	400227b7          	lui	a5,0x40022
     da8:	4705                	li	a4,1
     daa:	c398                	sw	a4,0(a5)
     dac:	400217b7          	lui	a5,0x40021
     db0:	01080737          	lui	a4,0x1080
     db4:	0007a223          	sw	zero,4(a5) # 40021004 <__global_pointer$+0x20020804>
     db8:	08170713          	addi	a4,a4,129 # 1080081 <main.c.2fcf61dc+0x107d8c3>
     dbc:	c398                	sw	a4,0(a5)
     dbe:	009f0737          	lui	a4,0x9f0
     dc2:	c798                	sw	a4,8(a5)
     dc4:	4398                	lw	a4,0(a5)
     dc6:	00671693          	slli	a3,a4,0x6
     dca:	fe06dde3          	bgez	a3,dc4 <SystemInit+0x20>
     dce:	43d8                	lw	a4,4(a5)
     dd0:	400216b7          	lui	a3,0x40021
     dd4:	9b71                	andi	a4,a4,-4
     dd6:	00276713          	ori	a4,a4,2
     dda:	c3d8                	sw	a4,4(a5)
     ddc:	4721                	li	a4,8
     dde:	42dc                	lw	a5,4(a3)
     de0:	8bb1                	andi	a5,a5,12
     de2:	fee79ee3          	bne	a5,a4,dde <SystemInit+0x3a>
     de6:	e00007b7          	lui	a5,0xe0000
     dea:	0e07ac23          	sw	zero,248(a5) # e00000f8 <__global_pointer$+0xbffff8f8>
     dee:	08000713          	li	a4,128
     df2:	0ee7aa23          	sw	a4,244(a5)
     df6:	8082                	ret

00000df8 <main>:
  }
	Delay_Ms(2000);
}

int main()
{
     df8:	f4c10113          	addi	sp,sp,-180
     dfc:	d906                	sw	ra,176(sp)
     dfe:	d722                	sw	s0,172(sp)
     e00:	d526                	sw	s1,168(sp)
    GPIO_port_enable(GPIO_port_A);
     e02:	40021437          	lui	s0,0x40021
	// 48MHz internal clock
	SystemInit();
     e06:	3f79                	jal	da4 <SystemInit>
    GPIO_port_enable(GPIO_port_A);
     e08:	4c1c                	lw	a5,24(s0)
    GPIO_pinMode(BTN_PIN, GPIO_pinMode_I_pullUp, GPIO_Speed_10MHz);
     e0a:	400114b7          	lui	s1,0x40011

  init_gpio();

	Delay_Ms( 200 );
     e0e:	00125537          	lui	a0,0x125
    GPIO_port_enable(GPIO_port_A);
     e12:	0047e793          	ori	a5,a5,4
     e16:	cc1c                	sw	a5,24(s0)
    GPIO_port_enable(GPIO_port_D);
     e18:	4c1c                	lw	a5,24(s0)
	Delay_Ms( 200 );
     e1a:	f8050513          	addi	a0,a0,-128 # 124f80 <main.c.2fcf61dc+0x1227c2>
    GPIO_port_enable(GPIO_port_D);
     e1e:	0207e793          	ori	a5,a5,32
     e22:	cc1c                	sw	a5,24(s0)
    GPIO_port_enable(GPIO_port_C);
     e24:	4c1c                	lw	a5,24(s0)
     e26:	0107e793          	ori	a5,a5,16
     e2a:	cc1c                	sw	a5,24(s0)
    GPIO_pinMode(BTN_PIN, GPIO_pinMode_I_pullUp, GPIO_Speed_10MHz);
     e2c:	40048793          	addi	a5,s1,1024 # 40011400 <__global_pointer$+0x20010c00>
     e30:	4398                	lw	a4,0(a5)
     e32:	f0f77713          	andi	a4,a4,-241
     e36:	c398                	sw	a4,0(a5)
     e38:	4398                	lw	a4,0(a5)
     e3a:	08076713          	ori	a4,a4,128
     e3e:	c398                	sw	a4,0(a5)
     e40:	4709                	li	a4,2
     e42:	cb98                	sw	a4,16(a5)
	Delay_Ms( 200 );
     e44:	bbcff0ef          	jal	200 <DelaySysTick>
 * init I2C and GPIO
 */
uint8_t ssd1306_i2c_init(void)
{
	// Enable GPIOC and I2C
	RCC->APB2PCENR |= RCC_APB2Periph_GPIOC;
     e48:	4c1c                	lw	a5,24(s0)
	RCC->APB1PCENR |= RCC_APB1Periph_I2C1;
     e4a:	00200737          	lui	a4,0x200
	RCC->APB2PCENR |= RCC_APB2Periph_GPIOC;
     e4e:	0107e793          	ori	a5,a5,16
     e52:	cc1c                	sw	a5,24(s0)
	RCC->APB1PCENR |= RCC_APB1Periph_I2C1;
     e54:	4c5c                	lw	a5,28(s0)
     e56:	8fd9                	or	a5,a5,a4
     e58:	cc5c                	sw	a5,28(s0)
	
	// PC1 is SDA, 10MHz Output, alt func, open-drain
	GPIOC->CFGLR &= ~(0xf<<(4*1));
     e5a:	409c                	lw	a5,0(s1)
	GPIOC->CFGLR |= (GPIO_Speed_10MHz | GPIO_CNF_OUT_OD_AF)<<(4*1);
	
	// PC2 is SCL, 10MHz Output, alt func, open-drain
	GPIOC->CFGLR &= ~(0xf<<(4*2));
     e5c:	777d                	lui	a4,0xfffff
     e5e:	0ff70713          	addi	a4,a4,255 # fffff0ff <__global_pointer$+0xdfffe8ff>
	GPIOC->CFGLR &= ~(0xf<<(4*1));
     e62:	f0f7f793          	andi	a5,a5,-241
     e66:	c09c                	sw	a5,0(s1)
	GPIOC->CFGLR |= (GPIO_Speed_10MHz | GPIO_CNF_OUT_OD_AF)<<(4*1);
     e68:	409c                	lw	a5,0(s1)
{
	// pulse reset
	ssd1306_rst();
	
	// initialize OLED
	uint8_t *cmd_list = (uint8_t *)ssd1306_init_array;
     e6a:	6409                	lui	s0,0x2
     e6c:	a1c40413          	addi	s0,s0,-1508 # 1a1c <ssd1306_init_array>
     e70:	0d07e793          	ori	a5,a5,208
     e74:	c09c                	sw	a5,0(s1)
	GPIOC->CFGLR &= ~(0xf<<(4*2));
     e76:	409c                	lw	a5,0(s1)
     e78:	8ff9                	and	a5,a5,a4
     e7a:	c09c                	sw	a5,0(s1)
	GPIOC->CFGLR |= (GPIO_Speed_10MHz | GPIO_CNF_OUT_OD_AF)<<(4*2);
     e7c:	409c                	lw	a5,0(s1)
     e7e:	6705                	lui	a4,0x1
     e80:	d0070713          	addi	a4,a4,-768 # d00 <opening+0x2bc>
     e84:	8fd9                	or	a5,a5,a4
     e86:	c09c                	sw	a5,0(s1)
	GPIOC->CFGLR |= (GPIO_Speed_10MHz | GPIO_CNF_OUT_PP)<<(4*4);
	GPIOC->BSHR = (1<<(16+4));
#endif

	// load I2C regs
	ssd1306_i2c_setup();
     e88:	c4aff0ef          	jal	2d2 <ssd1306_i2c_setup>
	while(*cmd_list != SSD1306_TERMINATE_CMDS)
     e8c:	00044503          	lbu	a0,0(s0)
     e90:	0ff00793          	li	a5,255
     e94:	0cf51363          	bne	a0,a5,f5a <main+0x162>
		if(ssd1306_cmd(*cmd_list++))
			return 1;
	}
	
	// clear display
	ssd1306_setbuf(0);
     e98:	3605                	jal	9b8 <ssd1306_setbuf.constprop.0>
	ssd1306_refresh();
     e9a:	36a9                	jal	9e4 <ssd1306_refresh>

	if (!ssd1306_i2c_init()) {
		ssd1306_init();

    opening();
     e9c:	3665                	jal	a44 <opening>
    
    // clear display
    ssd1306_setbuf(0);
     e9e:	3e29                	jal	9b8 <ssd1306_setbuf.constprop.0>
    ssd1306_refresh();
     ea0:	3691                	jal	9e4 <ssd1306_refresh>
  character enemy[3] = {
     ea2:	6585                	lui	a1,0x1
     ea4:	06c00613          	li	a2,108
     ea8:	10458593          	addi	a1,a1,260 # 1104 <main+0x30c>
     eac:	1868                	addi	a0,sp,60
     eae:	3e29                	jal	9c8 <memcpy>
  int random_n = get_random(10);
     eb0:	4529                	li	a0,10
     eb2:	c74ff0ef          	jal	326 <get_random>
  character kuina = {100,kuina_1,kuina_1,kuina_2,0,init_kuina_x,init_kuina_y,16,16};
     eb6:	02d00793          	li	a5,45
  bool flip_flag = false;
     eba:	c602                	sw	zero,12(sp)
  int flip_c = 0;
     ebc:	c402                	sw	zero,8(sp)
  character kuina = {100,kuina_1,kuina_1,kuina_2,0,init_kuina_x,init_kuina_y,16,16};
     ebe:	c03e                	sw	a5,0(sp)
  int jump_progress = 0;
     ec0:	4401                	li	s0,0
  bool jump_flag = false;
     ec2:	c202                	sw	zero,4(sp)
  bool button_state = false;
     ec4:	c802                	sw	zero,16(sp)
    uint8_t button_is_pressed = !GPIO_digitalRead(BTN_PIN); 
     ec6:	400117b7          	lui	a5,0x40011
     eca:	40078793          	addi	a5,a5,1024 # 40011400 <__global_pointer$+0x20010c00>
     ece:	479c                	lw	a5,8(a5)
    if (!button_state && button_is_pressed && !jump_flag){
     ed0:	4742                	lw	a4,16(sp)
     ed2:	8b89                	andi	a5,a5,2
     ed4:	e311                	bnez	a4,ed8 <main+0xe0>
     ed6:	c7c9                	beqz	a5,f60 <main+0x168>
    button_state = button_is_pressed;
     ed8:	0017b793          	seqz	a5,a5
     edc:	c83e                	sw	a5,16(sp)
    if (jump_flag && (max_jump * 2) < jump_progress){
     ede:	4792                	lw	a5,4(sp)
     ee0:	c385                	beqz	a5,f00 <main+0x108>
     ee2:	03c00793          	li	a5,60
     ee6:	0887c363          	blt	a5,s0,f6c <main+0x174>
    else if (jump_flag && max_jump >= jump_progress){
     eea:	4779                	li	a4,30
      jump_progress += 1;
     eec:	00140793          	addi	a5,s0,1
    else if (jump_flag && max_jump >= jump_progress){
     ef0:	06874b63          	blt	a4,s0,f66 <main+0x16e>
      kuina.y -= 1;
     ef4:	4702                	lw	a4,0(sp)
     ef6:	177d                	addi	a4,a4,-1
      jump_progress += 1;
     ef8:	843e                	mv	s0,a5
      kuina.y += 1;
     efa:	4785                	li	a5,1
     efc:	c03a                	sw	a4,0(sp)
     efe:	c23e                	sw	a5,4(sp)
    flip_c ++;
     f00:	47a2                	lw	a5,8(sp)
     f02:	0785                	addi	a5,a5,1
     f04:	c43e                	sw	a5,8(sp)
    if (flip_c > 20) {
     f06:	4722                	lw	a4,8(sp)
     f08:	47d5                	li	a5,21
     f0a:	00f71763          	bne	a4,a5,f18 <main+0x120>
      flip_flag = !flip_flag;
     f0e:	47b2                	lw	a5,12(sp)
      flip_c = 0;
     f10:	c402                	sw	zero,8(sp)
      flip_flag = !flip_flag;
     f12:	0017c793          	xori	a5,a5,1
     f16:	c63e                	sw	a5,12(sp)
    if (enemy[0].x < 0) {
     f18:	47c6                	lw	a5,80(sp)
     f1a:	0a07de63          	bgez	a5,fd6 <main+0x1de>
      enemy[0] = enemy[1];
     f1e:	02400613          	li	a2,36
     f22:	108c                	addi	a1,sp,96
     f24:	1868                	addi	a0,sp,60
     f26:	344d                	jal	9c8 <memcpy>
      enemy[1] = enemy[2];
     f28:	02400613          	li	a2,36
     f2c:	014c                	addi	a1,sp,132
     f2e:	1088                	addi	a0,sp,96
     f30:	3c61                	jal	9c8 <memcpy>
  int character_n = get_random(10);
     f32:	4529                	li	a0,10
     f34:	bf2ff0ef          	jal	326 <get_random>
  if (character_n <= 5){
     f38:	4795                	li	a5,5
     f3a:	02a7cf63          	blt	a5,a0,f78 <main+0x180>
    enemy[2].img = grass_1;
     f3e:	81818793          	addi	a5,gp,-2024 # 20000018 <grass_1>
     f42:	c53e                	sw	a5,136(sp)
    enemy[2].img_1 = grass_1;
     f44:	c73e                	sw	a5,140(sp)
    enemy[2].img_2 = grass_1;
     f46:	c93e                	sw	a5,144(sp)
    enemy[2].speed = 1;
     f48:	4785                	li	a5,1
     f4a:	cb3e                	sw	a5,148(sp)
    enemy[2].y = 53;
     f4c:	03500793          	li	a5,53
     f50:	cf3e                	sw	a5,156(sp)
    enemy[2].id = 0;
     f52:	c302                	sw	zero,132(sp)
    enemy[2].w = 8;
     f54:	47a1                	li	a5,8
    enemy[2].w = 8;
     f56:	d13e                	sw	a5,160(sp)
     f58:	a0b5                	j	fc4 <main+0x1cc>
		if(ssd1306_cmd(*cmd_list++))
     f5a:	0405                	addi	s0,s0,1
     f5c:	343d                	jal	98a <ssd1306_cmd.isra.0>
     f5e:	b73d                	j	e8c <main+0x94>
    button_state = button_is_pressed;
     f60:	4785                	li	a5,1
     f62:	c83e                	sw	a5,16(sp)
     f64:	bfbd                	j	ee2 <main+0xea>
      kuina.y += 1;
     f66:	4702                	lw	a4,0(sp)
     f68:	0705                	addi	a4,a4,1
     f6a:	b779                	j	ef8 <main+0x100>
      kuina.y = init_kuina_y;
     f6c:	02d00793          	li	a5,45
     f70:	c03e                	sw	a5,0(sp)
      jump_progress = 0;
     f72:	4401                	li	s0,0
      jump_flag = false;
     f74:	c202                	sw	zero,4(sp)
     f76:	b769                	j	f00 <main+0x108>
  else if (character_n <= 8){
     f78:	47a1                	li	a5,8
     f7a:	02a7c063          	blt	a5,a0,f9a <main+0x1a2>
    enemy[2].img = pineapple_1;
     f7e:	6789                	lui	a5,0x2
     f80:	a5878793          	addi	a5,a5,-1448 # 1a58 <pineapple_1>
    enemy[2].id = 1;
     f84:	4705                	li	a4,1
    enemy[2].img = pineapple_1;
     f86:	c53e                	sw	a5,136(sp)
    enemy[2].img_1 = pineapple_1;
     f88:	c73e                	sw	a5,140(sp)
    enemy[2].img_2 = pineapple_1;
     f8a:	c93e                	sw	a5,144(sp)
    enemy[2].y = 45;
     f8c:	02d00793          	li	a5,45
     f90:	cf3e                	sw	a5,156(sp)
    enemy[2].id = 1;
     f92:	c33a                	sw	a4,132(sp)
    enemy[2].speed = 1;
     f94:	cb3a                	sw	a4,148(sp)
    enemy[2].w = 16;
     f96:	47c1                	li	a5,16
     f98:	bf7d                	j	f56 <main+0x15e>
  else if (character_n <= 9){
     f9a:	4725                	li	a4,9
     f9c:	10e51863          	bne	a0,a4,10ac <main+0x2b4>
    enemy[2].id = 2;
     fa0:	4709                	li	a4,2
     fa2:	c33a                	sw	a4,132(sp)
    enemy[2].img = mongoose_1;
     fa4:	6709                	lui	a4,0x2
     fa6:	a4870713          	addi	a4,a4,-1464 # 1a48 <mongoose_1>
     faa:	c53a                	sw	a4,136(sp)
    enemy[2].img_1 = mongoose_1;
     fac:	c73a                	sw	a4,140(sp)
    enemy[2].img_2 = mongoose_2;
     fae:	6709                	lui	a4,0x2
     fb0:	a3870713          	addi	a4,a4,-1480 # 1a38 <mongoose_2>
     fb4:	c93a                	sw	a4,144(sp)
    enemy[2].speed = 1;
     fb6:	4705                	li	a4,1
     fb8:	cb3a                	sw	a4,148(sp)
    enemy[2].y = 53;
     fba:	03500713          	li	a4,53
     fbe:	cf3a                	sw	a4,156(sp)
    enemy[2].w = 16;
     fc0:	4741                	li	a4,16
     fc2:	d13a                	sw	a4,160(sp)
    enemy[2].h = 8;
     fc4:	d33e                	sw	a5,164(sp)
  int enemy_distance = get_random(30);
     fc6:	4579                	li	a0,30
     fc8:	b5eff0ef          	jal	326 <get_random>
  enemy[2].x = enemy[1].x + distance_buffer + enemy_distance;
     fcc:	57d6                	lw	a5,116(sp)
     fce:	03c78793          	addi	a5,a5,60
     fd2:	97aa                	add	a5,a5,a0
     fd4:	cd3e                	sw	a5,152(sp)
    if (flip_flag){
     fd6:	47b2                	lw	a5,12(sp)
     fd8:	0e078e63          	beqz	a5,10d4 <main+0x2dc>
      enemy[0].img = enemy[0].img_1;
     fdc:	4716                	lw	a4,68(sp)
     fde:	103c                	addi	a5,sp,40
      enemy[2].img = enemy[2].img_1;
     fe0:	53fc                	lw	a5,100(a5)
      enemy[0].img = enemy[0].img_1;
     fe2:	c0ba                	sw	a4,64(sp)
      enemy[1].img = enemy[1].img_1;
     fe4:	5726                	lw	a4,104(sp)
      kuina.img = kuina.img_1;
     fe6:	6609                	lui	a2,0x2
     fe8:	ab860613          	addi	a2,a2,-1352 # 1ab8 <kuina_1>
      enemy[1].img = enemy[1].img_1;
     fec:	d2ba                	sw	a4,100(sp)
    ssd1306_drawImage(kuina.x, kuina.y, kuina.img, kuina.w, kuina.h, 0);
     fee:	4582                	lw	a1,0(sp)
     ff0:	4741                	li	a4,16
     ff2:	86ba                	mv	a3,a4
     ff4:	453d                	li	a0,15
      enemy[2].img = enemy[2].img_1;
     ff6:	c53e                	sw	a5,136(sp)
     ff8:	1864                	addi	s1,sp,60
    ssd1306_drawImage(kuina.x, kuina.y, kuina.img, kuina.w, kuina.h, 0);
     ffa:	c30ff0ef          	jal	42a <ssd1306_drawImage.constprop.0>
      ssd1306_drawImage(enemy[i].x, enemy[i].y, enemy[i].img, enemy[i].w, enemy[i].h, 0);
     ffe:	0204a303          	lw	t1,32(s1)
    1002:	48c8                	lw	a0,20(s1)
    1004:	01c4c683          	lbu	a3,28(s1)
    1008:	40d0                	lw	a2,4(s1)
    100a:	4c8c                	lw	a1,24(s1)
    100c:	0ff37713          	zext.b	a4,t1
    1010:	ca2a                	sw	a0,20(sp)
    1012:	cc1a                	sw	t1,24(sp)
    1014:	c16ff0ef          	jal	42a <ssd1306_drawImage.constprop.0>
      enemy[i].x -= 1;
    1018:	4552                	lw	a0,20(sp)
    101a:	fff50793          	addi	a5,a0,-1
    101e:	c8dc                	sw	a5,20(s1)
      if (kuina.x + 12 < enemy[i].x + 12 && (kuina.x + 12 + kuina.w) > enemy[i].x + 12 && kuina.y > (init_kuina_y - enemy[i].h)) {
    1020:	153d                	addi	a0,a0,-17
    1022:	47b9                	li	a5,14
    1024:	0ca7e263          	bltu	a5,a0,10e8 <main+0x2f0>
    1028:	4362                	lw	t1,24(sp)
    102a:	4702                	lw	a4,0(sp)
    102c:	02d00793          	li	a5,45
    1030:	406787b3          	sub	a5,a5,t1
    1034:	0ae7da63          	bge	a5,a4,10e8 <main+0x2f0>
        if (enemy[i].id == 1 | enemy[i].id == 2){
    1038:	409c                	lw	a5,0(s1)
    103a:	4685                	li	a3,1
    103c:	17fd                	addi	a5,a5,-1
    103e:	0af6e563          	bltu	a3,a5,10e8 <main+0x2f0>
		      ssd1306_drawstr_sz(25,30, "GAME OVER!!", 1, fontsize_8x8);
    1042:	6605                	lui	a2,0x1
    1044:	1b460613          	addi	a2,a2,436 # 11b4 <main+0x3bc>
    1048:	45f9                	li	a1,30
    104a:	4565                	li	a0,25
    104c:	b1cff0ef          	jal	368 <ssd1306_drawstr_sz.constprop.0>
          loop_flag = false;
    1050:	4481                	li	s1,0
    char score_txt[30] = "Score:"; 
    1052:	726f67b7          	lui	a5,0x726f6
    1056:	35378793          	addi	a5,a5,851 # 726f6353 <__global_pointer$+0x526f5b53>
    105a:	ce3e                	sw	a5,28(sp)
    105c:	6791                	lui	a5,0x4
    105e:	a6578793          	addi	a5,a5,-1435 # 3a65 <main.c.2fcf61dc+0x12a7>
    1062:	4659                	li	a2,22
    1064:	4581                	li	a1,0
    1066:	1048                	addi	a0,sp,36
    1068:	d03e                	sw	a5,32(sp)
    106a:	93dff0ef          	jal	9a6 <memset>
    106e:	087c                	addi	a5,sp,28
    while (*dest != '\0') {
    1070:	0007c703          	lbu	a4,0(a5)
    1074:	e349                	bnez	a4,10f6 <main+0x2fe>
    1076:	6705                	lui	a4,0x1
    1078:	1b070713          	addi	a4,a4,432 # 11b0 <main+0x3b8>
    while (*src != '\0') {
    107c:	00074683          	lbu	a3,0(a4)
    1080:	eead                	bnez	a3,10fa <main+0x302>
    *dest = '\0';
    1082:	00078023          	sb	zero,0(a5)
		ssd1306_drawstr_sz(0,0, score_txt, 1, fontsize_8x8);
    1086:	4685                	li	a3,1
    1088:	0870                	addi	a2,sp,28
    108a:	4581                	li	a1,0
    108c:	4501                	li	a0,0
    108e:	adaff0ef          	jal	368 <ssd1306_drawstr_sz.constprop.0>
    ssd1306_refresh();
    1092:	953ff0ef          	jal	9e4 <ssd1306_refresh>
    ssd1306_setbuf(0);
    1096:	923ff0ef          	jal	9b8 <ssd1306_setbuf.constprop.0>
  while (loop_flag) {
    109a:	e20496e3          	bnez	s1,ec6 <main+0xce>
	Delay_Ms(2000);
    109e:	00b72537          	lui	a0,0xb72
    10a2:	b0050513          	addi	a0,a0,-1280 # b71b00 <main.c.2fcf61dc+0xb6f342>
    10a6:	95aff0ef          	jal	200 <DelaySysTick>
}
    10aa:	bbe5                	j	ea2 <main+0xaa>
  else if (character_n <= 10){
    10ac:	4729                	li	a4,10
    10ae:	f0e51ce3          	bne	a0,a4,fc6 <main+0x1ce>
    enemy[2].id = 3;
    10b2:	470d                	li	a4,3
    10b4:	c33a                	sw	a4,132(sp)
    enemy[2].img = earthworm_1;
    10b6:	81018713          	addi	a4,gp,-2032 # 20000010 <earthworm_1>
    10ba:	c53a                	sw	a4,136(sp)
    enemy[2].img_1 = earthworm_1;
    10bc:	c73a                	sw	a4,140(sp)
    enemy[2].img_2 = earthworm_2;
    10be:	20000737          	lui	a4,0x20000
    10c2:	00870713          	addi	a4,a4,8 # 20000008 <earthworm_2>
    10c6:	c93a                	sw	a4,144(sp)
    enemy[2].speed = 1;
    10c8:	4705                	li	a4,1
    10ca:	cb3a                	sw	a4,148(sp)
    enemy[2].y = 53;
    10cc:	03500713          	li	a4,53
    10d0:	cf3a                	sw	a4,156(sp)
    10d2:	b551                	j	f56 <main+0x15e>
      enemy[0].img = enemy[0].img_2;
    10d4:	4726                	lw	a4,72(sp)
    10d6:	103c                	addi	a5,sp,40
      kuina.img = kuina.img_2;
    10d8:	6609                	lui	a2,0x2
      enemy[0].img = enemy[0].img_2;
    10da:	c0ba                	sw	a4,64(sp)
      enemy[1].img = enemy[1].img_2;
    10dc:	5736                	lw	a4,108(sp)
      enemy[2].img = enemy[2].img_2;
    10de:	57bc                	lw	a5,104(a5)
      kuina.img = kuina.img_2;
    10e0:	a9860613          	addi	a2,a2,-1384 # 1a98 <kuina_2>
      enemy[1].img = enemy[1].img_2;
    10e4:	d2ba                	sw	a4,100(sp)
    10e6:	b721                	j	fee <main+0x1f6>
    for (int i=0; i < 3; i++){
    10e8:	02448493          	addi	s1,s1,36
    10ec:	113c                	addi	a5,sp,168
    10ee:	f0f498e3          	bne	s1,a5,ffe <main+0x206>
    10f2:	4485                	li	s1,1
    10f4:	bfb9                	j	1052 <main+0x25a>
        dest++;
    10f6:	0785                	addi	a5,a5,1
    10f8:	bfa5                	j	1070 <main+0x278>
        *dest = *src;
    10fa:	00d78023          	sb	a3,0(a5)
        src++;
    10fe:	0705                	addi	a4,a4,1
        dest++;
    1100:	0785                	addi	a5,a5,1
    1102:	bfad                	j	107c <main+0x284>
    1104:	0000                	unimp
    1106:	0000                	unimp
    1108:	0018                	.insn	2, 0x0018
    110a:	2000                	.insn	2, 0x2000
    110c:	0018                	.insn	2, 0x0018
    110e:	2000                	.insn	2, 0x2000
    1110:	0018                	.insn	2, 0x0018
    1112:	2000                	.insn	2, 0x2000
    1114:	0001                	nop
    1116:	0000                	unimp
    1118:	0082                	c.slli64	ra
    111a:	0000                	unimp
    111c:	0035                	c.nop	13
    111e:	0000                	unimp
    1120:	0008                	.insn	2, 0x0008
    1122:	0000                	unimp
    1124:	0008                	.insn	2, 0x0008
    1126:	0000                	unimp
    1128:	0000                	unimp
    112a:	0000                	unimp
    112c:	0018                	.insn	2, 0x0018
    112e:	2000                	.insn	2, 0x2000
    1130:	0018                	.insn	2, 0x0018
    1132:	2000                	.insn	2, 0x2000
    1134:	0018                	.insn	2, 0x0018
    1136:	2000                	.insn	2, 0x2000
    1138:	0001                	nop
    113a:	0000                	unimp
    113c:	00a0                	addi	s0,sp,72
    113e:	0000                	unimp
    1140:	0035                	c.nop	13
    1142:	0000                	unimp
    1144:	0008                	.insn	2, 0x0008
    1146:	0000                	unimp
    1148:	0008                	.insn	2, 0x0008
    114a:	0000                	unimp
    114c:	0001                	nop
    114e:	0000                	unimp
    1150:	1a58                	addi	a4,sp,308
    1152:	0000                	unimp
    1154:	1a58                	addi	a4,sp,308
    1156:	0000                	unimp
    1158:	1a58                	addi	a4,sp,308
    115a:	0000                	unimp
    115c:	0001                	nop
    115e:	0000                	unimp
    1160:	00d2                	slli	ra,ra,0x14
    1162:	0000                	unimp
    1164:	002d                	c.nop	11
    1166:	0000                	unimp
    1168:	0010                	.insn	2, 0x0010
    116a:	0000                	unimp
    116c:	0010                	.insn	2, 0x0010
    116e:	0000                	unimp
    1170:	31647373          	.insn	4, 0x31647373
    1174:	5f363033          	.insn	4, 0x5f363033
    1178:	3269                	jal	b02 <opening+0xbe>
    117a:	72655f63          	bge	a0,t1,18b8 <fontdata+0x69c>
    117e:	6f72                	.insn	2, 0x6f72
    1180:	2072                	.insn	2, 0x2072
    1182:	202d                	jal	11ac <main+0x3b4>
    1184:	6974                	.insn	2, 0x6974
    1186:	656d                	lui	a0,0x1b
    1188:	2074756f          	jal	a0,48b8e <main.c.2fcf61dc+0x463d0>
    118c:	74696177          	.insn	4, 0x74696177
    1190:	6e69                	lui	t3,0x1a
    1192:	6f662067          	.insn	4, 0x6f662067
    1196:	2072                	.insn	2, 0x2072
    1198:	7325                	lui	t1,0xfffe9
    119a:	0d0a                	slli	s10,s10,0x2
    119c:	0000                	unimp
    119e:	0000                	unimp
    11a0:	4f4d                	li	t5,19
    11a2:	5050                	lw	a2,36(s0)
    11a4:	4e49                	li	t3,18
    11a6:	74730047          	.insn	4, 0x74730047
    11aa:	7261                	lui	tp,0xffff8
    11ac:	0074                	addi	a3,sp,12
    11ae:	0000                	unimp
    11b0:	3031                	jal	9bc <ssd1306_setbuf.constprop.0+0x4>
    11b2:	0000                	unimp
    11b4:	454d4147          	.insn	4, 0x454d4147
    11b8:	4f20                	lw	s0,88(a4)
    11ba:	4556                	lw	a0,84(sp)
    11bc:	2152                	.insn	2, 0x2152
    11be:	0021                	c.nop	8
    11c0:	6f6e                	.insn	2, 0x6f6e
    11c2:	2074                	.insn	2, 0x2074
    11c4:	7562                	.insn	2, 0x7562
    11c6:	00007973          	.insn	4, 0x7973
    11ca:	0000                	unimp
    11cc:	616d                	addi	sp,sp,240
    11ce:	72657473          	.insn	4, 0x72657473
    11d2:	6d20                	.insn	2, 0x6d20
    11d4:	0065646f          	jal	s0,571da <main.c.2fcf61dc+0x54a1c>
    11d8:	7274                	.insn	2, 0x7274
    11da:	6e61                	lui	t3,0x18
    11dc:	74696d73          	.insn	4, 0x74696d73
    11e0:	6d20                	.insn	2, 0x6d20
    11e2:	0065646f          	jal	s0,571e8 <main.c.2fcf61dc+0x54a2a>
    11e6:	0000                	unimp
    11e8:	7874                	.insn	2, 0x7874
    11ea:	6520                	.insn	2, 0x6520
    11ec:	706d                	c.lui	zero,0xffffb
    11ee:	7974                	.insn	2, 0x7974
    11f0:	0000                	unimp
    11f2:	0000                	unimp
    11f4:	7274                	.insn	2, 0x7274
    11f6:	6e61                	lui	t3,0x18
    11f8:	74696d73          	.insn	4, 0x74696d73
    11fc:	6320                	.insn	2, 0x6320
    11fe:	6c706d6f          	jal	s10,80c4 <main.c.2fcf61dc+0x5906>
    1202:	7465                	lui	s0,0xffff9
    1204:	0065                	c.nop	25
	...

00001208 <errstr>:
    1208:	11c0 0000 11cc 0000 11d8 0000 11e8 0000     ................
    1218:	11f4 0000                                   ....

0000121c <fontdata>:
	...
    1224:	817e 81a5 99bd 7e81 ff7e ffdb e7c3 7eff     ~......~~......~
    1234:	fe6c fefe 387c 0010 3810 fe7c 387c 0010     l...|8...8|.|8..
    1244:	7c38 fe38 d6fe 3810 3810 fe7c 7cfe 3810     8|8....8.8|..|.8
    1254:	0000 3c18 183c 0000 ffff c3e7 e7c3 ffff     ...<<...........
    1264:	3c00 4266 6642 003c c3ff bd99 99bd ffc3     .<fBBf<.........
    1274:	070f 7d0f cccc 78cc 663c 6666 183c 187e     ...}...x<fff<.~.
    1284:	333f 303f 7030 e0f0 637f 637f 6763 c0e6     ?3?00p...c.ccg..
    1294:	db18 e73c 3ce7 18db e080 fef8 e0f8 0080     ..<..<..........
    12a4:	0e02 fe3e 0e3e 0002 3c18 187e 7e18 183c     ..>.>....<~..~<.
    12b4:	6666 6666 0066 0066 db7f 7bdb 1b1b 001b     fffff.f....{....
    12c4:	613e 663c 3c66 7c86 0000 0000 7e7e 007e     >a<ff<.|....~~~.
    12d4:	3c18 187e 3c7e ff18 3c18 187e 1818 0018     .<~.~<...<~.....
    12e4:	1818 1818 3c7e 0018 1800 fe0c 180c 0000     ....~<..........
    12f4:	3000 fe60 3060 0000 0000 c0c0 fec0 0000     .0`.`0..........
    1304:	2400 ff66 2466 0000 1800 7e3c ffff 0000     .$f.f$....<~....
    1314:	ff00 7eff 183c 0000 0000 0000 0000 0000     ...~<...........
    1324:	3c18 183c 0018 0018 6666 0024 0000 0000     .<<.....ff$.....
    1334:	6c6c 6cfe 6cfe 006c 3e18 3c60 7c06 0018     ll.l.ll..>`<.|..
    1344:	c600 18cc 6630 00c6 6c38 7638 ccdc 0076     ....0f..8l8v..v.
    1354:	1818 0030 0000 0000 180c 3030 1830 000c     ..0.......000...
    1364:	1830 0c0c 180c 0030 6600 ff3c 663c 0000     0.....0..f<.<f..
    1374:	1800 7e18 1818 0000 0000 0000 1800 3018     ...~...........0
    1384:	0000 7e00 0000 0000 0000 0000 1800 0018     ...~............
    1394:	0c06 3018 c060 0080 6c38 d6c6 6cc6 0038     ...0`...8l...l8.
    13a4:	3818 1818 1818 007e c67c 1c06 6630 00fe     .8....~.|...0f..
    13b4:	c67c 3c06 c606 007c 3c1c cc6c 0cfe 001e     |..<..|..<l.....
    13c4:	c0fe fcc0 c606 007c 6038 fcc0 c6c6 007c     ......|.8`....|.
    13d4:	c6fe 180c 3030 0030 c67c 7cc6 c6c6 007c     ....000.|..|..|.
    13e4:	c67c 7ec6 0c06 0078 1800 0018 1800 0018     |..~..x.........
    13f4:	1800 0018 1800 3018 0c06 3018 0c18 0006     .......0...0....
    1404:	0000 007e 7e00 0000 3060 0c18 3018 0060     ..~..~..`0...0`.
    1414:	c67c 180c 0018 0018 c67c dede c0de 0078     |.......|.....x.
    1424:	6c38 fec6 c6c6 00c6 66fc 7c66 6666 00fc     8l.......ff|ff..
    1434:	663c c0c0 66c0 003c 6cf8 6666 6c66 00f8     <f...f<..lfffl..
    1444:	62fe 7868 6268 00fe 62fe 7868 6068 00f0     .bhxhb...bhxh`..
    1454:	663c c0c0 66ce 003a c6c6 fec6 c6c6 00c6     <f...f:.........
    1464:	183c 1818 1818 003c 0c1e 0c0c cccc 0078     <.....<.......x.
    1474:	66e6 786c 666c 00e6 60f0 6060 6662 00fe     .flxlf...```bf..
    1484:	eec6 fefe c6d6 00c6 e6c6 def6 c6ce 00c6     ................
    1494:	c67c c6c6 c6c6 007c 66fc 7c66 6060 00f0     |.....|..ff|``..
    14a4:	c67c c6c6 cec6 0e7c 66fc 7c66 666c 00e6     |.....|..ff|lf..
    14b4:	663c 1830 660c 003c 7e7e 185a 1818 003c     <f0..f<.~~Z...<.
    14c4:	c6c6 c6c6 c6c6 007c c6c6 c6c6 6cc6 0038     ......|......l8.
    14d4:	c6c6 d6c6 fed6 006c c6c6 386c c66c 00c6     ......l...l8l...
    14e4:	6666 3c66 1818 003c c6fe 188c 6632 00fe     fff<..<.....2f..
    14f4:	303c 3030 3030 003c 60c0 1830 060c 0002     <00000<..`0.....
    1504:	0c3c 0c0c 0c0c 003c 3810 c66c 0000 0000     <.....<..8l.....
    1514:	0000 0000 0000 ff00 1830 000c 0000 0000     ........0.......
    1524:	0000 0c78 cc7c 0076 60e0 667c 6666 00dc     ..x.|.v..`|fff..
    1534:	0000 c67c c6c0 007c 0c1c cc7c cccc 0076     ..|...|...|...v.
    1544:	0000 c67c c0fe 007c 663c f860 6060 00f0     ..|...|.<f`.``..
    1554:	0000 cc76 7ccc f80c 60e0 766c 6666 00e6     ..v..|...`lvff..
    1564:	0018 1838 1818 003c 0006 0606 6606 3c66     ..8...<......ff<
    1574:	60e0 6c66 6c78 00e6 1838 1818 1818 003c     .`flxl..8.....<.
    1584:	0000 feec d6d6 00d6 0000 66dc 6666 0066     ...........ffff.
    1594:	0000 c67c c6c6 007c 0000 66dc 7c66 f060     ..|...|....ff|`.
    15a4:	0000 cc76 7ccc 1e0c 0000 76dc 6060 00f0     ..v..|.....v``..
    15b4:	0000 c07e 067c 00fc 3030 30fc 3630 001c     ..~.|...00.006..
    15c4:	0000 cccc cccc 0076 0000 c6c6 6cc6 0038     ......v......l8.
    15d4:	0000 d6c6 fed6 006c 0000 6cc6 6c38 00c6     ......l....l8l..
    15e4:	0000 c6c6 7ec6 fc06 0000 4c7e 3218 007e     .....~....~L.2~.
    15f4:	180e 7018 1818 000e 1818 1818 1818 0018     ...p............
    1604:	1870 0e18 1818 0070 dc76 0000 0000 0000     p.....p.v.......
    1614:	1000 6c38 c6c6 00fe c67c c0c0 7cc6 780c     ..8l....|....|.x
    1624:	00cc cccc cccc 0076 180c c67c c0fe 007c     ......v...|...|.
    1634:	827c 0c78 cc7c 0076 00c6 0c78 cc7c 0076     |.x.|.v...x.|.v.
    1644:	1830 0c78 cc7c 0076 3030 0c78 cc7c 0076     0.x.|.v.00x.|.v.
    1654:	0000 c07e 7ec0 380c 827c c67c c0fe 007c     ..~..~.8|.|...|.
    1664:	00c6 c67c c0fe 007c 1830 c67c c0fe 007c     ..|...|.0.|...|.
    1674:	0066 1838 1818 003c 827c 1838 1818 003c     f.8...<.|.8...<.
    1684:	1830 3800 1818 003c 38c6 c66c c6fe 00c6     0..8..<..8l.....
    1694:	6c38 c67c c6fe 00c6 3018 c0fe c0f8 00fe     8l|......0......
    16a4:	0000 187e d87e 007e 6c3e fecc cccc 00ce     ..~.~.~.>l......
    16b4:	827c c67c c6c6 007c 00c6 c67c c6c6 007c     |.|...|...|...|.
    16c4:	1830 c67c c6c6 007c 8478 cc00 cccc 0076     0.|...|.x.....v.
    16d4:	3060 cccc cccc 0076 00c6 c6c6 7ec6 fc06     `0....v......~..
    16e4:	38c6 c66c 6cc6 0038 00c6 c6c6 c6c6 007c     .8l..l8.......|.
    16f4:	1818 c07e 7ec0 1818 6c38 f064 6660 00fc     ..~..~..8ld.`f..
    1704:	6666 7e3c 7e18 1818 ccf8 facc cfc6 c7c6     ff<~.~..........
    1714:	1b0e 3c18 d818 0070 3018 0c78 cc7c 0076     ...<..p..0x.|.v.
    1724:	180c 3800 1818 003c 180c c67c c6c6 007c     ...8..<...|...|.
    1734:	3018 cccc cccc 0076 dc76 dc00 6666 0066     .0....v.v...fff.
    1744:	dc76 e600 def6 00ce 6c3c 3e6c 7e00 0000     v.......<ll>.~..
    1754:	6c38 386c 7c00 0000 0018 1818 6330 003e     8ll8.|......0c>.
    1764:	0000 fe00 c0c0 0000 0000 fe00 0606 0000     ................
    1774:	e663 7e6c 6633 0fcc e663 7a6c 6a36 06df     c.l~3f..c.lz6j..
    1784:	0018 1818 3c3c 0018 3300 cc66 3366 0000     ....<<...3f.f3..
    1794:	cc00 3366 cc66 0000 8822 8822 8822 8822     ..f3f...".".".".
    17a4:	aa55 aa55 aa55 aa55 dd77 dd77 dd77 dd77     U.U.U.U.w.w.w.w.
    17b4:	1818 1818 1818 1818 1818 1818 18f8 1818     ................
    17c4:	1818 18f8 18f8 1818 3636 3636 36f6 3636     ........6666.666
    17d4:	0000 0000 36fe 3636 0000 18f8 18f8 1818     .....666........
    17e4:	3636 06f6 36f6 3636 3636 3636 3636 3636     66...66666666666
    17f4:	0000 06fe 36f6 3636 3636 06f6 00fe 0000     .....66666......
    1804:	3636 3636 00fe 0000 1818 18f8 00f8 0000     6666............
    1814:	0000 0000 18f8 1818 1818 1818 001f 0000     ................
    1824:	1818 1818 00ff 0000 0000 0000 18ff 1818     ................
    1834:	1818 1818 181f 1818 0000 0000 00ff 0000     ................
    1844:	1818 1818 18ff 1818 1818 181f 181f 1818     ................
    1854:	3636 3636 3637 3636 3636 3037 003f 0000     666676666670?...
    1864:	0000 303f 3637 3636 3636 00f7 00ff 0000     ..?0766666......
    1874:	0000 00ff 36f7 3636 3636 3037 3637 3636     .....66666707666
    1884:	0000 00ff 00ff 0000 3636 00f7 36f7 3636     ........66...666
    1894:	1818 00ff 00ff 0000 3636 3636 00ff 0000     ........6666....
    18a4:	0000 00ff 18ff 1818 0000 0000 36ff 3636     .............666
    18b4:	3636 3636 003f 0000 1818 181f 001f 0000     6666?...........
    18c4:	0000 181f 181f 1818 0000 0000 363f 3636     ............?666
    18d4:	3636 3636 36ff 3636 1818 18ff 18ff 1818     6666.666........
    18e4:	1818 1818 00f8 0000 0000 0000 181f 1818     ................
    18f4:	ffff ffff ffff ffff 0000 0000 ffff ffff     ................
    1904:	f0f0 f0f0 f0f0 f0f0 0f0f 0f0f 0f0f 0f0f     ................
    1914:	ffff ffff 0000 0000 0000 dc76 dcc8 0076     ..........v...v.
    1924:	cc78 d8cc c6cc 00cc c6fe c0c0 c0c0 00c0     x...............
    1934:	0000 6cfe 6c6c 006c c6fe 3060 c660 00fe     ...llll...`0`...
    1944:	0000 d87e d8d8 0070 0000 6666 6666 c07c     ..~...p...ffff|.
    1954:	7600 18dc 1818 0018 187e 663c 3c66 7e18     .v......~.<ff<.~
    1964:	6c38 fec6 6cc6 0038 6c38 c6c6 6c6c 00ee     8l...l8.8l..ll..
    1974:	180e 3e0c 6666 003c 0000 db7e 7edb 0000     ...>ff<...~..~..
    1984:	0c06 db7e 7edb c060 301e 7e60 3060 001e     ..~..~`..0`~`0..
    1994:	7c00 c6c6 c6c6 00c6 fe00 fe00 fe00 0000     .|..............
    19a4:	1818 187e 0018 007e 1830 180c 0030 007e     ..~...~.0...0.~.
    19b4:	180c 1830 000c 007e 1b0e 181b 1818 1818     ..0...~.........
    19c4:	1818 1818 d818 70d8 1800 7e00 1800 0000     .......p...~....
    19d4:	7600 00dc dc76 0000 6c38 386c 0000 0000     .v..v...8ll8....
    19e4:	0000 1800 0018 0000 0000 1800 0000 0000     ................
    19f4:	0c0f 0c0c 6cec 1c3c 366c 3636 0036 0000     .....l<.l6666...
    1a04:	0c78 3018 007c 0000 0000 3c3c 3c3c 0000     x..0|.....<<<<..
	...

00001a1c <ssd1306_init_array>:
    1a1c:	d5ae a880 d33f 4000 148d 0020 c8a1 12da     ....?..@.. .....
    1a2c:	8f81 f1d9 40db a6a4 ffaf 0000               .....@......

00001a38 <mongoose_2>:
    1a38:	1800 1e00 ff1f ff7f fecf f007 3006 300e     .............0.0

00001a48 <mongoose_1>:
    1a48:	0800 8e0f ff1f fd7f ffee f08f 681e 4c13     .............h.L

00001a58 <pineapple_1>:
    1a58:	0008 600c 4862 b01b 600f c007 600d a00a     ...`bH...`...`..
    1a68:	600d a00a 600d c7e7 1e79 f81f f00f c007     .`...`..y.......

00001a78 <mongoose_left_2>:
    1a78:	0018 0078 f8ff feff f37f e00f 600c 700c     ..x..........`.p

00001a88 <mongoose_left_1>:
    1a88:	0010 f071 f8ff febf 77ff f10f 7816 c832     ..q......w...x2.

00001a98 <kuina_2>:
    1a98:	c03f c03f c0f3 c0f3 fc3f fc3f ff33 ff33     ?.?.....?.?.3.3.
    1aa8:	cf00 cf00 3c33 3c33 c00c c00c 3030 3030     ....3<3<....0000

00001ab8 <kuina_1>:
    1ab8:	c03f c03f c0f3 c0f3 fc3f fc3f ff33 ff33     ?.?.....?.?.3.3.
    1ac8:	cf00 cf00 3c33 3c33 c00c c00c c00c c00c     ....3<3<........
