
main.elf:     file format elf32-littleriscv


Disassembly of section .init:

00000000 <InterruptVector>:
   0:	67e0006f          	j	67e <handle_reset>
   4:	00000000          	.word	0x00000000
   8:	000006f4          	.word	0x000006f4
   c:	000006f2          	.word	0x000006f2
	...
  30:	000006f2          	.word	0x000006f2
  34:	00000000          	.word	0x00000000
  38:	000006f2          	.word	0x000006f2
  3c:	00000000          	.word	0x00000000
  40:	000006f2          	.word	0x000006f2
  44:	000006f2          	.word	0x000006f2
  48:	000006f2          	.word	0x000006f2
  4c:	000006f2          	.word	0x000006f2
  50:	000006f2          	.word	0x000006f2
  54:	000006f2          	.word	0x000006f2
  58:	000006f2          	.word	0x000006f2
  5c:	000006f2          	.word	0x000006f2
  60:	000006f2          	.word	0x000006f2
  64:	000006f2          	.word	0x000006f2
  68:	000006f2          	.word	0x000006f2
  6c:	000006f2          	.word	0x000006f2
  70:	000006f2          	.word	0x000006f2
  74:	000006f2          	.word	0x000006f2
  78:	000006f2          	.word	0x000006f2
  7c:	000006f2          	.word	0x000006f2
  80:	000006f2          	.word	0x000006f2
  84:	000006f2          	.word	0x000006f2
  88:	000006f2          	.word	0x000006f2
  8c:	000006f2          	.word	0x000006f2
  90:	000006f2          	.word	0x000006f2
  94:	000006f2          	.word	0x000006f2
  98:	000006f2          	.word	0x000006f2
  9c:	0000                	unimp
	...

Disassembly of section .text:

000000a0 <__mulsi3>:
      a0:	862a                	mv	a2,a0
      a2:	4501                	li	a0,0
      a4:	0015f693          	andi	a3,a1,1
      a8:	c291                	beqz	a3,ac <__mulsi3+0xc>
      aa:	9532                	add	a0,a0,a2
      ac:	8185                	srli	a1,a1,0x1
      ae:	0606                	slli	a2,a2,0x1
      b0:	f9f5                	bnez	a1,a4 <__mulsi3+0x4>
      b2:	8082                	ret
      b4:	0000                	unimp
	...

000000b8 <__divsi3>:
      b8:	02054e63          	bltz	a0,f4 <__umodsi3+0x8>
      bc:	0405c363          	bltz	a1,102 <__umodsi3+0x16>

000000c0 <__hidden___udivsi3>:
      c0:	862e                	mv	a2,a1
      c2:	85aa                	mv	a1,a0
      c4:	557d                	li	a0,-1
      c6:	c215                	beqz	a2,ea <__hidden___udivsi3+0x2a>
      c8:	4685                	li	a3,1
      ca:	00b67863          	bgeu	a2,a1,da <__hidden___udivsi3+0x1a>
      ce:	00c05663          	blez	a2,da <__hidden___udivsi3+0x1a>
      d2:	0606                	slli	a2,a2,0x1
      d4:	0686                	slli	a3,a3,0x1
      d6:	feb66ce3          	bltu	a2,a1,ce <__hidden___udivsi3+0xe>
      da:	4501                	li	a0,0
      dc:	00c5e463          	bltu	a1,a2,e4 <__hidden___udivsi3+0x24>
      e0:	8d91                	sub	a1,a1,a2
      e2:	8d55                	or	a0,a0,a3
      e4:	8285                	srli	a3,a3,0x1
      e6:	8205                	srli	a2,a2,0x1
      e8:	faf5                	bnez	a3,dc <__hidden___udivsi3+0x1c>
      ea:	8082                	ret

000000ec <__umodsi3>:
      ec:	8286                	mv	t0,ra
      ee:	3fc9                	jal	c0 <__hidden___udivsi3>
      f0:	852e                	mv	a0,a1
      f2:	8282                	jr	t0
      f4:	40a00533          	neg	a0,a0
      f8:	00b04763          	bgtz	a1,106 <__umodsi3+0x1a>
      fc:	40b005b3          	neg	a1,a1
     100:	b7c1                	j	c0 <__hidden___udivsi3>
     102:	40b005b3          	neg	a1,a1
     106:	8286                	mv	t0,ra
     108:	3f65                	jal	c0 <__hidden___udivsi3>
     10a:	40a00533          	neg	a0,a0
     10e:	8282                	jr	t0

00000110 <__modsi3>:
     110:	8286                	mv	t0,ra
     112:	0005c763          	bltz	a1,120 <__modsi3+0x10>
     116:	00054963          	bltz	a0,128 <__modsi3+0x18>
     11a:	375d                	jal	c0 <__hidden___udivsi3>
     11c:	852e                	mv	a0,a1
     11e:	8282                	jr	t0
     120:	40b005b3          	neg	a1,a1
     124:	fe055be3          	bgez	a0,11a <__modsi3+0xa>
     128:	40a00533          	neg	a0,a0
     12c:	3f51                	jal	c0 <__hidden___udivsi3>
     12e:	40b00533          	neg	a0,a1
     132:	8282                	jr	t0
	...

00000136 <_puts>:
     136:	832a                	mv	t1,a0
     138:	852e                	mv	a0,a1
     13a:	ce01                	beqz	a2,152 <_puts+0x1c>
     13c:	00062283          	lw	t0,0(a2)
     140:	4701                	li	a4,0
     142:	425c                	lw	a5,4(a2)
     144:	00a74863          	blt	a4,a0,154 <_puts+0x1e>
     148:	00078023          	sb	zero,0(a5)
     14c:	4248                	lw	a0,4(a2)
     14e:	40550533          	sub	a0,a0,t0
     152:	8082                	ret
     154:	460c                	lw	a1,8(a2)
     156:	4214                	lw	a3,0(a2)
     158:	15fd                	addi	a1,a1,-1
     15a:	96ae                	add	a3,a3,a1
     15c:	fed786e3          	beq	a5,a3,148 <_puts+0x12>
     160:	00178693          	addi	a3,a5,1
     164:	c254                	sw	a3,4(a2)
     166:	00e306b3          	add	a3,t1,a4
     16a:	0006c683          	lbu	a3,0(a3)
     16e:	0705                	addi	a4,a4,1
     170:	00d78023          	sb	a3,0(a5)
     174:	b7f9                	j	142 <_puts+0xc>

00000176 <mini_pad>:
     176:	c699                	beqz	a3,184 <mini_pad+0xe>
     178:	4301                	li	t1,0
     17a:	00b6d763          	bge	a3,a1,188 <mini_pad+0x12>
     17e:	85b6                	mv	a1,a3
     180:	4305                	li	t1,1
     182:	a019                	j	188 <mini_pad+0x12>
     184:	4301                	li	t1,0
     186:	86ae                	mv	a3,a1
     188:	8e8d                	sub	a3,a3,a1
     18a:	87ba                	mv	a5,a4
     18c:	00e683b3          	add	t2,a3,a4
     190:	40f382b3          	sub	t0,t2,a5
     194:	04504a63          	bgtz	t0,1e8 <mini_pad+0x72>
     198:	fff6c793          	not	a5,a3
     19c:	87fd                	srai	a5,a5,0x1f
     19e:	8efd                	and	a3,a3,a5
     1a0:	96ba                	add	a3,a3,a4
     1a2:	4781                	li	a5,0
     1a4:	40f58633          	sub	a2,a1,a5
     1a8:	00f682b3          	add	t0,a3,a5
     1ac:	04c04263          	bgtz	a2,1f0 <mini_pad+0x7a>
     1b0:	fff5c793          	not	a5,a1
     1b4:	87fd                	srai	a5,a5,0x1f
     1b6:	8dfd                	and	a1,a1,a5
     1b8:	95b6                	add	a1,a1,a3
     1ba:	40e58533          	sub	a0,a1,a4
     1be:	02030463          	beqz	t1,1e6 <mini_pad+0x70>
     1c2:	02b77263          	bgeu	a4,a1,1e6 <mini_pad+0x70>
     1c6:	02a00793          	li	a5,42
     1ca:	fef58fa3          	sb	a5,-1(a1)
     1ce:	fff58693          	addi	a3,a1,-1
     1d2:	00d77a63          	bgeu	a4,a3,1e6 <mini_pad+0x70>
     1d6:	fef58f23          	sb	a5,-2(a1)
     1da:	ffe58693          	addi	a3,a1,-2
     1de:	00d77463          	bgeu	a4,a3,1e6 <mini_pad+0x70>
     1e2:	fef58ea3          	sb	a5,-3(a1)
     1e6:	8082                	ret
     1e8:	0785                	addi	a5,a5,1
     1ea:	fec78fa3          	sb	a2,-1(a5)
     1ee:	b74d                	j	190 <mini_pad+0x1a>
     1f0:	00f50633          	add	a2,a0,a5
     1f4:	00064603          	lbu	a2,0(a2)
     1f8:	0785                	addi	a5,a5,1
     1fa:	00c28023          	sb	a2,0(t0)
     1fe:	b75d                	j	1a4 <mini_pad+0x2e>

00000200 <DelaySysTick>:
     200:	e000f737          	lui	a4,0xe000f
     204:	471c                	lw	a5,8(a4)
     206:	953e                	add	a0,a0,a5
     208:	471c                	lw	a5,8(a4)
     20a:	8f89                	sub	a5,a5,a0
     20c:	fe07cee3          	bltz	a5,208 <DelaySysTick+0x8>
     210:	8082                	ret

00000212 <mini_itoa.part.0>:
     212:	1101                	addi	sp,sp,-32
     214:	ce06                	sw	ra,28(sp)
     216:	cc22                	sw	s0,24(sp)
     218:	ca26                	sw	s1,20(sp)
     21a:	c002                	sw	zero,0(sp)
     21c:	832a                	mv	t1,a0
     21e:	00055763          	bgez	a0,22c <mini_itoa.part.0+0x1a>
     222:	e689                	bnez	a3,22c <mini_itoa.part.0+0x1a>
     224:	4785                	li	a5,1
     226:	40a00333          	neg	t1,a0
     22a:	c03e                	sw	a5,0(sp)
     22c:	8a05                	andi	a2,a2,1
     22e:	06100413          	li	s0,97
     232:	c219                	beqz	a2,238 <mini_itoa.part.0+0x26>
     234:	04100413          	li	s0,65
     238:	84ba                	mv	s1,a4
     23a:	1459                	addi	s0,s0,-10
     23c:	851a                	mv	a0,t1
     23e:	c83a                	sw	a4,16(sp)
     240:	c21a                	sw	t1,4(sp)
     242:	c62e                	sw	a1,12(sp)
     244:	c41a                	sw	t1,8(sp)
     246:	355d                	jal	ec <__umodsi3>
     248:	47a5                	li	a5,9
     24a:	4322                	lw	t1,8(sp)
     24c:	45b2                	lw	a1,12(sp)
     24e:	4742                	lw	a4,16(sp)
     250:	0ff57693          	zext.b	a3,a0
     254:	06a7e163          	bltu	a5,a0,2b6 <mini_itoa.part.0+0xa4>
     258:	03068693          	addi	a3,a3,48
     25c:	0ff6f693          	zext.b	a3,a3
     260:	00148793          	addi	a5,s1,1
     264:	00d48023          	sb	a3,0(s1)
     268:	851a                	mv	a0,t1
     26a:	c83a                	sw	a4,16(sp)
     26c:	c63e                	sw	a5,12(sp)
     26e:	c42e                	sw	a1,8(sp)
     270:	3d81                	jal	c0 <__hidden___udivsi3>
     272:	4692                	lw	a3,4(sp)
     274:	45a2                	lw	a1,8(sp)
     276:	47b2                	lw	a5,12(sp)
     278:	4742                	lw	a4,16(sp)
     27a:	832a                	mv	t1,a0
     27c:	02b6fb63          	bgeu	a3,a1,2b2 <mini_itoa.part.0+0xa0>
     280:	4682                	lw	a3,0(sp)
     282:	c699                	beqz	a3,290 <mini_itoa.part.0+0x7e>
     284:	02d00693          	li	a3,45
     288:	00d78023          	sb	a3,0(a5)
     28c:	00248793          	addi	a5,s1,2
     290:	40e78533          	sub	a0,a5,a4
     294:	01f55693          	srli	a3,a0,0x1f
     298:	96aa                	add	a3,a3,a0
     29a:	00078023          	sb	zero,0(a5)
     29e:	8685                	srai	a3,a3,0x1
     2a0:	4601                	li	a2,0
     2a2:	17fd                	addi	a5,a5,-1
     2a4:	00d64b63          	blt	a2,a3,2ba <mini_itoa.part.0+0xa8>
     2a8:	40f2                	lw	ra,28(sp)
     2aa:	4462                	lw	s0,24(sp)
     2ac:	44d2                	lw	s1,20(sp)
     2ae:	6105                	addi	sp,sp,32
     2b0:	8082                	ret
     2b2:	84be                	mv	s1,a5
     2b4:	b761                	j	23c <mini_itoa.part.0+0x2a>
     2b6:	96a2                	add	a3,a3,s0
     2b8:	b755                	j	25c <mini_itoa.part.0+0x4a>
     2ba:	00c705b3          	add	a1,a4,a2
     2be:	0007c283          	lbu	t0,0(a5)
     2c2:	0005c303          	lbu	t1,0(a1)
     2c6:	0605                	addi	a2,a2,1
     2c8:	00558023          	sb	t0,0(a1)
     2cc:	00678023          	sb	t1,0(a5)
     2d0:	bfc9                	j	2a2 <mini_itoa.part.0+0x90>

000002d2 <ssd1306_i2c_setup>:
void ssd1306_i2c_setup(void)
{
	uint16_t tempreg;
	
	// Reset I2C1 to init all regs
	RCC->APB1PRSTR |= RCC_APB1Periph_I2C1;
     2d2:	400217b7          	lui	a5,0x40021
     2d6:	4b98                	lw	a4,16(a5)
     2d8:	002006b7          	lui	a3,0x200
     2dc:	8f55                	or	a4,a4,a3
     2de:	cb98                	sw	a4,16(a5)
	RCC->APB1PRSTR &= ~RCC_APB1Periph_I2C1;
     2e0:	4b98                	lw	a4,16(a5)
     2e2:	ffe006b7          	lui	a3,0xffe00
     2e6:	16fd                	addi	a3,a3,-1 # ffdfffff <__global_pointer$+0xdfdff7ff>
     2e8:	8f75                	and	a4,a4,a3
     2ea:	cb98                	sw	a4,16(a5)
	
	// set freq
	tempreg = I2C1->CTLR2;
     2ec:	400057b7          	lui	a5,0x40005
     2f0:	4047d703          	lhu	a4,1028(a5) # 40005404 <__global_pointer$+0x20004c04>
	tempreg &= ~I2C_CTLR2_FREQ;
     2f4:	66c1                	lui	a3,0x10
     2f6:	fc068693          	addi	a3,a3,-64 # ffc0 <main.c.99fa8f27+0xd773>
     2fa:	8f75                	and	a4,a4,a3
	tempreg |= (FUNCONF_SYSTEM_CORE_CLOCK/SSD1306_I2C_PRERATE)&I2C_CTLR2_FREQ;
     2fc:	01876713          	ori	a4,a4,24
	I2C1->CTLR2 = tempreg;
     300:	40e79223          	sh	a4,1028(a5)
	tempreg = (FUNCONF_SYSTEM_CORE_CLOCK/(25*SSD1306_I2C_CLKRATE))&I2C_CKCFGR_CCR;
	tempreg |= I2C_CKCFGR_DUTY;
#endif
	tempreg |= I2C_CKCFGR_FS;
#endif
	I2C1->CKCFGR = tempreg;
     304:	7771                	lui	a4,0xffffc
     306:	0705                	addi	a4,a4,1 # ffffc001 <__global_pointer$+0xdfffb801>
     308:	40e79e23          	sh	a4,1052(a5)
	// initialize the state
	ssd1306_i2c_irq_state = 0;
#endif
	
	// Enable I2C
	I2C1->CTLR1 |= I2C_CTLR1_PE;
     30c:	4007d703          	lhu	a4,1024(a5)
     310:	00176713          	ori	a4,a4,1
     314:	40e79023          	sh	a4,1024(a5)

	// set ACK mode
	I2C1->CTLR1 |= I2C_CTLR1_ACK;
     318:	4007d703          	lhu	a4,1024(a5)
     31c:	40076713          	ori	a4,a4,1024
     320:	40e79023          	sh	a4,1024(a5)
}
     324:	8082                	ret

00000326 <ssd1306_drawImage>:

/*
 * draw a an image from an array, directly into to the display buffer
 * the color modes allow for overwriting and even layering (sprites!)
 */
void ssd1306_drawImage(int x, int y, const unsigned char* input, uint8_t width, uint8_t height, uint8_t color_mode) {
     326:	fcc10113          	addi	sp,sp,-52
     32a:	d03e                	sw	a5,32(sp)
     32c:	0036d793          	srli	a5,a3,0x3
     330:	0f86f693          	andi	a3,a3,248
     334:	c63e                	sw	a5,12(sp)
     336:	00a687b3          	add	a5,a3,a0
     33a:	d622                	sw	s0,44(sp)
     33c:	d426                	sw	s1,40(sp)
     33e:	d806                	sw	ra,48(sp)
     340:	c02a                	sw	a0,0(sp)
     342:	ca2e                	sw	a1,20(sp)
     344:	cc32                	sw	a2,24(sp)
     346:	ce3a                	sw	a4,28(sp)
     348:	c43e                	sw	a5,8(sp)
	int y_absolute;
	uint8_t pixel;
	uint8_t bytes_to_draw = width / 8;
	uint16_t buffer_addr;

	for (uint8_t line = 0; line < height; line++) {
     34a:	4401                	li	s0,0
			break;
		}

		// SSD1306 is in vertical mode, yet we want to draw horizontally, which necessitates assembling the output bytes from the input data
		// bitmask for current pixel in vertical (output) byte
		uint8_t v_mask = 1 << (y_absolute & 7);
     34c:	4485                	li	s1,1
	for (uint8_t line = 0; line < height; line++) {
     34e:	47f2                	lw	a5,28(sp)
     350:	00f46863          	bltu	s0,a5,360 <ssd1306_drawImage+0x3a>
		}
		#if SSD1306_LOG_IMAGE == 1
		printf("\n\r");
		#endif
	}
}
     354:	50c2                	lw	ra,48(sp)
     356:	5432                	lw	s0,44(sp)
     358:	54a2                	lw	s1,40(sp)
     35a:	03410113          	addi	sp,sp,52
     35e:	8082                	ret
		y_absolute = y + line;
     360:	47d2                	lw	a5,20(sp)
     362:	97a2                	add	a5,a5,s0
    if (y_absolute < 0) {
     364:	0007d663          	bgez	a5,370 <ssd1306_drawImage+0x4a>
	for (uint8_t line = 0; line < height; line++) {
     368:	0405                	addi	s0,s0,1
     36a:	0ff47413          	zext.b	s0,s0
     36e:	b7c5                	j	34e <ssd1306_drawImage+0x28>
		if (y_absolute >= SSD1306_H || y_absolute < 0) {
     370:	03f00713          	li	a4,63
     374:	fef760e3          	bltu	a4,a5,354 <ssd1306_drawImage+0x2e>
			uint8_t input_byte = input[byte + line * bytes_to_draw];
     378:	45b2                	lw	a1,12(sp)
		uint8_t v_mask = 1 << (y_absolute & 7);
     37a:	0077f713          	andi	a4,a5,7
     37e:	c83e                	sw	a5,16(sp)
			uint8_t input_byte = input[byte + line * bytes_to_draw];
     380:	8522                	mv	a0,s0
		uint8_t v_mask = 1 << (y_absolute & 7);
     382:	00e497b3          	sll	a5,s1,a4
     386:	c23e                	sw	a5,4(sp)
			uint8_t input_byte = input[byte + line * bytes_to_draw];
     388:	3b21                	jal	a0 <__mulsi3>
     38a:	47e2                	lw	a5,24(sp)
		for (uint8_t byte = 0; byte < bytes_to_draw; byte++) {
     38c:	4322                	lw	t1,8(sp)
     38e:	953e                	add	a0,a0,a5
				buffer_addr = x_absolute + SSD1306_W * (y_absolute / 8);
     390:	47c2                	lw	a5,16(sp)
     392:	878d                	srai	a5,a5,0x3
     394:	079e                	slli	a5,a5,0x7
     396:	d23e                	sw	a5,36(sp)
		for (uint8_t byte = 0; byte < bytes_to_draw; byte++) {
     398:	4782                	lw	a5,0(sp)
     39a:	fc6787e3          	beq	a5,t1,368 <ssd1306_drawImage+0x42>
			uint8_t input_byte = input[byte + line * bytes_to_draw];
     39e:	00054783          	lbu	a5,0(a0)
     3a2:	4581                	li	a1,0
						ssd1306_buffer[buffer_addr] = (ssd1306_buffer[buffer_addr] & ~v_mask) | (input_pixel ? v_mask : 0);
     3a4:	200003b7          	lui	t2,0x20000
			uint8_t input_byte = input[byte + line * bytes_to_draw];
     3a8:	c83e                	sw	a5,16(sp)
				if (x_absolute >= SSD1306_W) {
     3aa:	00b306b3          	add	a3,t1,a1
     3ae:	07f00793          	li	a5,127
     3b2:	00d7d563          	bge	a5,a3,3bc <ssd1306_drawImage+0x96>
		for (uint8_t byte = 0; byte < bytes_to_draw; byte++) {
     3b6:	1361                	addi	t1,t1,-8
     3b8:	0505                	addi	a0,a0,1
     3ba:	bff9                	j	398 <ssd1306_drawImage+0x72>
				uint8_t input_pixel = input_byte & (1 << pixel);
     3bc:	47c2                	lw	a5,16(sp)
     3be:	00b49733          	sll	a4,s1,a1
						ssd1306_buffer[buffer_addr] = (ssd1306_buffer[buffer_addr] & ~v_mask) | (input_pixel ? v_mask : 0);
     3c2:	00410603          	lb	a2,4(sp)
				uint8_t input_pixel = input_byte & (1 << pixel);
     3c6:	8f7d                	and	a4,a4,a5
				buffer_addr = x_absolute + SSD1306_W * (y_absolute / 8);
     3c8:	5792                	lw	a5,36(sp)
						ssd1306_buffer[buffer_addr] = (ssd1306_buffer[buffer_addr] & ~v_mask) | (input_pixel ? v_mask : 0);
     3ca:	fff64293          	not	t0,a2
				buffer_addr = x_absolute + SSD1306_W * (y_absolute / 8);
     3ce:	96be                	add	a3,a3,a5
						ssd1306_buffer[buffer_addr] = (ssd1306_buffer[buffer_addr] & ~v_mask) | (input_pixel ? v_mask : 0);
     3d0:	06c2                	slli	a3,a3,0x10
     3d2:	82c1                	srli	a3,a3,0x10
     3d4:	02038793          	addi	a5,t2,32 # 20000020 <ssd1306_buffer>
     3d8:	97b6                	add	a5,a5,a3
     3da:	0007c783          	lbu	a5,0(a5)
     3de:	0057f7b3          	and	a5,a5,t0
				switch (color_mode) {
     3e2:	5282                	lw	t0,32(sp)
						ssd1306_buffer[buffer_addr] = (ssd1306_buffer[buffer_addr] & ~v_mask) | (input_pixel ? v_mask : 0);
     3e4:	07e2                	slli	a5,a5,0x18
     3e6:	87e1                	srai	a5,a5,0x18
				switch (color_mode) {
     3e8:	02928763          	beq	t0,s1,416 <ssd1306_drawImage+0xf0>
						ssd1306_buffer[buffer_addr] = (ssd1306_buffer[buffer_addr] & ~v_mask) | (input_pixel ? v_mask : 0);
     3ec:	00e03733          	snez	a4,a4
						ssd1306_buffer[buffer_addr] = (ssd1306_buffer[buffer_addr] & ~v_mask) | (!input_pixel ? v_mask : 0);
     3f0:	40e00733          	neg	a4,a4
     3f4:	8e79                	and	a2,a2,a4
     3f6:	20000737          	lui	a4,0x20000
     3fa:	8fd1                	or	a5,a5,a2
     3fc:	02070713          	addi	a4,a4,32 # 20000020 <ssd1306_buffer>
     400:	0ff7f793          	zext.b	a5,a5
     404:	00d702b3          	add	t0,a4,a3
     408:	00f28023          	sb	a5,0(t0)
			for (pixel = 0; pixel < 8; pixel++) {
     40c:	0585                	addi	a1,a1,1
     40e:	47a1                	li	a5,8
     410:	f8f59de3          	bne	a1,a5,3aa <ssd1306_drawImage+0x84>
     414:	b74d                	j	3b6 <ssd1306_drawImage+0x90>
						ssd1306_buffer[buffer_addr] = (ssd1306_buffer[buffer_addr] & ~v_mask) | (!input_pixel ? v_mask : 0);
     416:	00173713          	seqz	a4,a4
     41a:	bfd9                	j	3f0 <ssd1306_drawImage+0xca>

0000041c <get_random>:
int get_random(int num)
{
	uint8_t bit;
	uint32_t new_data;
	
	for(bit=0;bit<NOISE_BITS;bit++)
     41c:	20000637          	lui	a2,0x20000
     420:	00062783          	lw	a5,0(a2) # 20000000 <lfsr>
{
     424:	1171                	addi	sp,sp,-4
     426:	c006                	sw	ra,0(sp)
     428:	46a1                	li	a3,8
	{
		new_data = ((lfsr>>NOISE_POLY_TAP0) ^
					(lfsr>>NOISE_POLY_TAP1) ^
     42a:	0157d593          	srli	a1,a5,0x15
		new_data = ((lfsr>>NOISE_POLY_TAP0) ^
     42e:	01f7d713          	srli	a4,a5,0x1f
     432:	8f2d                	xor	a4,a4,a1
     434:	8f3d                	xor	a4,a4,a5
					(lfsr>>NOISE_POLY_TAP2) ^
     436:	0017d593          	srli	a1,a5,0x1
		new_data = ((lfsr>>NOISE_POLY_TAP0) ^
     43a:	8f2d                	xor	a4,a4,a1
	for(bit=0;bit<NOISE_BITS;bit++)
     43c:	16fd                	addi	a3,a3,-1
					(lfsr>>NOISE_POLY_TAP3));
		lfsr = (lfsr<<1) | (new_data&1);
     43e:	8b05                	andi	a4,a4,1
     440:	0786                	slli	a5,a5,0x1
	for(bit=0;bit<NOISE_BITS;bit++)
     442:	0ff6f693          	zext.b	a3,a3
		lfsr = (lfsr<<1) | (new_data&1);
     446:	8fd9                	or	a5,a5,a4
	for(bit=0;bit<NOISE_BITS;bit++)
     448:	f2ed                	bnez	a3,42a <get_random+0xe>
	}

  int random_8 = lfsr&NOISE_MASK;
	return random_8 % (num + 1);
     44a:	00150593          	addi	a1,a0,1
     44e:	0ff7f513          	zext.b	a0,a5
     452:	00f62023          	sw	a5,0(a2)
     456:	396d                	jal	110 <__modsi3>
}
     458:	4082                	lw	ra,0(sp)
     45a:	0111                	addi	sp,sp,4
     45c:	8082                	ret

0000045e <ssd1306_drawPixel.constprop.0>:
	if(x >= SSD1306_W)
     45e:	01851793          	slli	a5,a0,0x18
     462:	87e1                	srai	a5,a5,0x18
     464:	0207c863          	bltz	a5,494 <ssd1306_drawPixel.constprop.0+0x36>
	if(y >= SSD1306_H)
     468:	03f00793          	li	a5,63
     46c:	02b7e463          	bltu	a5,a1,494 <ssd1306_drawPixel.constprop.0+0x36>
	addr = x + SSD1306_W*(y/8);
     470:	0035d793          	srli	a5,a1,0x3
     474:	079e                	slli	a5,a5,0x7
		ssd1306_buffer[addr] |= (1<<(y&7));
     476:	953e                	add	a0,a0,a5
     478:	200007b7          	lui	a5,0x20000
     47c:	02078793          	addi	a5,a5,32 # 20000020 <ssd1306_buffer>
     480:	97aa                	add	a5,a5,a0
     482:	0007c683          	lbu	a3,0(a5)
     486:	899d                	andi	a1,a1,7
     488:	4705                	li	a4,1
     48a:	00b71733          	sll	a4,a4,a1
     48e:	8f55                	or	a4,a4,a3
     490:	00e78023          	sb	a4,0(a5)
}
     494:	8082                	ret

00000496 <ssd1306_drawFastHLine.constprop.0>:
 *  fast horiz line
 */
void ssd1306_drawFastHLine(uint8_t x, uint8_t y, uint8_t w, uint8_t color)
{
	// clipping
	if((x >= SSD1306_W) || (y >= SSD1306_H)) return;
     496:	01851793          	slli	a5,a0,0x18
     49a:	87e1                	srai	a5,a5,0x18
     49c:	0407ca63          	bltz	a5,4f0 <ssd1306_drawFastHLine.constprop.0+0x5a>
void ssd1306_drawFastHLine(uint8_t x, uint8_t y, uint8_t w, uint8_t color)
     4a0:	1141                	addi	sp,sp,-16
     4a2:	c226                	sw	s1,4(sp)
     4a4:	c606                	sw	ra,12(sp)
     4a6:	c422                	sw	s0,8(sp)
	if((x >= SSD1306_W) || (y >= SSD1306_H)) return;
     4a8:	03f00793          	li	a5,63
     4ac:	84ae                	mv	s1,a1
     4ae:	02b7e263          	bltu	a5,a1,4d2 <ssd1306_drawFastHLine.constprop.0+0x3c>
	if((x+w-1) >= SSD1306_W)  w = SSD1306_W-x;
     4b2:	00c507b3          	add	a5,a0,a2
     4b6:	08000713          	li	a4,128
     4ba:	00f75763          	bge	a4,a5,4c8 <ssd1306_drawFastHLine.constprop.0+0x32>
     4be:	f8000613          	li	a2,-128
     4c2:	8e09                	sub	a2,a2,a0
     4c4:	0ff67613          	zext.b	a2,a2
     4c8:	962a                	add	a2,a2,a0
     4ca:	0ff67413          	zext.b	s0,a2

	while (w--)
     4ce:	00851763          	bne	a0,s0,4dc <ssd1306_drawFastHLine.constprop.0+0x46>
	{
        ssd1306_drawPixel(x++, y, color);
	}
}
     4d2:	40b2                	lw	ra,12(sp)
     4d4:	4422                	lw	s0,8(sp)
     4d6:	4492                	lw	s1,4(sp)
     4d8:	0141                	addi	sp,sp,16
     4da:	8082                	ret
        ssd1306_drawPixel(x++, y, color);
     4dc:	00150793          	addi	a5,a0,1
     4e0:	0ff7f793          	zext.b	a5,a5
     4e4:	85a6                	mv	a1,s1
     4e6:	c03e                	sw	a5,0(sp)
     4e8:	3f9d                	jal	45e <ssd1306_drawPixel.constprop.0>
     4ea:	4782                	lw	a5,0(sp)
     4ec:	853e                	mv	a0,a5
     4ee:	b7c5                	j	4ce <ssd1306_drawFastHLine.constprop.0+0x38>
     4f0:	8082                	ret

000004f2 <ssd1306_drawFastVLine.constprop.0>:
	if((x >= SSD1306_W) || (y >= SSD1306_H)) return;
     4f2:	01851793          	slli	a5,a0,0x18
     4f6:	87e1                	srai	a5,a5,0x18
     4f8:	0407c863          	bltz	a5,548 <ssd1306_drawFastVLine.constprop.0+0x56>
     4fc:	03f00793          	li	a5,63
     500:	04b7e463          	bltu	a5,a1,548 <ssd1306_drawFastVLine.constprop.0+0x56>
void ssd1306_drawFastVLine(uint8_t x, uint8_t y, uint8_t h, uint8_t color)
     504:	1141                	addi	sp,sp,-16
     506:	c226                	sw	s1,4(sp)
     508:	c606                	sw	ra,12(sp)
     50a:	c422                	sw	s0,8(sp)
	if((y+h-1) >= SSD1306_H) h = SSD1306_H-y;
     50c:	00c58733          	add	a4,a1,a2
     510:	04000793          	li	a5,64
     514:	84aa                	mv	s1,a0
     516:	00e7d563          	bge	a5,a4,520 <ssd1306_drawFastVLine.constprop.0+0x2e>
     51a:	8f8d                	sub	a5,a5,a1
     51c:	0ff7f613          	zext.b	a2,a5
     520:	962e                	add	a2,a2,a1
     522:	0ff67413          	zext.b	s0,a2
	while(h--)
     526:	00859763          	bne	a1,s0,534 <ssd1306_drawFastVLine.constprop.0+0x42>
}
     52a:	40b2                	lw	ra,12(sp)
     52c:	4422                	lw	s0,8(sp)
     52e:	4492                	lw	s1,4(sp)
     530:	0141                	addi	sp,sp,16
     532:	8082                	ret
        ssd1306_drawPixel(x, y++, color);
     534:	00158793          	addi	a5,a1,1
     538:	0ff7f793          	zext.b	a5,a5
     53c:	8526                	mv	a0,s1
     53e:	c03e                	sw	a5,0(sp)
     540:	3f39                	jal	45e <ssd1306_drawPixel.constprop.0>
     542:	4782                	lw	a5,0(sp)
     544:	85be                	mv	a1,a5
     546:	b7c5                	j	526 <ssd1306_drawFastVLine.constprop.0+0x34>
     548:	8082                	ret

0000054a <ssd1306_drawRect.constprop.0>:
}

/*
 *  draw a rectangle
 */
void ssd1306_drawRect(uint8_t x, uint8_t y, uint8_t w, uint8_t h, uint8_t color)
     54a:	1131                	addi	sp,sp,-20
     54c:	c426                	sw	s1,8(sp)
     54e:	84b2                	mv	s1,a2
{
	ssd1306_drawFastVLine(x, y, h, color);
     550:	8636                	mv	a2,a3
void ssd1306_drawRect(uint8_t x, uint8_t y, uint8_t w, uint8_t h, uint8_t color)
     552:	c806                	sw	ra,16(sp)
     554:	c622                	sw	s0,12(sp)
     556:	c236                	sw	a3,4(sp)
     558:	842a                	mv	s0,a0
     55a:	c02e                	sw	a1,0(sp)
	ssd1306_drawFastVLine(x, y, h, color);
     55c:	3f59                	jal	4f2 <ssd1306_drawFastVLine.constprop.0>
	ssd1306_drawFastVLine(x+w-1, y, h, color);
     55e:	4612                	lw	a2,4(sp)
     560:	4582                	lw	a1,0(sp)
     562:	fff48513          	addi	a0,s1,-1
     566:	9522                	add	a0,a0,s0
     568:	0ff57513          	zext.b	a0,a0
     56c:	3759                	jal	4f2 <ssd1306_drawFastVLine.constprop.0>
	ssd1306_drawFastHLine(x, y, w, color);
     56e:	4582                	lw	a1,0(sp)
     570:	8626                	mv	a2,s1
     572:	8522                	mv	a0,s0
     574:	370d                	jal	496 <ssd1306_drawFastHLine.constprop.0>
	ssd1306_drawFastHLine(x, y+h-1, w, color);
     576:	4792                	lw	a5,4(sp)
     578:	4702                	lw	a4,0(sp)
     57a:	8522                	mv	a0,s0
}
     57c:	4432                	lw	s0,12(sp)
     57e:	40c2                	lw	ra,16(sp)
	ssd1306_drawFastHLine(x, y+h-1, w, color);
     580:	17fd                	addi	a5,a5,-1
     582:	8626                	mv	a2,s1
}
     584:	44a2                	lw	s1,8(sp)
	ssd1306_drawFastHLine(x, y+h-1, w, color);
     586:	00f705b3          	add	a1,a4,a5
     58a:	0ff5f593          	zext.b	a1,a1
}
     58e:	0151                	addi	sp,sp,20
	ssd1306_drawFastHLine(x, y+h-1, w, color);
     590:	b719                	j	496 <ssd1306_drawFastHLine.constprop.0>

00000592 <internal_handle_input.constprop.0>:
     592:	e00007b7          	lui	a5,0xe0000
     596:	0f47a783          	lw	a5,244(a5) # e00000f4 <__global_pointer$+0xbffff8f4>
     59a:	8082                	ret

0000059c <_write.constprop.0>:
     59c:	1121                	addi	sp,sp,-24
     59e:	c822                	sw	s0,16(sp)
     5a0:	ca06                	sw	ra,20(sp)
     5a2:	c626                	sw	s1,12(sp)
     5a4:	c402                	sw	zero,8(sp)
     5a6:	842e                	mv	s0,a1
     5a8:	eddd                	bnez	a1,666 <_write.constprop.0+0xca>
     5aa:	e00007b7          	lui	a5,0xe0000
     5ae:	0f47a783          	lw	a5,244(a5) # e00000f4 <__global_pointer$+0xbffff8f4>
     5b2:	c789                	beqz	a5,5bc <_write.constprop.0+0x20>
     5b4:	0807f793          	andi	a5,a5,128
     5b8:	e391                	bnez	a5,5bc <_write.constprop.0+0x20>
     5ba:	3fe1                	jal	592 <internal_handle_input.constprop.0>
     5bc:	40d2                	lw	ra,20(sp)
     5be:	8522                	mv	a0,s0
     5c0:	4442                	lw	s0,16(sp)
     5c2:	44b2                	lw	s1,12(sp)
     5c4:	0161                	addi	sp,sp,24
     5c6:	8082                	ret
     5c8:	409407b3          	sub	a5,s0,s1
     5cc:	471d                	li	a4,7
     5ce:	00f75363          	bge	a4,a5,5d4 <_write.constprop.0+0x38>
     5d2:	87ba                	mv	a5,a4
     5d4:	00027737          	lui	a4,0x27
     5d8:	e00006b7          	lui	a3,0xe0000
     5dc:	10170713          	addi	a4,a4,257 # 27101 <main.c.99fa8f27+0x248b4>
     5e0:	0f468693          	addi	a3,a3,244 # e00000f4 <__global_pointer$+0xbffff8f4>
     5e4:	4290                	lw	a2,0(a3)
     5e6:	08067593          	andi	a1,a2,128
     5ea:	e1a5                	bnez	a1,64a <_write.constprop.0+0xae>
     5ec:	c611                	beqz	a2,5f8 <_write.constprop.0+0x5c>
     5ee:	c22a                	sw	a0,4(sp)
     5f0:	c03e                	sw	a5,0(sp)
     5f2:	3745                	jal	592 <internal_handle_input.constprop.0>
     5f4:	4512                	lw	a0,4(sp)
     5f6:	4782                	lw	a5,0(sp)
     5f8:	0034                	addi	a3,sp,8
     5fa:	470d                	li	a4,3
     5fc:	85b6                	mv	a1,a3
     5fe:	04f74a63          	blt	a4,a5,652 <_write.constprop.0+0xb6>
     602:	46a2                	lw	a3,8(sp)
     604:	e0000737          	lui	a4,0xe0000
     608:	460d                	li	a2,3
     60a:	0ed72c23          	sw	a3,248(a4) # e00000f8 <__global_pointer$+0xbffff8f8>
     60e:	009506b3          	add	a3,a0,s1
     612:	4701                	li	a4,0
     614:	0006c283          	lbu	t0,0(a3)
     618:	0705                	addi	a4,a4,1
     61a:	00e58333          	add	t1,a1,a4
     61e:	00530023          	sb	t0,0(t1)
     622:	00e78563          	beq	a5,a4,62c <_write.constprop.0+0x90>
     626:	0685                	addi	a3,a3,1
     628:	fec716e3          	bne	a4,a2,614 <_write.constprop.0+0x78>
     62c:	00478713          	addi	a4,a5,4
     630:	f8076713          	ori	a4,a4,-128
     634:	00e10423          	sb	a4,8(sp)
     638:	46a2                	lw	a3,8(sp)
     63a:	e0000737          	lui	a4,0xe0000
     63e:	94be                	add	s1,s1,a5
     640:	0ed72a23          	sw	a3,244(a4) # e00000f4 <__global_pointer$+0xbffff8f4>
     644:	f884c2e3          	blt	s1,s0,5c8 <_write.constprop.0+0x2c>
     648:	bf95                	j	5bc <_write.constprop.0+0x20>
     64a:	177d                	addi	a4,a4,-1
     64c:	ff41                	bnez	a4,5e4 <_write.constprop.0+0x48>
     64e:	8426                	mv	s0,s1
     650:	b7b5                	j	5bc <_write.constprop.0+0x20>
     652:	00e48633          	add	a2,s1,a4
     656:	962a                	add	a2,a2,a0
     658:	00064603          	lbu	a2,0(a2)
     65c:	0705                	addi	a4,a4,1
     65e:	0685                	addi	a3,a3,1
     660:	fec68fa3          	sb	a2,-1(a3)
     664:	bf69                	j	5fe <_write.constprop.0+0x62>
     666:	4481                	li	s1,0
     668:	bff1                	j	644 <_write.constprop.0+0xa8>

0000066a <__puts_uart>:
     66a:	1161                	addi	sp,sp,-8
     66c:	c022                	sw	s0,0(sp)
     66e:	c206                	sw	ra,4(sp)
     670:	842e                	mv	s0,a1
     672:	372d                	jal	59c <_write.constprop.0>
     674:	4092                	lw	ra,4(sp)
     676:	8522                	mv	a0,s0
     678:	4402                	lw	s0,0(sp)
     67a:	0121                	addi	sp,sp,8
     67c:	8082                	ret

0000067e <handle_reset>:
     67e:	20000197          	auipc	gp,0x20000
     682:	18218193          	addi	gp,gp,386 # 20000800 <__global_pointer$>
     686:	00018113          	mv	sp,gp
     68a:	08000513          	li	a0,128
     68e:	30051073          	csrw	mstatus,a0
     692:	468d                	li	a3,3
     694:	00000517          	auipc	a0,0x0
     698:	96c50513          	addi	a0,a0,-1684 # 0 <InterruptVector>
     69c:	8d55                	or	a0,a0,a3
     69e:	30551073          	csrw	mtvec,a0
     6a2:	82018513          	addi	a0,gp,-2016 # 20000020 <ssd1306_buffer>
     6a6:	c2018593          	addi	a1,gp,-992 # 20000420 <_ebss>
     6aa:	4601                	li	a2,0
     6ac:	00b55663          	bge	a0,a1,6b8 <handle_reset+0x3a>
     6b0:	c110                	sw	a2,0(a0)
     6b2:	0511                	addi	a0,a0,4
     6b4:	feb54ee3          	blt	a0,a1,6b0 <handle_reset+0x32>
     6b8:	00001517          	auipc	a0,0x1
     6bc:	ac450513          	addi	a0,a0,-1340 # 117c <_data_lma>
     6c0:	20000597          	auipc	a1,0x20000
     6c4:	94058593          	addi	a1,a1,-1728 # 20000000 <lfsr>
     6c8:	82018613          	addi	a2,gp,-2016 # 20000020 <ssd1306_buffer>
     6cc:	00c58863          	beq	a1,a2,6dc <handle_reset+0x5e>
     6d0:	4114                	lw	a3,0(a0)
     6d2:	c194                	sw	a3,0(a1)
     6d4:	0511                	addi	a0,a0,4
     6d6:	0591                	addi	a1,a1,4
     6d8:	fec59ae3          	bne	a1,a2,6cc <handle_reset+0x4e>
     6dc:	e000f7b7          	lui	a5,0xe000f
     6e0:	4705                	li	a4,1
     6e2:	c398                	sw	a4,0(a5)
     6e4:	6785                	lui	a5,0x1
     6e6:	b3278793          	addi	a5,a5,-1230 # b32 <main>
     6ea:	34179073          	csrw	mepc,a5
     6ee:	30200073          	mret

000006f2 <ADC1_IRQHandler>:
     6f2:	a001                	j	6f2 <ADC1_IRQHandler>

000006f4 <NMI_Handler>:
     6f4:	40021737          	lui	a4,0x40021
     6f8:	471c                	lw	a5,8(a4)
     6fa:	008006b7          	lui	a3,0x800
     6fe:	8fd5                	or	a5,a5,a3
     700:	c71c                	sw	a5,8(a4)

00000702 <strlen>:
     702:	87aa                	mv	a5,a0
     704:	0007c703          	lbu	a4,0(a5)
     708:	e701                	bnez	a4,710 <strlen+0xe>
     70a:	40a78533          	sub	a0,a5,a0
     70e:	8082                	ret
     710:	0785                	addi	a5,a5,1
     712:	bfcd                	j	704 <strlen+0x2>

00000714 <mini_vpprintf>:
     714:	fa410113          	addi	sp,sp,-92
     718:	caa2                	sw	s0,84(sp)
     71a:	c8a6                	sw	s1,80(sp)
     71c:	cc86                	sw	ra,88(sp)
     71e:	c02a                	sw	a0,0(sp)
     720:	c22e                	sw	a1,4(sp)
     722:	8432                	mv	s0,a2
     724:	84b6                	mv	s1,a3
     726:	e509                	bnez	a0,730 <mini_vpprintf+0x1c>
     728:	13600793          	li	a5,310
     72c:	c202                	sw	zero,4(sp)
     72e:	c03e                	sw	a5,0(sp)
     730:	ca02                	sw	zero,20(sp)
     732:	00044783          	lbu	a5,0(s0)
     736:	00140713          	addi	a4,s0,1
     73a:	00f10fa3          	sb	a5,31(sp)
     73e:	eb81                	bnez	a5,74e <mini_vpprintf+0x3a>
     740:	40e6                	lw	ra,88(sp)
     742:	4456                	lw	s0,84(sp)
     744:	4552                	lw	a0,20(sp)
     746:	44c6                	lw	s1,80(sp)
     748:	05c10113          	addi	sp,sp,92
     74c:	8082                	ret
     74e:	c63a                	sw	a4,12(sp)
     750:	02500693          	li	a3,37
     754:	02d78063          	beq	a5,a3,774 <mini_vpprintf+0x60>
     758:	4612                	lw	a2,4(sp)
     75a:	4782                	lw	a5,0(sp)
     75c:	4585                	li	a1,1
     75e:	01f10513          	addi	a0,sp,31
     762:	9782                	jalr	a5
     764:	4732                	lw	a4,12(sp)
     766:	c426                	sw	s1,8(sp)
     768:	843a                	mv	s0,a4
     76a:	47d2                	lw	a5,20(sp)
     76c:	44a2                	lw	s1,8(sp)
     76e:	97aa                	add	a5,a5,a0
     770:	ca3e                	sw	a5,20(sp)
     772:	b7c1                	j	732 <mini_vpprintf+0x1e>
     774:	00144783          	lbu	a5,1(s0)
     778:	03000693          	li	a3,48
     77c:	00240713          	addi	a4,s0,2
     780:	00f10fa3          	sb	a5,31(sp)
     784:	c63e                	sw	a5,12(sp)
     786:	08d79363          	bne	a5,a3,80c <mini_vpprintf+0xf8>
     78a:	843a                	mv	s0,a4
     78c:	4681                	li	a3,0
     78e:	4701                	li	a4,0
     790:	45a5                	li	a1,9
     792:	a819                	j	7a8 <mini_vpprintf+0x94>
     794:	00271793          	slli	a5,a4,0x2
     798:	97ba                	add	a5,a5,a4
     79a:	0786                	slli	a5,a5,0x1
     79c:	0405                	addi	s0,s0,1
     79e:	00f60733          	add	a4,a2,a5
     7a2:	fff44783          	lbu	a5,-1(s0)
     7a6:	4685                	li	a3,1
     7a8:	fd078613          	addi	a2,a5,-48
     7ac:	0ff67513          	zext.b	a0,a2
     7b0:	fea5f2e3          	bgeu	a1,a0,794 <mini_vpprintf+0x80>
     7b4:	c299                	beqz	a3,7ba <mini_vpprintf+0xa6>
     7b6:	00f10fa3          	sb	a5,31(sp)
     7ba:	c83a                	sw	a4,16(sp)
     7bc:	46e1                	li	a3,24
     7be:	00e6d363          	bge	a3,a4,7c4 <mini_vpprintf+0xb0>
     7c2:	c836                	sw	a3,16(sp)
     7c4:	06c00613          	li	a2,108
     7c8:	4681                	li	a3,0
     7ca:	00c79863          	bne	a5,a2,7da <mini_vpprintf+0xc6>
     7ce:	00044783          	lbu	a5,0(s0)
     7d2:	4685                	li	a3,1
     7d4:	0405                	addi	s0,s0,1
     7d6:	00f10fa3          	sb	a5,31(sp)
     7da:	01f14603          	lbu	a2,31(sp)
     7de:	06400793          	li	a5,100
     7e2:	06f60563          	beq	a2,a5,84c <mini_vpprintf+0x138>
     7e6:	02c7e763          	bltu	a5,a2,814 <mini_vpprintf+0x100>
     7ea:	05800793          	li	a5,88
     7ee:	0af60063          	beq	a2,a5,88e <mini_vpprintf+0x17a>
     7f2:	06300793          	li	a5,99
     7f6:	0af60d63          	beq	a2,a5,8b0 <mini_vpprintf+0x19c>
     7fa:	d239                	beqz	a2,740 <mini_vpprintf+0x2c>
     7fc:	4612                	lw	a2,4(sp)
     7fe:	4782                	lw	a5,0(sp)
     800:	4585                	li	a1,1
     802:	01f10513          	addi	a0,sp,31
     806:	9782                	jalr	a5
     808:	c426                	sw	s1,8(sp)
     80a:	b785                	j	76a <mini_vpprintf+0x56>
     80c:	02000693          	li	a3,32
     810:	c636                	sw	a3,12(sp)
     812:	bfa5                	j	78a <mini_vpprintf+0x76>
     814:	07500793          	li	a5,117
     818:	02f60a63          	beq	a2,a5,84c <mini_vpprintf+0x138>
     81c:	07800793          	li	a5,120
     820:	06f60763          	beq	a2,a5,88e <mini_vpprintf+0x17a>
     824:	07300793          	li	a5,115
     828:	fcf61ae3          	bne	a2,a5,7fc <mini_vpprintf+0xe8>
     82c:	00448793          	addi	a5,s1,4
     830:	4084                	lw	s1,0(s1)
     832:	cc3a                	sw	a4,24(sp)
     834:	c43e                	sw	a5,8(sp)
     836:	8526                	mv	a0,s1
     838:	35e9                	jal	702 <strlen>
     83a:	4762                	lw	a4,24(sp)
     83c:	85aa                	mv	a1,a0
     83e:	08e05663          	blez	a4,8ca <mini_vpprintf+0x1b6>
     842:	46c2                	lw	a3,16(sp)
     844:	4632                	lw	a2,12(sp)
     846:	1838                	addi	a4,sp,56
     848:	8526                	mv	a0,s1
     84a:	a01d                	j	870 <mini_vpprintf+0x15c>
     84c:	00448793          	addi	a5,s1,4
     850:	c43e                	sw	a5,8(sp)
     852:	c695                	beqz	a3,87e <mini_vpprintf+0x16a>
     854:	f8b60613          	addi	a2,a2,-117
     858:	1018                	addi	a4,sp,32
     85a:	00163693          	seqz	a3,a2
     85e:	4088                	lw	a0,0(s1)
     860:	4601                	li	a2,0
     862:	45a9                	li	a1,10
     864:	327d                	jal	212 <mini_itoa.part.0>
     866:	46c2                	lw	a3,16(sp)
     868:	4632                	lw	a2,12(sp)
     86a:	1838                	addi	a4,sp,56
     86c:	85aa                	mv	a1,a0
     86e:	1008                	addi	a0,sp,32
     870:	3219                	jal	176 <mini_pad>
     872:	4612                	lw	a2,4(sp)
     874:	85aa                	mv	a1,a0
     876:	1828                	addi	a0,sp,56
     878:	4782                	lw	a5,0(sp)
     87a:	9782                	jalr	a5
     87c:	b5fd                	j	76a <mini_vpprintf+0x56>
     87e:	07500793          	li	a5,117
     882:	1018                	addi	a4,sp,32
     884:	4685                	li	a3,1
     886:	fcf60ce3          	beq	a2,a5,85e <mini_vpprintf+0x14a>
     88a:	4681                	li	a3,0
     88c:	bfc9                	j	85e <mini_vpprintf+0x14a>
     88e:	4088                	lw	a0,0(s1)
     890:	fa860613          	addi	a2,a2,-88
     894:	00448793          	addi	a5,s1,4
     898:	1018                	addi	a4,sp,32
     89a:	4685                	li	a3,1
     89c:	00163613          	seqz	a2,a2
     8a0:	45c1                	li	a1,16
     8a2:	c43e                	sw	a5,8(sp)
     8a4:	32bd                	jal	212 <mini_itoa.part.0>
     8a6:	46c2                	lw	a3,16(sp)
     8a8:	4632                	lw	a2,12(sp)
     8aa:	85aa                	mv	a1,a0
     8ac:	1838                	addi	a4,sp,56
     8ae:	b7c1                	j	86e <mini_vpprintf+0x15a>
     8b0:	00448793          	addi	a5,s1,4
     8b4:	c43e                	sw	a5,8(sp)
     8b6:	409c                	lw	a5,0(s1)
     8b8:	46c2                	lw	a3,16(sp)
     8ba:	4632                	lw	a2,12(sp)
     8bc:	00f10fa3          	sb	a5,31(sp)
     8c0:	1838                	addi	a4,sp,56
     8c2:	4585                	li	a1,1
     8c4:	01f10513          	addi	a0,sp,31
     8c8:	b765                	j	870 <mini_vpprintf+0x15c>
     8ca:	4612                	lw	a2,4(sp)
     8cc:	8526                	mv	a0,s1
     8ce:	b76d                	j	878 <mini_vpprintf+0x164>

000008d0 <printf>:
     8d0:	1111                	addi	sp,sp,-28
     8d2:	c632                	sw	a2,12(sp)
     8d4:	862a                	mv	a2,a0
     8d6:	c42e                	sw	a1,8(sp)
     8d8:	c836                	sw	a3,16(sp)
     8da:	4581                	li	a1,0
     8dc:	0034                	addi	a3,sp,8
     8de:	66a00513          	li	a0,1642
     8e2:	c206                	sw	ra,4(sp)
     8e4:	ca3a                	sw	a4,20(sp)
     8e6:	cc3e                	sw	a5,24(sp)
     8e8:	c036                	sw	a3,0(sp)
     8ea:	352d                	jal	714 <mini_vpprintf>
     8ec:	4092                	lw	ra,4(sp)
     8ee:	0171                	addi	sp,sp,28
     8f0:	8082                	ret

000008f2 <ssd1306_i2c_error.isra.0>:
 * error handler
 */
uint8_t ssd1306_i2c_error(uint8_t err)
{
	// report error
	printf("ssd1306_i2c_error - timeout waiting for %s\n\r", errstr[err]);
     8f2:	6785                	lui	a5,0x1
     8f4:	050a                	slli	a0,a0,0x2
     8f6:	fc478793          	addi	a5,a5,-60 # fc4 <errstr>
     8fa:	97aa                	add	a5,a5,a0
     8fc:	438c                	lw	a1,0(a5)
     8fe:	6505                	lui	a0,0x1
uint8_t ssd1306_i2c_error(uint8_t err)
     900:	1171                	addi	sp,sp,-4
	printf("ssd1306_i2c_error - timeout waiting for %s\n\r", errstr[err]);
     902:	f4850513          	addi	a0,a0,-184 # f48 <main+0x416>
uint8_t ssd1306_i2c_error(uint8_t err)
     906:	c006                	sw	ra,0(sp)
	printf("ssd1306_i2c_error - timeout waiting for %s\n\r", errstr[err]);
     908:	37e1                	jal	8d0 <printf>
	
	// reset & initialize I2C
	ssd1306_i2c_setup();

	return 1;
}
     90a:	4082                	lw	ra,0(sp)
     90c:	0111                	addi	sp,sp,4
	ssd1306_i2c_setup();
     90e:	b2d1                	j	2d2 <ssd1306_i2c_setup>

00000910 <ssd1306_i2c_send.constprop.0.isra.0>:
uint8_t ssd1306_i2c_send(uint8_t addr, uint8_t *data, uint8_t sz)
{
	int32_t timeout;
	
	// wait for not busy
	timeout = TIMEOUT_MAX;
     910:	6761                	lui	a4,0x18
	while((I2C1->STAR2 & I2C_STAR2_BUSY) && (timeout--));
     912:	400057b7          	lui	a5,0x40005
	timeout = TIMEOUT_MAX;
     916:	6a070713          	addi	a4,a4,1696 # 186a0 <main.c.99fa8f27+0x15e53>
	while((I2C1->STAR2 & I2C_STAR2_BUSY) && (timeout--));
     91a:	40078793          	addi	a5,a5,1024 # 40005400 <__global_pointer$+0x20004c00>
     91e:	567d                	li	a2,-1
     920:	0187d683          	lhu	a3,24(a5)
     924:	8a89                	andi	a3,a3,2
     926:	cedd                	beqz	a3,9e4 <ssd1306_i2c_send.constprop.0.isra.0+0xd4>
     928:	177d                	addi	a4,a4,-1
     92a:	fec71be3          	bne	a4,a2,920 <ssd1306_i2c_send.constprop.0.isra.0+0x10>
	if(timeout==-1)
		return ssd1306_i2c_error(0);
     92e:	4501                	li	a0,0
     930:	a821                	j	948 <ssd1306_i2c_send.constprop.0.isra.0+0x38>
     932:	67e1                	lui	a5,0x18
     934:	6a178793          	addi	a5,a5,1697 # 186a1 <main.c.99fa8f27+0x15e54>
	// send data one byte at a time
	while(sz--)
	{
		// wait for TX Empty
		timeout = TIMEOUT_MAX;
		while(!(I2C1->STAR1 & I2C_STAR1_TXE) && (timeout--));
     938:	01475683          	lhu	a3,20(a4)
     93c:	0806f693          	andi	a3,a3,128
     940:	e689                	bnez	a3,94a <ssd1306_i2c_send.constprop.0.isra.0+0x3a>
     942:	17fd                	addi	a5,a5,-1
     944:	fbf5                	bnez	a5,938 <ssd1306_i2c_send.constprop.0.isra.0+0x28>
		if(timeout==-1)
			return ssd1306_i2c_error(3);
     946:	450d                	li	a0,3
		return ssd1306_i2c_error(0);
     948:	b76d                	j	8f2 <ssd1306_i2c_error.isra.0>
		
		// send command
		I2C1->DATAR = *data++;
     94a:	00054783          	lbu	a5,0(a0)
     94e:	0505                	addi	a0,a0,1
     950:	00f71823          	sh	a5,16(a4)
	while(sz--)
     954:	fcb51fe3          	bne	a0,a1,932 <ssd1306_i2c_send.constprop.0.isra.0+0x22>
	}

	// wait for tx complete
	timeout = TIMEOUT_MAX;
     958:	66e1                	lui	a3,0x18
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
     95a:	40005737          	lui	a4,0x40005
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_BYTE_TRANSMITTED)) && (timeout--));
     95e:	00070637          	lui	a2,0x70
	timeout = TIMEOUT_MAX;
     962:	6a068693          	addi	a3,a3,1696 # 186a0 <main.c.99fa8f27+0x15e53>
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
     966:	40070713          	addi	a4,a4,1024 # 40005400 <__global_pointer$+0x20004c00>
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_BYTE_TRANSMITTED)) && (timeout--));
     96a:	08460613          	addi	a2,a2,132 # 70084 <main.c.99fa8f27+0x6d837>
     96e:	55fd                	li	a1,-1
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
     970:	01475503          	lhu	a0,20(a4)
     974:	01875783          	lhu	a5,24(a4)
     978:	07c2                	slli	a5,a5,0x10
     97a:	8fc9                	or	a5,a5,a0
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_BYTE_TRANSMITTED)) && (timeout--));
     97c:	8ff1                	and	a5,a5,a2
     97e:	00c78763          	beq	a5,a2,98c <ssd1306_i2c_send.constprop.0.isra.0+0x7c>
     982:	16fd                	addi	a3,a3,-1
     984:	feb696e3          	bne	a3,a1,970 <ssd1306_i2c_send.constprop.0.isra.0+0x60>
	if(timeout==-1)
		return ssd1306_i2c_error(4);
     988:	4511                	li	a0,4
     98a:	bf7d                	j	948 <ssd1306_i2c_send.constprop.0.isra.0+0x38>

	// set STOP condition
	I2C1->CTLR1 |= I2C_CTLR1_STOP;
     98c:	00075783          	lhu	a5,0(a4)
     990:	2007e793          	ori	a5,a5,512
     994:	00f71023          	sh	a5,0(a4)
	
	// we're happy
	return 0;
}
     998:	8082                	ret
		while(!(I2C1->STAR1 & I2C_STAR1_TXE) && (timeout--));
     99a:	40005737          	lui	a4,0x40005
     99e:	95aa                	add	a1,a1,a0
     9a0:	40070713          	addi	a4,a4,1024 # 40005400 <__global_pointer$+0x20004c00>
     9a4:	bf45                	j	954 <ssd1306_i2c_send.constprop.0.isra.0+0x44>
	I2C1->DATAR = addr<<1;
     9a6:	07800793          	li	a5,120
     9aa:	00f71823          	sh	a5,16(a4)
	timeout = TIMEOUT_MAX;
     9ae:	6661                	lui	a2,0x18
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
     9b0:	400056b7          	lui	a3,0x40005
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_TRANSMITTER_MODE_SELECTED)) && (timeout--));
     9b4:	00070737          	lui	a4,0x70
	timeout = TIMEOUT_MAX;
     9b8:	6a060613          	addi	a2,a2,1696 # 186a0 <main.c.99fa8f27+0x15e53>
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
     9bc:	40068693          	addi	a3,a3,1024 # 40005400 <__global_pointer$+0x20004c00>
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_TRANSMITTER_MODE_SELECTED)) && (timeout--));
     9c0:	08270713          	addi	a4,a4,130 # 70082 <main.c.99fa8f27+0x6d835>
     9c4:	537d                	li	t1,-1
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
     9c6:	0146d283          	lhu	t0,20(a3)
     9ca:	0186d783          	lhu	a5,24(a3)
     9ce:	07c2                	slli	a5,a5,0x10
     9d0:	0057e7b3          	or	a5,a5,t0
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_TRANSMITTER_MODE_SELECTED)) && (timeout--));
     9d4:	8ff9                	and	a5,a5,a4
     9d6:	fce782e3          	beq	a5,a4,99a <ssd1306_i2c_send.constprop.0.isra.0+0x8a>
     9da:	167d                	addi	a2,a2,-1
     9dc:	fe6615e3          	bne	a2,t1,9c6 <ssd1306_i2c_send.constprop.0.isra.0+0xb6>
		return ssd1306_i2c_error(2);
     9e0:	4509                	li	a0,2
     9e2:	b79d                	j	948 <ssd1306_i2c_send.constprop.0.isra.0+0x38>
	I2C1->CTLR1 |= I2C_CTLR1_START;
     9e4:	0007d703          	lhu	a4,0(a5)
	timeout = TIMEOUT_MAX;
     9e8:	66e1                	lui	a3,0x18
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_MODE_SELECT)) && (timeout--));
     9ea:	00030637          	lui	a2,0x30
	I2C1->CTLR1 |= I2C_CTLR1_START;
     9ee:	10076713          	ori	a4,a4,256
     9f2:	00e79023          	sh	a4,0(a5)
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
     9f6:	40005737          	lui	a4,0x40005
	timeout = TIMEOUT_MAX;
     9fa:	6a068693          	addi	a3,a3,1696 # 186a0 <main.c.99fa8f27+0x15e53>
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
     9fe:	40070713          	addi	a4,a4,1024 # 40005400 <__global_pointer$+0x20004c00>
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_MODE_SELECT)) && (timeout--));
     a02:	0605                	addi	a2,a2,1 # 30001 <main.c.99fa8f27+0x2d7b4>
     a04:	537d                	li	t1,-1
	uint32_t status = I2C1->STAR1 | (I2C1->STAR2<<16);
     a06:	01475283          	lhu	t0,20(a4)
     a0a:	01875783          	lhu	a5,24(a4)
     a0e:	07c2                	slli	a5,a5,0x10
     a10:	0057e7b3          	or	a5,a5,t0
	while((!ssd1306_i2c_chk_evt(SSD1306_I2C_EVENT_MASTER_MODE_SELECT)) && (timeout--));
     a14:	8ff1                	and	a5,a5,a2
     a16:	f8c788e3          	beq	a5,a2,9a6 <ssd1306_i2c_send.constprop.0.isra.0+0x96>
     a1a:	16fd                	addi	a3,a3,-1
     a1c:	fe6695e3          	bne	a3,t1,a06 <ssd1306_i2c_send.constprop.0.isra.0+0xf6>
		return ssd1306_i2c_error(1);
     a20:	4505                	li	a0,1
     a22:	b71d                	j	948 <ssd1306_i2c_send.constprop.0.isra.0+0x38>

00000a24 <ssd1306_cmd.isra.0>:
uint8_t ssd1306_cmd(uint8_t cmd)
     a24:	fd810113          	addi	sp,sp,-40
	
	/* build command or data packets */
	if(cmd)
	{
		pkt[0] = 0;
		pkt[1] = *data;
     a28:	00a100a3          	sb	a0,1(sp)
	else
	{
		pkt[0] = 0x40;
		memcpy(&pkt[1], data, sz);
	}
	return ssd1306_i2c_send(SSD1306_I2C_ADDR, pkt, sz+1);
     a2c:	4589                	li	a1,2
     a2e:	850a                	mv	a0,sp
     a30:	d206                	sw	ra,36(sp)
		pkt[0] = 0;
     a32:	00010023          	sb	zero,0(sp)
	return ssd1306_i2c_send(SSD1306_I2C_ADDR, pkt, sz+1);
     a36:	3de9                	jal	910 <ssd1306_i2c_send.constprop.0.isra.0>
}
     a38:	5092                	lw	ra,36(sp)
     a3a:	02810113          	addi	sp,sp,40
     a3e:	8082                	ret

00000a40 <memset>:
     a40:	962a                	add	a2,a2,a0
     a42:	87aa                	mv	a5,a0
     a44:	00c79363          	bne	a5,a2,a4a <memset+0xa>
     a48:	8082                	ret
     a4a:	00b78023          	sb	a1,0(a5)
     a4e:	0785                	addi	a5,a5,1
     a50:	bfd5                	j	a44 <memset+0x4>

00000a52 <ssd1306_setbuf.constprop.0>:
	memset(ssd1306_buffer, color ? 0xFF : 0x00, sizeof(ssd1306_buffer));
     a52:	20000537          	lui	a0,0x20000
     a56:	40000613          	li	a2,1024
     a5a:	4581                	li	a1,0
     a5c:	02050513          	addi	a0,a0,32 # 20000020 <ssd1306_buffer>
     a60:	b7c5                	j	a40 <memset>

00000a62 <memcpy>:
     a62:	4781                	li	a5,0
     a64:	00f61363          	bne	a2,a5,a6a <memcpy+0x8>
     a68:	8082                	ret
     a6a:	00f58733          	add	a4,a1,a5
     a6e:	00074683          	lbu	a3,0(a4)
     a72:	00f50733          	add	a4,a0,a5
     a76:	0785                	addi	a5,a5,1
     a78:	00d70023          	sb	a3,0(a4)
     a7c:	b7e5                	j	a64 <memcpy+0x2>

00000a7e <ssd1306_refresh>:
{
     a7e:	7179                	addi	sp,sp,-48
	ssd1306_cmd(SSD1306_COLUMNADDR);
     a80:	02100513          	li	a0,33
{
     a84:	d606                	sw	ra,44(sp)
     a86:	d422                	sw	s0,40(sp)
     a88:	d226                	sw	s1,36(sp)
	ssd1306_cmd(SSD1306_COLUMNADDR);
     a8a:	3f69                	jal	a24 <ssd1306_cmd.isra.0>
	ssd1306_cmd(SSD1306_OFFSET);   // Column start address (0 = reset)
     a8c:	4501                	li	a0,0
     a8e:	3f59                	jal	a24 <ssd1306_cmd.isra.0>
	ssd1306_cmd(SSD1306_OFFSET+SSD1306_W-1); // Column end address (127 = reset)
     a90:	07f00513          	li	a0,127
     a94:	3f41                	jal	a24 <ssd1306_cmd.isra.0>
	ssd1306_cmd(SSD1306_PAGEADDR);
     a96:	02200513          	li	a0,34
     a9a:	3769                	jal	a24 <ssd1306_cmd.isra.0>
	ssd1306_cmd(0); // Page start address (0 = reset)
     a9c:	4501                	li	a0,0
     a9e:	3759                	jal	a24 <ssd1306_cmd.isra.0>
	ssd1306_cmd(7); // Page end address
     aa0:	20000437          	lui	s0,0x20000
     aa4:	451d                	li	a0,7
     aa6:	02040413          	addi	s0,s0,32 # 20000020 <ssd1306_buffer>
     aaa:	3fad                	jal	a24 <ssd1306_cmd.isra.0>
    for(i=0;i<sizeof(ssd1306_buffer);i+=SSD1306_PSZ)
     aac:	40040493          	addi	s1,s0,1024
		pkt[0] = 0x40;
     ab0:	04000793          	li	a5,64
		memcpy(&pkt[1], data, sz);
     ab4:	85a2                	mv	a1,s0
     ab6:	02000613          	li	a2,32
     aba:	00110513          	addi	a0,sp,1
		pkt[0] = 0x40;
     abe:	00f10023          	sb	a5,0(sp)
		memcpy(&pkt[1], data, sz);
     ac2:	3745                	jal	a62 <memcpy>
	return ssd1306_i2c_send(SSD1306_I2C_ADDR, pkt, sz+1);
     ac4:	02100593          	li	a1,33
     ac8:	850a                	mv	a0,sp
     aca:	02040413          	addi	s0,s0,32
     ace:	3589                	jal	910 <ssd1306_i2c_send.constprop.0.isra.0>
     ad0:	fe9410e3          	bne	s0,s1,ab0 <ssd1306_refresh+0x32>
}
     ad4:	50b2                	lw	ra,44(sp)
     ad6:	5422                	lw	s0,40(sp)
     ad8:	5492                	lw	s1,36(sp)
     ada:	6145                	addi	sp,sp,48
     adc:	8082                	ret

00000ade <SystemInit>:
     ade:	400227b7          	lui	a5,0x40022
     ae2:	4705                	li	a4,1
     ae4:	c398                	sw	a4,0(a5)
     ae6:	400217b7          	lui	a5,0x40021
     aea:	01080737          	lui	a4,0x1080
     aee:	0007a223          	sw	zero,4(a5) # 40021004 <__global_pointer$+0x20020804>
     af2:	08170713          	addi	a4,a4,129 # 1080081 <main.c.99fa8f27+0x107d834>
     af6:	c398                	sw	a4,0(a5)
     af8:	009f0737          	lui	a4,0x9f0
     afc:	c798                	sw	a4,8(a5)
     afe:	4398                	lw	a4,0(a5)
     b00:	00671693          	slli	a3,a4,0x6
     b04:	fe06dde3          	bgez	a3,afe <SystemInit+0x20>
     b08:	43d8                	lw	a4,4(a5)
     b0a:	400216b7          	lui	a3,0x40021
     b0e:	9b71                	andi	a4,a4,-4
     b10:	00276713          	ori	a4,a4,2
     b14:	c3d8                	sw	a4,4(a5)
     b16:	4721                	li	a4,8
     b18:	42dc                	lw	a5,4(a3)
     b1a:	8bb1                	andi	a5,a5,12
     b1c:	fee79ee3          	bne	a5,a4,b18 <SystemInit+0x3a>
     b20:	e00007b7          	lui	a5,0xe0000
     b24:	0e07ac23          	sw	zero,248(a5) # e00000f8 <__global_pointer$+0xbffff8f8>
     b28:	08000713          	li	a4,128
     b2c:	0ee7aa23          	sw	a4,244(a5)
     b30:	8082                	ret

00000b32 <main>:
    ssd1306_setbuf(0);
  }
}

int main()
{
     b32:	f4810113          	addi	sp,sp,-184
     b36:	db06                	sw	ra,180(sp)
     b38:	d922                	sw	s0,176(sp)
     b3a:	d726                	sw	s1,172(sp)
    GPIO_port_enable(GPIO_port_A);
     b3c:	40021437          	lui	s0,0x40021
	// 48MHz internal clock
	SystemInit();
     b40:	3f79                	jal	ade <SystemInit>
    GPIO_port_enable(GPIO_port_A);
     b42:	4c1c                	lw	a5,24(s0)
    GPIO_pinMode(BTN_PIN, GPIO_pinMode_I_pullUp, GPIO_Speed_10MHz);
     b44:	400114b7          	lui	s1,0x40011

  init_gpio();

	Delay_Ms( 200 );
     b48:	00125537          	lui	a0,0x125
    GPIO_port_enable(GPIO_port_A);
     b4c:	0047e793          	ori	a5,a5,4
     b50:	cc1c                	sw	a5,24(s0)
    GPIO_port_enable(GPIO_port_D);
     b52:	4c1c                	lw	a5,24(s0)
	Delay_Ms( 200 );
     b54:	f8050513          	addi	a0,a0,-128 # 124f80 <main.c.99fa8f27+0x122733>
    GPIO_port_enable(GPIO_port_D);
     b58:	0207e793          	ori	a5,a5,32
     b5c:	cc1c                	sw	a5,24(s0)
    GPIO_port_enable(GPIO_port_C);
     b5e:	4c1c                	lw	a5,24(s0)
     b60:	0107e793          	ori	a5,a5,16
     b64:	cc1c                	sw	a5,24(s0)
    GPIO_pinMode(BTN_PIN, GPIO_pinMode_I_pullUp, GPIO_Speed_10MHz);
     b66:	40048793          	addi	a5,s1,1024 # 40011400 <__global_pointer$+0x20010c00>
     b6a:	4398                	lw	a4,0(a5)
     b6c:	f0f77713          	andi	a4,a4,-241
     b70:	c398                	sw	a4,0(a5)
     b72:	4398                	lw	a4,0(a5)
     b74:	08076713          	ori	a4,a4,128
     b78:	c398                	sw	a4,0(a5)
     b7a:	4709                	li	a4,2
     b7c:	cb98                	sw	a4,16(a5)
	Delay_Ms( 200 );
     b7e:	e82ff0ef          	jal	200 <DelaySysTick>
 * init I2C and GPIO
 */
uint8_t ssd1306_i2c_init(void)
{
	// Enable GPIOC and I2C
	RCC->APB2PCENR |= RCC_APB2Periph_GPIOC;
     b82:	4c1c                	lw	a5,24(s0)
	RCC->APB1PCENR |= RCC_APB1Periph_I2C1;
     b84:	00200737          	lui	a4,0x200
	RCC->APB2PCENR |= RCC_APB2Periph_GPIOC;
     b88:	0107e793          	ori	a5,a5,16
     b8c:	cc1c                	sw	a5,24(s0)
	RCC->APB1PCENR |= RCC_APB1Periph_I2C1;
     b8e:	4c5c                	lw	a5,28(s0)
     b90:	8fd9                	or	a5,a5,a4
     b92:	cc5c                	sw	a5,28(s0)
	
	// PC1 is SDA, 10MHz Output, alt func, open-drain
	GPIOC->CFGLR &= ~(0xf<<(4*1));
     b94:	409c                	lw	a5,0(s1)
	GPIOC->CFGLR |= (GPIO_Speed_10MHz | GPIO_CNF_OUT_OD_AF)<<(4*1);
	
	// PC2 is SCL, 10MHz Output, alt func, open-drain
	GPIOC->CFGLR &= ~(0xf<<(4*2));
     b96:	777d                	lui	a4,0xfffff
     b98:	0ff70713          	addi	a4,a4,255 # fffff0ff <__global_pointer$+0xdfffe8ff>
	GPIOC->CFGLR &= ~(0xf<<(4*1));
     b9c:	f0f7f793          	andi	a5,a5,-241
     ba0:	c09c                	sw	a5,0(s1)
	GPIOC->CFGLR |= (GPIO_Speed_10MHz | GPIO_CNF_OUT_OD_AF)<<(4*1);
     ba2:	409c                	lw	a5,0(s1)
{
	// pulse reset
	ssd1306_rst();
	
	// initialize OLED
	uint8_t *cmd_list = (uint8_t *)ssd1306_init_array;
     ba4:	6405                	lui	s0,0x1
     ba6:	fd840413          	addi	s0,s0,-40 # fd8 <ssd1306_init_array>
     baa:	0d07e793          	ori	a5,a5,208
     bae:	c09c                	sw	a5,0(s1)
	GPIOC->CFGLR &= ~(0xf<<(4*2));
     bb0:	409c                	lw	a5,0(s1)
     bb2:	8ff9                	and	a5,a5,a4
     bb4:	c09c                	sw	a5,0(s1)
	GPIOC->CFGLR |= (GPIO_Speed_10MHz | GPIO_CNF_OUT_OD_AF)<<(4*2);
     bb6:	409c                	lw	a5,0(s1)
     bb8:	6705                	lui	a4,0x1
     bba:	d0070713          	addi	a4,a4,-768 # d00 <main+0x1ce>
     bbe:	8fd9                	or	a5,a5,a4
     bc0:	c09c                	sw	a5,0(s1)
	GPIOC->CFGLR |= (GPIO_Speed_10MHz | GPIO_CNF_OUT_PP)<<(4*4);
	GPIOC->BSHR = (1<<(16+4));
#endif

	// load I2C regs
	ssd1306_i2c_setup();
     bc2:	f10ff0ef          	jal	2d2 <ssd1306_i2c_setup>
	while(*cmd_list != SSD1306_TERMINATE_CMDS)
     bc6:	00044503          	lbu	a0,0(s0)
     bca:	0ff00793          	li	a5,255
     bce:	08f51c63          	bne	a0,a5,c66 <main+0x134>
		if(ssd1306_cmd(*cmd_list++))
			return 1;
	}
	
	// clear display
	ssd1306_setbuf(0);
     bd2:	3541                	jal	a52 <ssd1306_setbuf.constprop.0>
    for (int i = 0; i < 30; i+=2) {
     bd4:	4401                	li	s0,0
	ssd1306_refresh();
     bd6:	3565                	jal	a7e <ssd1306_refresh>
      ssd1306_setbuf(0);
     bd8:	3dad                	jal	a52 <ssd1306_setbuf.constprop.0>
      ssd1306_drawImage(i, 0, title, 24, 64, 0);
     bda:	6485                	lui	s1,0x1
     bdc:	4781                	li	a5,0
     bde:	8522                	mv	a0,s0
     be0:	04000713          	li	a4,64
     be4:	46e1                	li	a3,24
     be6:	03c48613          	addi	a2,s1,60 # 103c <title>
     bea:	4581                	li	a1,0
     bec:	f3aff0ef          	jal	326 <ssd1306_drawImage>
      ssd1306_refresh();
     bf0:	3579                	jal	a7e <ssd1306_refresh>
      Delay_Ms(100);
     bf2:	00092537          	lui	a0,0x92
     bf6:	7c050513          	addi	a0,a0,1984 # 927c0 <main.c.99fa8f27+0x8ff73>
     bfa:	e06ff0ef          	jal	200 <DelaySysTick>
    for (int i = 0; i < 30; i+=2) {
     bfe:	0409                	addi	s0,s0,2
     c00:	47f9                	li	a5,30
     c02:	fcf41be3          	bne	s0,a5,bd8 <main+0xa6>
    int c = 0;
     c06:	4401                	li	s0,0
    bool button_state = false;
     c08:	c202                	sw	zero,4(sp)
      ssd1306_setbuf(0);
     c0a:	35a1                	jal	a52 <ssd1306_setbuf.constprop.0>
      ssd1306_drawImage(30, 0, title, 24, 64, 0);
     c0c:	4781                	li	a5,0
     c0e:	03c48613          	addi	a2,s1,60
     c12:	04000713          	li	a4,64
     c16:	46e1                	li	a3,24
     c18:	4581                	li	a1,0
     c1a:	4579                	li	a0,30
     c1c:	f0aff0ef          	jal	326 <ssd1306_drawImage>
      if (c > 50) {
     c20:	03200793          	li	a5,50
     c24:	6605                	lui	a2,0x1
     c26:	0487d363          	bge	a5,s0,c6c <main+0x13a>
        ssd1306_drawImage(80, 20, start, 24, 24, 0);
     c2a:	4781                	li	a5,0
        ssd1306_drawImage(80, 20, start, 24, 24, 1);
     c2c:	4761                	li	a4,24
     c2e:	86ba                	mv	a3,a4
     c30:	ff460613          	addi	a2,a2,-12 # ff4 <start>
     c34:	45d1                	li	a1,20
     c36:	05000513          	li	a0,80
     c3a:	eecff0ef          	jal	326 <ssd1306_drawImage>
      ssd1306_refresh();
     c3e:	3581                	jal	a7e <ssd1306_refresh>
      uint8_t button_is_pressed = !GPIO_digitalRead(BTN_PIN);
     c40:	400117b7          	lui	a5,0x40011
     c44:	40078793          	addi	a5,a5,1024 # 40011400 <__global_pointer$+0x20010c00>
     c48:	479c                	lw	a5,8(a5)
      if (button_state && !button_is_pressed){
     c4a:	4712                	lw	a4,4(sp)
     c4c:	8b89                	andi	a5,a5,2
     c4e:	c311                	beqz	a4,c52 <main+0x120>
     c50:	e385                	bnez	a5,c70 <main+0x13e>
      button_state = button_is_pressed;
     c52:	0017b793          	seqz	a5,a5
     c56:	c23e                	sw	a5,4(sp)
      c ++;      
     c58:	0405                	addi	s0,s0,1
      if (c > 100) {
     c5a:	06500793          	li	a5,101
     c5e:	faf416e3          	bne	s0,a5,c0a <main+0xd8>
        c = 0;
     c62:	4401                	li	s0,0
     c64:	b75d                	j	c0a <main+0xd8>
		if(ssd1306_cmd(*cmd_list++))
     c66:	0405                	addi	s0,s0,1
     c68:	3b75                	jal	a24 <ssd1306_cmd.isra.0>
     c6a:	bfb1                	j	bc6 <main+0x94>
        ssd1306_drawImage(80, 20, start, 24, 24, 1);
     c6c:	4785                	li	a5,1
     c6e:	bf7d                	j	c2c <main+0xfa>
		ssd1306_init();

    opening();
    
    // clear display
    ssd1306_setbuf(0);
     c70:	33cd                	jal	a52 <ssd1306_setbuf.constprop.0>
    ssd1306_refresh();
     c72:	3531                	jal	a7e <ssd1306_refresh>
  character enemy[3] = {
     c74:	6585                	lui	a1,0x1
     c76:	06000613          	li	a2,96
     c7a:	ee858593          	addi	a1,a1,-280 # ee8 <main+0x3b6>
     c7e:	00e8                	addi	a0,sp,76
     c80:	33cd                	jal	a62 <memcpy>
  int random_n = get_random(10);
     c82:	4529                	li	a0,10
     c84:	f98ff0ef          	jal	41c <get_random>
  character kuina = {100,kuina_1,kuina_1,kuina_2,init_kuina_x,init_kuina_y,16,16};
     c88:	02d00413          	li	s0,45
  int jump_progress = 0;
     c8c:	c002                	sw	zero,0(sp)
  bool jump_flag = false;
     c8e:	c402                	sw	zero,8(sp)
  bool button_state = false;
     c90:	ca02                	sw	zero,20(sp)
  bool flip_flag = false;
     c92:	c802                	sw	zero,16(sp)
  int flip_c = 0;
     c94:	c602                	sw	zero,12(sp)
    uint8_t button_is_pressed = !GPIO_digitalRead(BTN_PIN); 
     c96:	400117b7          	lui	a5,0x40011
     c9a:	40078793          	addi	a5,a5,1024 # 40011400 <__global_pointer$+0x20010c00>
     c9e:	479c                	lw	a5,8(a5)
    if (!button_state && button_is_pressed && !jump_flag){
     ca0:	4752                	lw	a4,20(sp)
     ca2:	8b89                	andi	a5,a5,2
     ca4:	e311                	bnez	a4,ca8 <main+0x176>
     ca6:	c3c1                	beqz	a5,d26 <main+0x1f4>
    button_state = button_is_pressed;
     ca8:	0017b793          	seqz	a5,a5
     cac:	ca3e                	sw	a5,20(sp)
    if (jump_flag && (max_jump * 2) < jump_progress){
     cae:	47a2                	lw	a5,8(sp)
     cb0:	c385                	beqz	a5,cd0 <main+0x19e>
     cb2:	4702                	lw	a4,0(sp)
     cb4:	03c00793          	li	a5,60
     cb8:	06e7cc63          	blt	a5,a4,d30 <main+0x1fe>
    else if (jump_flag && max_jump >= jump_progress){
     cbc:	4682                	lw	a3,0(sp)
      jump_progress += 1;
     cbe:	00170793          	addi	a5,a4,1
    else if (jump_flag && max_jump >= jump_progress){
     cc2:	4779                	li	a4,30
     cc4:	06d74463          	blt	a4,a3,d2c <main+0x1fa>
      kuina.y -= 1;
     cc8:	147d                	addi	s0,s0,-1
      jump_progress += 1;
     cca:	c03e                	sw	a5,0(sp)
      kuina.y += 1;
     ccc:	4792                	lw	a5,4(sp)
     cce:	c43e                	sw	a5,8(sp)
    flip_c ++;
     cd0:	47b2                	lw	a5,12(sp)
     cd2:	0785                	addi	a5,a5,1
     cd4:	c63e                	sw	a5,12(sp)
    if (flip_c > 20) {
     cd6:	4732                	lw	a4,12(sp)
     cd8:	47d5                	li	a5,21
     cda:	00f71763          	bne	a4,a5,ce8 <main+0x1b6>
      flip_flag = !flip_flag;
     cde:	47c2                	lw	a5,16(sp)
      flip_c = 0;
     ce0:	c602                	sw	zero,12(sp)
      flip_flag = !flip_flag;
     ce2:	0017c793          	xori	a5,a5,1
     ce6:	c83e                	sw	a5,16(sp)
    if (enemy[0].x < 0) {
     ce8:	47f6                	lw	a5,92(sp)
     cea:	0a07d463          	bgez	a5,d92 <main+0x260>
      enemy[0] = enemy[1];
     cee:	02000613          	li	a2,32
     cf2:	10ec                	addi	a1,sp,108
     cf4:	00e8                	addi	a0,sp,76
     cf6:	33b5                	jal	a62 <memcpy>
      enemy[1] = enemy[2];
     cf8:	02000613          	li	a2,32
     cfc:	016c                	addi	a1,sp,140
     cfe:	10e8                	addi	a0,sp,108
     d00:	338d                	jal	a62 <memcpy>
  int character_n = get_random(10);
     d02:	4529                	li	a0,10
     d04:	f18ff0ef          	jal	41c <get_random>
  if (character_n <= 5){
     d08:	4795                	li	a5,5
     d0a:	02a7c863          	blt	a5,a0,d3a <main+0x208>
    enemy[2].img = grass_1;
     d0e:	81818793          	addi	a5,gp,-2024 # 20000018 <grass_1>
     d12:	c93e                	sw	a5,144(sp)
    enemy[2].img_1 = grass_1;
     d14:	cb3e                	sw	a5,148(sp)
    enemy[2].img_2 = grass_1;
     d16:	cd3e                	sw	a5,152(sp)
    enemy[2].y = 53;
     d18:	03500793          	li	a5,53
     d1c:	d13e                	sw	a5,160(sp)
    enemy[2].id = 0;
     d1e:	c702                	sw	zero,140(sp)
    enemy[2].w = 8;
     d20:	47a1                	li	a5,8
    enemy[2].w = 8;
     d22:	d33e                	sw	a5,164(sp)
     d24:	a8b1                	j	d80 <main+0x24e>
    button_state = button_is_pressed;
     d26:	4792                	lw	a5,4(sp)
     d28:	ca3e                	sw	a5,20(sp)
     d2a:	b761                	j	cb2 <main+0x180>
      kuina.y += 1;
     d2c:	0405                	addi	s0,s0,1
     d2e:	bf71                	j	cca <main+0x198>
      kuina.y = init_kuina_y;
     d30:	02d00413          	li	s0,45
      jump_progress = 0;
     d34:	c002                	sw	zero,0(sp)
      jump_flag = false;
     d36:	c402                	sw	zero,8(sp)
     d38:	bf61                	j	cd0 <main+0x19e>
  else if (character_n <= 8){
     d3a:	47a1                	li	a5,8
     d3c:	00a7cf63          	blt	a5,a0,d5a <main+0x228>
    enemy[2].id = 1;
     d40:	4785                	li	a5,1
     d42:	c73e                	sw	a5,140(sp)
    enemy[2].img = pineapple_1;
     d44:	6785                	lui	a5,0x1
     d46:	11c78793          	addi	a5,a5,284 # 111c <pineapple_1>
     d4a:	c93e                	sw	a5,144(sp)
    enemy[2].img_1 = pineapple_1;
     d4c:	cb3e                	sw	a5,148(sp)
    enemy[2].img_2 = pineapple_1;
     d4e:	cd3e                	sw	a5,152(sp)
    enemy[2].y = 45;
     d50:	02d00793          	li	a5,45
     d54:	d13e                	sw	a5,160(sp)
    enemy[2].w = 16;
     d56:	47c1                	li	a5,16
     d58:	b7e9                	j	d22 <main+0x1f0>
  else if (character_n <= 9){
     d5a:	4725                	li	a4,9
     d5c:	12e51c63          	bne	a0,a4,e94 <main+0x362>
    enemy[2].id = 2;
     d60:	4709                	li	a4,2
     d62:	c73a                	sw	a4,140(sp)
    enemy[2].img = mongoose_1;
     d64:	6705                	lui	a4,0x1
     d66:	10c70713          	addi	a4,a4,268 # 110c <mongoose_1>
     d6a:	c93a                	sw	a4,144(sp)
    enemy[2].img_1 = mongoose_1;
     d6c:	cb3a                	sw	a4,148(sp)
    enemy[2].img_2 = mongoose_2;
     d6e:	6705                	lui	a4,0x1
     d70:	0fc70713          	addi	a4,a4,252 # 10fc <mongoose_2>
     d74:	cd3a                	sw	a4,152(sp)
    enemy[2].y = 53;
     d76:	03500713          	li	a4,53
     d7a:	d13a                	sw	a4,160(sp)
    enemy[2].w = 16;
     d7c:	4741                	li	a4,16
     d7e:	d33a                	sw	a4,164(sp)
    enemy[2].h = 8;
     d80:	d53e                	sw	a5,168(sp)
  int enemy_distance = get_random(30);
     d82:	4579                	li	a0,30
     d84:	e98ff0ef          	jal	41c <get_random>
  enemy[2].x = enemy[1].x + distance_buffer + enemy_distance;
     d88:	57f6                	lw	a5,124(sp)
     d8a:	03278793          	addi	a5,a5,50
     d8e:	97aa                	add	a5,a5,a0
     d90:	cf3e                	sw	a5,156(sp)
    if (flip_flag){
     d92:	47c2                	lw	a5,16(sp)
     d94:	12078263          	beqz	a5,eb8 <main+0x386>
      enemy[0].img = enemy[0].img_1;
     d98:	4756                	lw	a4,84(sp)
     d9a:	107c                	addi	a5,sp,44
      enemy[2].img = enemy[2].img_1;
     d9c:	57bc                	lw	a5,104(a5)
      enemy[0].img = enemy[0].img_1;
     d9e:	c8ba                	sw	a4,80(sp)
      enemy[1].img = enemy[1].img_1;
     da0:	5756                	lw	a4,116(sp)
      kuina.img = kuina.img_1;
     da2:	6485                	lui	s1,0x1
     da4:	15c48493          	addi	s1,s1,348 # 115c <kuina_1>
      enemy[1].img = enemy[1].img_1;
     da8:	d8ba                	sw	a4,112(sp)
    ssd1306_drawImage(kuina.x, kuina.y, kuina.img, kuina.w, kuina.h, 0);
     daa:	4741                	li	a4,16
     dac:	86ba                	mv	a3,a4
     dae:	8626                	mv	a2,s1
      enemy[2].img = enemy[2].img_1;
     db0:	c93e                	sw	a5,144(sp)
    ssd1306_drawImage(kuina.x, kuina.y, kuina.img, kuina.w, kuina.h, 0);
     db2:	85a2                	mv	a1,s0
     db4:	4781                	li	a5,0
     db6:	453d                	li	a0,15
     db8:	d6eff0ef          	jal	326 <ssd1306_drawImage>
    ssd1306_drawRect(kuina.x, kuina.y, kuina.w, kuina.h, 1);
     dbc:	46c1                	li	a3,16
     dbe:	8636                	mv	a2,a3
     dc0:	0ff47593          	zext.b	a1,s0
     dc4:	453d                	li	a0,15
     dc6:	f84ff0ef          	jal	54a <ssd1306_drawRect.constprop.0>
    ssd1306_drawImage(-8, 0, kuina.img, kuina.w, kuina.h, 0);
     dca:	4741                	li	a4,16
     dcc:	86ba                	mv	a3,a4
     dce:	8626                	mv	a2,s1
     dd0:	4781                	li	a5,0
     dd2:	4581                	li	a1,0
     dd4:	5561                	li	a0,-8
     dd6:	d50ff0ef          	jal	326 <ssd1306_drawImage>
    ssd1306_drawRect(0, 0, kuina.w, kuina.h, 1);
     dda:	46c1                	li	a3,16
     ddc:	8636                	mv	a2,a3
     dde:	4581                	li	a1,0
     de0:	4501                	li	a0,0
     de2:	f68ff0ef          	jal	54a <ssd1306_drawRect.constprop.0>
     de6:	00e4                	addi	s1,sp,76
      ssd1306_drawImage(enemy[i].x, enemy[i].y, enemy[i].img, enemy[i].w, enemy[i].h, 0);
     de8:	0184c783          	lbu	a5,24(s1)
     dec:	0104a283          	lw	t0,16(s1)
     df0:	01c4a383          	lw	t2,28(s1)
     df4:	cc3e                	sw	a5,24(sp)
     df6:	48cc                	lw	a1,20(s1)
     df8:	46e2                	lw	a3,24(sp)
     dfa:	40d0                	lw	a2,4(s1)
     dfc:	0ff3f713          	zext.b	a4,t2
     e00:	4781                	li	a5,0
     e02:	8516                	mv	a0,t0
     e04:	d41e                	sw	t2,40(sp)
     e06:	d23a                	sw	a4,36(sp)
     e08:	d02e                	sw	a1,32(sp)
     e0a:	ce16                	sw	t0,28(sp)
     e0c:	d1aff0ef          	jal	326 <ssd1306_drawImage>
      ssd1306_drawRect(enemy[i].x, enemy[i].y, enemy[i].w, enemy[i].h, 1);
     e10:	42f2                	lw	t0,28(sp)
     e12:	5712                	lw	a4,36(sp)
     e14:	5582                	lw	a1,32(sp)
     e16:	4662                	lw	a2,24(sp)
     e18:	0ff2f513          	zext.b	a0,t0
     e1c:	86ba                	mv	a3,a4
     e1e:	0ff5f593          	zext.b	a1,a1
     e22:	cc16                	sw	t0,24(sp)
     e24:	f26ff0ef          	jal	54a <ssd1306_drawRect.constprop.0>
      enemy[i].x -= 1;
     e28:	42e2                	lw	t0,24(sp)
     e2a:	fff28793          	addi	a5,t0,-1
     e2e:	c89c                	sw	a5,16(s1)
      if (kuina.x < enemy[i].x && (kuina.x + kuina.w) > enemy[i].x && kuina.y > (init_kuina_y - enemy[i].h)) {
     e30:	12bd                	addi	t0,t0,-17
     e32:	47b9                	li	a5,14
     e34:	0857ec63          	bltu	a5,t0,ecc <main+0x39a>
     e38:	53a2                	lw	t2,40(sp)
     e3a:	02d00793          	li	a5,45
     e3e:	407787b3          	sub	a5,a5,t2
     e42:	0887d563          	bge	a5,s0,ecc <main+0x39a>
        if (enemy[i].id == 1 | enemy[i].id == 2){
     e46:	409c                	lw	a5,0(s1)
     e48:	4705                	li	a4,1
     e4a:	17fd                	addi	a5,a5,-1
     e4c:	08f76063          	bltu	a4,a5,ecc <main+0x39a>
	  Delay_Ms(2000);
     e50:	00b72537          	lui	a0,0xb72
     e54:	b0050513          	addi	a0,a0,-1280 # b71b00 <main.c.99fa8f27+0xb6f2b3>
     e58:	ba8ff0ef          	jal	200 <DelaySysTick>
    char score_txt[30] = "Score:"; 
     e5c:	726f67b7          	lui	a5,0x726f6
     e60:	35378793          	addi	a5,a5,851 # 726f6353 <__global_pointer$+0x526f5b53>
     e64:	d63e                	sw	a5,44(sp)
     e66:	6791                	lui	a5,0x4
     e68:	a6578793          	addi	a5,a5,-1435 # 3a65 <main.c.99fa8f27+0x1218>
     e6c:	4659                	li	a2,22
     e6e:	4581                	li	a1,0
     e70:	1848                	addi	a0,sp,52
     e72:	d83e                	sw	a5,48(sp)
     e74:	36f1                	jal	a40 <memset>
     e76:	107c                	addi	a5,sp,44
    while (*dest != '\0') {
     e78:	0007c703          	lbu	a4,0(a5)
     e7c:	ef31                	bnez	a4,ed8 <main+0x3a6>
     e7e:	6705                	lui	a4,0x1
     e80:	f7870713          	addi	a4,a4,-136 # f78 <main+0x446>
    while (*src != '\0') {
     e84:	00074683          	lbu	a3,0(a4)
     e88:	eab1                	bnez	a3,edc <main+0x3aa>
    *dest = '\0';
     e8a:	00078023          	sb	zero,0(a5)
    ssd1306_refresh();
     e8e:	3ec5                	jal	a7e <ssd1306_refresh>
    ssd1306_setbuf(0);
     e90:	36c9                	jal	a52 <ssd1306_setbuf.constprop.0>
  while (1) {
     e92:	b511                	j	c96 <main+0x164>
  else if (character_n <= 10){
     e94:	4729                	li	a4,10
     e96:	eee516e3          	bne	a0,a4,d82 <main+0x250>
    enemy[2].id = 3;
     e9a:	470d                	li	a4,3
     e9c:	c73a                	sw	a4,140(sp)
    enemy[2].img = earthworm_1;
     e9e:	81018713          	addi	a4,gp,-2032 # 20000010 <earthworm_1>
     ea2:	c93a                	sw	a4,144(sp)
    enemy[2].img_1 = earthworm_1;
     ea4:	cb3a                	sw	a4,148(sp)
    enemy[2].img_2 = earthworm_2;
     ea6:	20000737          	lui	a4,0x20000
     eaa:	00870713          	addi	a4,a4,8 # 20000008 <earthworm_2>
     eae:	cd3a                	sw	a4,152(sp)
    enemy[2].y = 53;
     eb0:	03500713          	li	a4,53
     eb4:	d13a                	sw	a4,160(sp)
     eb6:	b5b5                	j	d22 <main+0x1f0>
      enemy[0].img = enemy[0].img_2;
     eb8:	4766                	lw	a4,88(sp)
     eba:	107c                	addi	a5,sp,44
      kuina.img = kuina.img_2;
     ebc:	6485                	lui	s1,0x1
      enemy[0].img = enemy[0].img_2;
     ebe:	c8ba                	sw	a4,80(sp)
      enemy[1].img = enemy[1].img_2;
     ec0:	5766                	lw	a4,120(sp)
      enemy[2].img = enemy[2].img_2;
     ec2:	57fc                	lw	a5,108(a5)
      kuina.img = kuina.img_2;
     ec4:	13c48493          	addi	s1,s1,316 # 113c <kuina_2>
      enemy[1].img = enemy[1].img_2;
     ec8:	d8ba                	sw	a4,112(sp)
     eca:	b5c5                	j	daa <main+0x278>
    for (int i=0; i < 3; i++){
     ecc:	02048493          	addi	s1,s1,32
     ed0:	117c                	addi	a5,sp,172
     ed2:	f0979be3          	bne	a5,s1,de8 <main+0x2b6>
     ed6:	b759                	j	e5c <main+0x32a>
        dest++;
     ed8:	0785                	addi	a5,a5,1
     eda:	bf79                	j	e78 <main+0x346>
        *dest = *src;
     edc:	00d78023          	sb	a3,0(a5)
        src++;
     ee0:	0705                	addi	a4,a4,1
        dest++;
     ee2:	0785                	addi	a5,a5,1
     ee4:	b745                	j	e84 <main+0x352>
     ee6:	0000                	unimp
     ee8:	0000                	unimp
     eea:	0000                	unimp
     eec:	0018                	.insn	2, 0x0018
     eee:	2000                	.insn	2, 0x2000
     ef0:	0018                	.insn	2, 0x0018
     ef2:	2000                	.insn	2, 0x2000
     ef4:	0018                	.insn	2, 0x0018
     ef6:	2000                	.insn	2, 0x2000
     ef8:	0082                	c.slli64	ra
     efa:	0000                	unimp
     efc:	0035                	c.nop	13
     efe:	0000                	unimp
     f00:	0008                	.insn	2, 0x0008
     f02:	0000                	unimp
     f04:	0008                	.insn	2, 0x0008
     f06:	0000                	unimp
     f08:	0000                	unimp
     f0a:	0000                	unimp
     f0c:	0018                	.insn	2, 0x0018
     f0e:	2000                	.insn	2, 0x2000
     f10:	0018                	.insn	2, 0x0018
     f12:	2000                	.insn	2, 0x2000
     f14:	0018                	.insn	2, 0x0018
     f16:	2000                	.insn	2, 0x2000
     f18:	00a0                	addi	s0,sp,72
     f1a:	0000                	unimp
     f1c:	0035                	c.nop	13
     f1e:	0000                	unimp
     f20:	0008                	.insn	2, 0x0008
     f22:	0000                	unimp
     f24:	0008                	.insn	2, 0x0008
     f26:	0000                	unimp
     f28:	0001                	nop
     f2a:	0000                	unimp
     f2c:	111c                	addi	a5,sp,160
     f2e:	0000                	unimp
     f30:	111c                	addi	a5,sp,160
     f32:	0000                	unimp
     f34:	111c                	addi	a5,sp,160
     f36:	0000                	unimp
     f38:	00d2                	slli	ra,ra,0x14
     f3a:	0000                	unimp
     f3c:	002d                	c.nop	11
     f3e:	0000                	unimp
     f40:	0010                	.insn	2, 0x0010
     f42:	0000                	unimp
     f44:	0010                	.insn	2, 0x0010
     f46:	0000                	unimp
     f48:	31647373          	.insn	4, 0x31647373
     f4c:	5f363033          	.insn	4, 0x5f363033
     f50:	3269                	jal	8da <printf+0xa>
     f52:	72655f63          	bge	a0,t1,1690 <_data_lma+0x514>
     f56:	6f72                	.insn	2, 0x6f72
     f58:	2072                	.insn	2, 0x2072
     f5a:	202d                	jal	f84 <main+0x452>
     f5c:	6974                	.insn	2, 0x6974
     f5e:	656d                	lui	a0,0x1b
     f60:	2074756f          	jal	a0,48966 <main.c.99fa8f27+0x46119>
     f64:	74696177          	.insn	4, 0x74696177
     f68:	6e69                	lui	t3,0x1a
     f6a:	6f662067          	.insn	4, 0x6f662067
     f6e:	2072                	.insn	2, 0x2072
     f70:	7325                	lui	t1,0xfffe9
     f72:	0d0a                	slli	s10,s10,0x2
     f74:	0000                	unimp
     f76:	0000                	unimp
     f78:	3031                	jal	784 <mini_vpprintf+0x70>
     f7a:	0000                	unimp
     f7c:	6f6e                	.insn	2, 0x6f6e
     f7e:	2074                	.insn	2, 0x2074
     f80:	7562                	.insn	2, 0x7562
     f82:	00007973          	.insn	4, 0x7973
     f86:	0000                	unimp
     f88:	616d                	addi	sp,sp,240
     f8a:	72657473          	.insn	4, 0x72657473
     f8e:	6d20                	.insn	2, 0x6d20
     f90:	0065646f          	jal	s0,56f96 <main.c.99fa8f27+0x54749>
     f94:	7274                	.insn	2, 0x7274
     f96:	6e61                	lui	t3,0x18
     f98:	74696d73          	.insn	4, 0x74696d73
     f9c:	6d20                	.insn	2, 0x6d20
     f9e:	0065646f          	jal	s0,56fa4 <main.c.99fa8f27+0x54757>
     fa2:	0000                	unimp
     fa4:	7874                	.insn	2, 0x7874
     fa6:	6520                	.insn	2, 0x6520
     fa8:	706d                	c.lui	zero,0xffffb
     faa:	7974                	.insn	2, 0x7974
     fac:	0000                	unimp
     fae:	0000                	unimp
     fb0:	7274                	.insn	2, 0x7274
     fb2:	6e61                	lui	t3,0x18
     fb4:	74696d73          	.insn	4, 0x74696d73
     fb8:	6320                	.insn	2, 0x6320
     fba:	6c706d6f          	jal	s10,7e80 <main.c.99fa8f27+0x5633>
     fbe:	7465                	lui	s0,0xffff9
     fc0:	0065                	c.nop	25
	...

00000fc4 <errstr>:
     fc4:	0f7c 0000 0f88 0000 0f94 0000 0fa4 0000     |...............
     fd4:	0fb0 0000                                   ....

00000fd8 <ssd1306_init_array>:
     fd8:	d5ae a880 d33f 4000 148d 0020 c8a1 12da     ....?..@.. .....
     fe8:	8f81 f1d9 40db a6a4 ffaf 0000               .....@......

00000ff4 <start>:
     ff4:	0000 0000 0004 7c00 0000 0004 0000 0000     .......|........
    1004:	0068 1400 0000 0014 7800 0000 0000 7800     h........x.....x
    1014:	0000 0014 1400 0000 0078 0000 0000 0004     ........x.......
    1024:	7c00 0000 0004 0000 0000 0024 5400 0000     .|........$..T..
    1034:	0054 4800 0000 0000                         T..H....

0000103c <title>:
	...
    1044:	0000 00f8 0401 0200 00fa 0603 0200 0002     ................
    1054:	0202 0300 00fe 0202 0300 00fe 0000 0000     ................
    1064:	0000 fe03 0200 0002 fe03 0000 0000 0000     ................
    1074:	0000 00f8 0401 0200 00fa 0603 0200 0002     ................
    1084:	0202 0200 0002 0401 0000 00f8 0000 0000     ................
    1094:	0006 1800 0000 0020 c000 0300 00b0 dc00     ...... .........
    10a4:	0000 0026 1a00 0000 0006 0000 0000 00f8     ..&.............
    10b4:	0401 0200 00fa 0603 0200 0002 0202 0200     ................
    10c4:	0002 0401 0000 00f8 0000 0300 00fe 0202     ................
    10d4:	0300 00fe 0400 0000 0018 6000 0100 00a0     ...........`....
    10e4:	5000 0000 002c 1600 0300 00fe 0000 0000     .P..,...........
	...

000010fc <mongoose_2>:
    10fc:	1800 1e00 ff1f ff7f fecf f007 3006 300e     .............0.0

0000110c <mongoose_1>:
    110c:	0800 8e0f ff1f fd7f ffee f08f 681e 4c13     .............h.L

0000111c <pineapple_1>:
    111c:	0008 600c 4862 b01b 600f c007 600d a00a     ...`bH...`...`..
    112c:	600d a00a 600d c7e7 1e79 f81f f00f c007     .`...`..y.......

0000113c <kuina_2>:
    113c:	c03f c03f c0f3 c0f3 fc3f fc3f ff33 ff33     ?.?.....?.?.3.3.
    114c:	cf00 cf00 3c33 3c33 c00c c00c 3030 3030     ....3<3<....0000

0000115c <kuina_1>:
    115c:	c03f c03f c0f3 c0f3 fc3f fc3f ff33 ff33     ?.?.....?.?.3.3.
    116c:	cf00 cf00 3c33 3c33 c00c c00c c00c c00c     ....3<3<........
